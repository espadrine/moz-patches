# HG changeset patch
# Parent a7fadfbad93262a227f70459aa36d968aed3ae61
# User Thaddee Tyl <thaddee.tyl@gmail.com>
Bug 779415 â€” Autocompletion of non-objects

diff --git a/browser/devtools/webconsole/WebConsoleUtils.jsm b/browser/devtools/webconsole/WebConsoleUtils.jsm
--- a/browser/devtools/webconsole/WebConsoleUtils.jsm
+++ b/browser/devtools/webconsole/WebConsoleUtils.jsm
@@ -962,12 +962,12 @@ function JSPropertyProvider(aScope, aInp
 }
 
 /**
- * Get all accessible properties on this object.
+ * Get all accessible properties on this JS value.
  * Filter those properties by name.
  * Take only a certain number of those.
  *
- * @param object obj
- *        Object whose properties we want to collect.
+ * @param any obj
+ *        JS value whose properties we want to collect.
  *
  * @param string matchProp
  *        Filter for properties that match this one.
@@ -978,6 +978,12 @@ function JSPropertyProvider(aScope, aInp
  */
 function getMatchedProps(aObj, aMatchProp = "")
 {
+  if (aObj == null) { return {}; }
+  try {
+    Object.getPrototypeOf(aObj);
+  } catch(e) {
+    aObj = aObj.constructor.prototype;
+  }
   let c = MAX_COMPLETIONS;
   let names = {};   // Using an Object to avoid duplicates.
   let ownNames = Object.getOwnPropertyNames(aObj);
diff --git a/browser/devtools/webconsole/test/browser_webconsole_completion.js b/browser/devtools/webconsole/test/browser_webconsole_completion.js
--- a/browser/devtools/webconsole/test/browser_webconsole_completion.js
+++ b/browser/devtools/webconsole/test/browser_webconsole_completion.js
@@ -98,6 +98,13 @@ function testCompletion(hud) {
 
   is(jsterm.completeNode.value, "                   \n      e", "multi-line completion");
 
+  // Test non-object autocompletion.
+  input.value = "Object.name.sl";
+  jsterm.complete(jsterm.COMPLETE_HINT_ONLY, testNext);
+  yield;
+
+  is(jsterm.completeNode.value, "              ice", "non-object completion");
+
   testDriver = jsterm = input = null;
   executeSoon(finishTest);
   yield;
