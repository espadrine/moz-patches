# HG changeset patch
# Parent e0711fd61833238ca9c34ee2d8dd98d7165e56a4
# User Thaddee Tyl <thaddee.tyl@gmail.com>
Bug 762164 - Implement Autocomplete in Scratchpad

diff --git a/browser/devtools/sourceeditor/orion/Makefile.dryice.js b/browser/devtools/sourceeditor/orion/Makefile.dryice.js
--- a/browser/devtools/sourceeditor/orion/Makefile.dryice.js
+++ b/browser/devtools/sourceeditor/orion/Makefile.dryice.js
@@ -34,6 +34,7 @@ var project = copy.createCommonJsProject
 
 project.ignoredModules["orion/textview/i18nUtil"] = true;
 project.ignoredModules["i18n!orion/textview/nls/messages"] = true;
+project.ignoredModules["i18n!orion/editor/nls/messages"] = true;
 
 copy({
   source: [createOrionScriptPrefix, {
@@ -46,6 +47,9 @@ copy({
       "orion/textview/textDND",
       "orion/textview/textView",
       "orion/textview/undoStack",
+      "orion/editor/contentAssist",
+      "orion/editor/jsContentAssist",
+      "orion/editor/cssContentAssist",
     ],
   }, createOrionScriptSuffix],
   dest: DEST_JS,
diff --git a/browser/devtools/sourceeditor/orion/orion.css b/browser/devtools/sourceeditor/orion/orion.css
--- a/browser/devtools/sourceeditor/orion/orion.css
+++ b/browser/devtools/sourceeditor/orion/orion.css
@@ -8,9 +8,11 @@
 	font-family: monospace;
 	font-size: 10pt;
 }
+::-webkit-scrollbar-corner {
+	background-color: #eeeeee;
+}
 
 .textviewContent {
-  cursor: auto;
 }/* Styles for rulers */
 .ruler {
 	background-color: white;
diff --git a/browser/devtools/sourceeditor/orion/orion.js b/browser/devtools/sourceeditor/orion/orion.js
--- a/browser/devtools/sourceeditor/orion/orion.js
+++ b/browser/devtools/sourceeditor/orion/orion.js
@@ -95,16 +95,15 @@ define("examples/textview/textStyler", [
 	var KEYWORD = 2;
 	var NUMBER = 3;
 	var STRING = 4;
-	var MULTILINE_STRING = 5;
-	var SINGLELINE_COMMENT = 6;
-	var MULTILINE_COMMENT = 7;
-	var DOC_COMMENT = 8;
-	var WHITE = 9;
-	var WHITE_TAB = 10;
-	var WHITE_SPACE = 11;
-	var HTML_MARKUP = 12;
-	var DOC_TAG = 13;
-	var TASK_TAG = 14;
+	var SINGLELINE_COMMENT = 5;
+	var MULTILINE_COMMENT = 6;
+	var DOC_COMMENT = 7;
+	var WHITE = 8;
+	var WHITE_TAB = 9;
+	var WHITE_SPACE = 10;
+	var HTML_MARKUP = 11;
+	var DOC_TAG = 12;
+	var TASK_TAG = 13;
 
 	// Styles 
 	var singleCommentStyle = {styleClass: "token_singleline_comment"};
@@ -214,7 +213,7 @@ define("examples/textview/textStyler", [
 		nextToken: function() {
 			this.startOffset = this.offset;
 			while (true) {
-				var c = this._read(), result;
+				var c = this._read();
 				switch (c) {
 					case -1: return null;
 					case 47:	// SLASH -> comment
@@ -253,57 +252,35 @@ define("examples/textview/textStyler", [
 						this._unread(c);
 						return UNKOWN;
 					case 39:	// SINGLE QUOTE -> char const
-						result = STRING;
 						while(true) {
 							c = this._read();
 							switch (c) {
 								case 39:
-									return result;
+									return STRING;
 								case 13:
 								case 10:
 								case -1:
 									this._unread(c);
-									return result;
+									return STRING;
 								case 92: // BACKSLASH
 									c = this._read();
-									switch (c) {
-										case 10: result = MULTILINE_STRING; break;
-										case 13:
-											result = MULTILINE_STRING;
-											c = this._read();
-											if (c !== 10) {
-												this._unread(c);
-											}
-											break;
-									}
 									break;
 							}
 						}
 						break;
 					case 34:	// DOUBLE QUOTE -> string
-						result = STRING;
 						while(true) {
 							c = this._read();
 							switch (c) {
 								case 34: // DOUBLE QUOTE
-									return result;
+									return STRING;
 								case 13:
 								case 10:
 								case -1:
 									this._unread(c);
-									return result;
+									return STRING;
 								case 92: // BACKSLASH
 									c = this._read();
-									switch (c) {
-										case 10: result = MULTILINE_STRING; break;
-										case 13:
-											result = MULTILINE_STRING;
-											c = this._read();
-											if (c !== 10) {
-												this._unread(c);
-											}
-											break;
-									}
 									break;
 							}
 						}
@@ -652,20 +629,13 @@ define("examples/textview/textStyler", [
 				if (offset < commentStart) {
 					this._parse(text.substring(offset - start, commentStart - start), offset, styles);
 				}
-				var type = comments[i].type, style;
-				switch (type) {
-					case DOC_COMMENT: style = docCommentStyle; break;
-					case MULTILINE_COMMENT: style = multiCommentStyle; break;
-					case MULTILINE_STRING: style = stringStyle; break;
-				}
-				var s = Math.max(offset, commentStart);
-				var e = Math.min(end, commentEnd);
-				if ((type === DOC_COMMENT || type === MULTILINE_COMMENT) && (this.whitespacesVisible || this.detectHyperlinks)) {
-					this._parseComment(text.substring(s - start, e - start), s, styles, style, type);
-				} else if (type === MULTILINE_STRING && this.whitespacesVisible) {
-					this._parseString(text.substring(s - start, e - start), s, styles, stringStyle);
+				var style = comments[i].type === DOC_COMMENT ? docCommentStyle : multiCommentStyle;
+				if (this.whitespacesVisible || this.detectHyperlinks) {
+					var s = Math.max(offset, commentStart);
+					var e = Math.min(end, commentEnd);
+					this._parseComment(text.substring(s - start, e - start), s, styles, style, comments[i].type);
 				} else {
-					styles.push({start: s, end: e, style: style});
+					styles.push({start: commentStart, end: commentEnd, style: style});
 				}
 				offset = commentEnd;
 			}
@@ -691,7 +661,6 @@ define("examples/textview/textStyler", [
 				switch (token) {
 					case KEYWORD: style = keywordStyle; break;
 					case NUMBER: style = numberStyle; break;
-					case MULTILINE_STRING:
 					case STRING:
 						if (this.whitespacesVisible) {
 							this._parseString(scanner.getData(), tokenStart, styles, stringStyle);
@@ -839,14 +808,17 @@ define("examples/textview/textStyler", [
 			scanner.setText(text);
 			var result = [];
 			while ((token = scanner.nextToken())) {
-				if (token === MULTILINE_COMMENT || token === DOC_COMMENT || token === MULTILINE_STRING) {
-					result.push({
+				if (token === MULTILINE_COMMENT || token === DOC_COMMENT) {
+					var comment = {
 						start: scanner.getStartOffset() + offset,
 						end: scanner.getOffset() + offset,
 						type: token
-					});
-				}
-				if (token === SINGLELINE_COMMENT || token === MULTILINE_COMMENT || token === DOC_COMMENT) {
+					};
+					result.push(comment);
+					//TODO can we avoid this work if edition does not overlap comment?
+					this._computeTasks(token, scanner.getStartOffset() + offset, scanner.getOffset() + offset);
+				}
+				if (token === SINGLELINE_COMMENT) {
 					//TODO can we avoid this work if edition does not overlap comment?
 					this._computeTasks(token, scanner.getStartOffset() + offset, scanner.getOffset() + offset);
 				}
@@ -1154,7 +1126,7 @@ define("examples/textview/textStyler", [
 
 /*global define */
 
-define("orion/textview/annotations", ['i18n!orion/textview/nls/messages', 'orion/textview/eventTarget'], function(messages, mEventTarget) { //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-0$
+define("orion/textview/annotations", ['i18n!orion/textview/nls/messages', 'orion/textview/eventTarget'], function(messages, mEventTarget) {
 	/**
 	 * @class This object represents a decoration attached to a range of text. Annotations are added to a
 	 * <code>AnnotationModel</code> which is attached to a <code>TextModel</code>.
@@ -1195,10 +1167,10 @@ define("orion/textview/annotations", ['i
 	}
 	
 	FoldingAnnotation.prototype = /** @lends orion.textview.FoldingAnnotation.prototype */ {
-		_expandedHTML: "<div class='annotationHTML expanded'></div>", //$NON-NLS-0$
-		_expandedStyle: {styleClass: "annotation expanded"}, //$NON-NLS-0$
-		_collapsedHTML: "<div class='annotationHTML collapsed'></div>", //$NON-NLS-0$
-		_collapsedStyle: {styleClass: "annotation collapsed"}, //$NON-NLS-0$
+		_expandedHTML: "<div class='annotationHTML expanded'></div>",
+		_expandedStyle: {styleClass: "annotation expanded"}, 
+		_collapsedHTML: "<div class='annotationHTML collapsed'></div>",
+		_collapsedStyle: {styleClass: "annotation collapsed"},
 		/**
 		 * Collapses the annotation.
 		 */
@@ -1237,47 +1209,47 @@ define("orion/textview/annotations", ['i
 	/**
 	 * Error annotation type.
 	 */
-	AnnotationType.ANNOTATION_ERROR = "orion.annotation.error"; //$NON-NLS-0$
+	AnnotationType.ANNOTATION_ERROR = "orion.annotation.error";
 	/**
 	 * Warning annotation type.
 	 */
-	AnnotationType.ANNOTATION_WARNING = "orion.annotation.warning"; //$NON-NLS-0$
+	AnnotationType.ANNOTATION_WARNING = "orion.annotation.warning";
 	/**
 	 * Task annotation type.
 	 */
-	AnnotationType.ANNOTATION_TASK = "orion.annotation.task"; //$NON-NLS-0$
+	AnnotationType.ANNOTATION_TASK = "orion.annotation.task";
 	/**
 	 * Breakpoint annotation type.
 	 */
-	AnnotationType.ANNOTATION_BREAKPOINT = "orion.annotation.breakpoint"; //$NON-NLS-0$
+	AnnotationType.ANNOTATION_BREAKPOINT = "orion.annotation.breakpoint";
 	/**
 	 * Bookmark annotation type.
 	 */
-	AnnotationType.ANNOTATION_BOOKMARK = "orion.annotation.bookmark"; //$NON-NLS-0$
+	AnnotationType.ANNOTATION_BOOKMARK = "orion.annotation.bookmark";
 	/**
 	 * Folding annotation type.
 	 */
-	AnnotationType.ANNOTATION_FOLDING = "orion.annotation.folding"; //$NON-NLS-0$
+	AnnotationType.ANNOTATION_FOLDING = "orion.annotation.folding";
 	/**
 	 * Curent bracket annotation type.
 	 */
-	AnnotationType.ANNOTATION_CURRENT_BRACKET = "orion.annotation.currentBracket"; //$NON-NLS-0$
+	AnnotationType.ANNOTATION_CURRENT_BRACKET = "orion.annotation.currentBracket";
 	/**
 	 * Matching bracket annotation type.
 	 */
-	AnnotationType.ANNOTATION_MATCHING_BRACKET = "orion.annotation.matchingBracket"; //$NON-NLS-0$
+	AnnotationType.ANNOTATION_MATCHING_BRACKET = "orion.annotation.matchingBracket";
 	/**
 	 * Current line annotation type.
 	 */
-	AnnotationType.ANNOTATION_CURRENT_LINE = "orion.annotation.currentLine"; //$NON-NLS-0$
+	AnnotationType.ANNOTATION_CURRENT_LINE = "orion.annotation.currentLine";
 	/**
 	 * Current search annotation type.
 	 */
-	AnnotationType.ANNOTATION_CURRENT_SEARCH = "orion.annotation.currentSearch"; //$NON-NLS-0$
+	AnnotationType.ANNOTATION_CURRENT_SEARCH = "orion.annotation.currentSearch";
 	/**
 	 * Matching search annotation type.
 	 */
-	AnnotationType.ANNOTATION_MATCHING_SEARCH = "orion.annotation.matchingSearch"; //$NON-NLS-0$
+	AnnotationType.ANNOTATION_MATCHING_SEARCH = "orion.annotation.matchingSearch";
 	
 	/** @private */
 	var annotationTypes = {};
@@ -1291,7 +1263,7 @@ define("orion/textview/annotations", ['i
 	 *		properties.	 */
 	AnnotationType.registerType = function(type, properties) {
 		var constructor = properties;
-		if (typeof constructor !== "function") { //$NON-NLS-0$
+		if (typeof constructor !== "function") {
 			constructor = function(start, end, title) {
 				this.start = start;
 				this.end = end;
@@ -1332,18 +1304,18 @@ define("orion/textview/annotations", ['i
 	
 	/** @private */
 	function registerType(type, lineStyling) {
-		var index = type.lastIndexOf('.'); //$NON-NLS-0$
+		var index = type.lastIndexOf('.');
 		var suffix = type.substring(index + 1);
 		var properties = {
 			title: messages[suffix],
-			style: {styleClass: "annotation " + suffix}, //$NON-NLS-0$
-			html: "<div class='annotationHTML " + suffix + "'></div>", //$NON-NLS-1$ //$NON-NLS-0$
-			overviewStyle: {styleClass: "annotationOverview " + suffix} //$NON-NLS-0$
+			style: {styleClass: "annotation " + suffix},
+			html: "<div class='annotationHTML " + suffix + "'></div>",
+			overviewStyle: {styleClass: "annotationOverview " + suffix}
 		};
 		if (lineStyling) {
-			properties.lineStyle = {styleClass: "annotationLine " + suffix}; //$NON-NLS-0$
+			properties.lineStyle = {styleClass: "annotationLine " + suffix};
 		} else {
-			properties.rangeStyle = {styleClass: "annotationRange " + suffix}; //$NON-NLS-0$
+			properties.rangeStyle = {styleClass: "annotationRange " + suffix};
 		}
 		AnnotationType.registerType(type, properties);
 	}
@@ -1517,7 +1489,7 @@ define("orion/textview/annotations", ['i
 			var index = this._binarySearch(annotations, annotation.start);
 			annotations.splice(index, 0, annotation);
 			var e = {
-				type: "Changed", //$NON-NLS-0$
+				type: "Changed",
 				added: [annotation],
 				removed: [],
 				changed: []
@@ -1593,7 +1565,7 @@ define("orion/textview/annotations", ['i
 			var index = this._getAnnotationIndex(annotation);
 			if (index < 0) { return; }
 			var e = {
-				type: "Changed", //$NON-NLS-0$
+				type: "Changed",
 				added: [],
 				removed: [],
 				changed: [annotation]
@@ -1637,7 +1609,7 @@ define("orion/textview/annotations", ['i
 				annotations = [];
 			}
 			var e = {
-				type: "Changed", //$NON-NLS-0$
+				type: "Changed",
 				removed: removed,
 				added: [],
 				changed: []
@@ -1657,7 +1629,7 @@ define("orion/textview/annotations", ['i
 			var index = this._getAnnotationIndex(annotation);
 			if (index < 0) { return; }
 			var e = {
-				type: "Changed", //$NON-NLS-0$
+				type: "Changed",
 				removed: this._annotations.splice(index, 1),
 				added: [],
 				changed: []
@@ -1692,7 +1664,7 @@ define("orion/textview/annotations", ['i
 				annotations.splice(index, 0, annotation);
 			}
 			var e = {
-				type: "Changed", //$NON-NLS-0$
+				type: "Changed",
 				removed: removed,
 				added: add,
 				changed: []
@@ -1710,11 +1682,11 @@ define("orion/textview/annotations", ['i
 		 */
 		setTextModel: function(textModel) {
 			if (this._model) {
-				this._model.removeEventListener("Changed", this._listener.onChanged); //$NON-NLS-0$
+				this._model.removeEventListener("Changed", this._listener.onChanged);
 			}
 			this._model = textModel;
 			if (this._model) {
-				this._model.addEventListener("Changed", this._listener.onChanged); //$NON-NLS-0$
+				this._model.addEventListener("Changed", this._listener.onChanged);
 			}
 		},
 		/** @ignore */
@@ -1752,7 +1724,7 @@ define("orion/textview/annotations", ['i
 			var startIndex = 0;
 			if (!(0 <= startIndex && startIndex < annotations.length)) { return; }
 			var e = {
-				type: "Changed", //$NON-NLS-0$
+				type: "Changed",
 				added: [],
 				removed: [],
 				changed: [],
@@ -1812,9 +1784,9 @@ define("orion/textview/annotations", ['i
 				self._onAnnotationModelChanged(e);
 			}
 		};
-		view.addEventListener("Destroy", this._listener.onDestroy); //$NON-NLS-0$
-		view.addEventListener("LineStyle", this._listener.onLineStyle); //$NON-NLS-0$
-		annotationModel.addEventListener("Changed", this._listener.onChanged); //$NON-NLS-0$
+		view.addEventListener("Destroy", this._listener.onDestroy);
+		view.addEventListener("LineStyle", this._listener.onLineStyle);
+		annotationModel.addEventListener("Changed", this._listener.onChanged);
 	}
 	AnnotationStyler.prototype = /** @lends orion.textview.AnnotationStyler.prototype */ {
 		/**
@@ -1826,13 +1798,13 @@ define("orion/textview/annotations", ['i
 		destroy: function() {
 			var view = this._view;
 			if (view) {
-				view.removeEventListener("Destroy", this._listener.onDestroy); //$NON-NLS-0$
-				view.removeEventListener("LineStyle", this._listener.onLineStyle); //$NON-NLS-0$
+				view.removeEventListener("Destroy", this._listener.onDestroy);
+				view.removeEventListener("LineStyle", this._listener.onLineStyle);
 				this.view = null;
 			}
 			var annotationModel = this._annotationModel;
 			if (annotationModel) {
-				annotationModel.removeEventListener("Changed", this._listener.onChanged); //$NON-NLS-0$
+				annotationModel.removeEventListener("Changed", this._listener.onChanged);
 				annotationModel = null;
 			}
 		},
@@ -1840,7 +1812,7 @@ define("orion/textview/annotations", ['i
 			if (style) {
 				if (!result) { result = {}; }
 				if (result.styleClass && style.styleClass && result.styleClass !== style.styleClass) {
-					result.styleClass += " " + style.styleClass; //$NON-NLS-0$
+					result.styleClass += " " + style.styleClass;
 				} else {
 					result.styleClass = style.styleClass;
 				}
@@ -1982,7 +1954,7 @@ define("orion/textview/annotations", ['i
  ******************************************************************************/
  
 /*global define */
-define("orion/textview/eventTarget", [], function() { //$NON-NLS-0$
+define("orion/textview/eventTarget", [], function() {
 	/** 
 	 * Constructs a new EventTarget object.
 	 * 
@@ -2039,9 +2011,9 @@ define("orion/textview/eventTarget", [],
 						for (var i=0, len=listeners.length; i < len; i++) {
 							if (listeners[i]) {
 								var l = listeners[i].listener;
-								if (typeof l === "function") { //$NON-NLS-0$
+								if (typeof l === "function") {
 									l.call(this, evt);
-								} else if (l.handleEvent && typeof l.handleEvent === "function") { //$NON-NLS-0$
+								} else if (l.handleEvent && typeof l.handleEvent === "function") {
 									l.handleEvent(evt);
 								}
 							}
@@ -3659,7 +3631,7 @@ define("orion/editor/regex", [], functio
 
 /*global define setTimeout clearTimeout setInterval clearInterval Node */
 
-define("orion/textview/rulers", ['i18n!orion/textview/nls/messages', 'orion/textview/annotations', 'orion/textview/tooltip', 'orion/textview/i18nUtil'], function(messages, mAnnotations, mTooltip, i18nUtil) { //$NON-NLS-4$ //$NON-NLS-3$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-0$
+define("orion/textview/rulers", ['i18n!orion/textview/nls/messages', 'orion/textview/annotations', 'orion/textview/tooltip', 'orion/textview/i18nUtil'], function(messages, mAnnotations, mTooltip, i18nUtil) {
 
 	/**
 	 * Constructs a new ruler. 
@@ -3697,8 +3669,8 @@ define("orion/textview/rulers", ['i18n!o
 	 * @borrows orion.textview.AnnotationTypeList#removeAnnotationType as #removeAnnotationType
 	 */
 	function Ruler (annotationModel, rulerLocation, rulerOverview, rulerStyle) {
-		this._location = rulerLocation || "left"; //$NON-NLS-0$
-		this._overview = rulerOverview || "page"; //$NON-NLS-0$
+		this._location = rulerLocation || "left";
+		this._overview = rulerOverview || "page";
 		this._rulerStyle = rulerStyle;
 		this._view = null;
 		var self = this;
@@ -3830,11 +3802,11 @@ define("orion/textview/rulers", ['i18n!o
 		 */
 		setAnnotationModel: function (annotationModel) {
 			if (this._annotationModel) {
-				this._annotationModel.removEventListener("Changed", this._listener.onAnnotationModelChanged); //$NON-NLS-0$
+				this._annotationModel.removEventListener("Changed", this._listener.onAnnotationModelChanged); 
 			}
 			this._annotationModel = annotationModel;
 			if (this._annotationModel) {
-				this._annotationModel.addEventListener("Changed", this._listener.onAnnotationModelChanged); //$NON-NLS-0$
+				this._annotationModel.addEventListener("Changed", this._listener.onAnnotationModelChanged); 
 			}
 		},
 		/**
@@ -3872,11 +3844,11 @@ define("orion/textview/rulers", ['i18n!o
 		 */
 		setView: function (view) {
 			if (this._onTextModelChanged && this._view) {
-				this._view.removeEventListener("ModelChanged", this._listener.onTextModelChanged); //$NON-NLS-0$
+				this._view.removeEventListener("ModelChanged", this._listener.onTextModelChanged); 
 			}
 			this._view = view;
 			if (this._onTextModelChanged && this._view) {
-				this._view.addEventListener("ModelChanged", this._listener.onTextModelChanged); //$NON-NLS-0$
+				this._view.addEventListener("ModelChanged", this._listener.onTextModelChanged);
 			}
 		},
 		/**
@@ -3962,15 +3934,15 @@ define("orion/textview/rulers", ['i18n!o
 				anchor: this.getLocation()
 			};
 			var rect = view.getClientArea();
-			if (this.getOverview() === "document") { //$NON-NLS-0$
-				rect.y = view.convert({y: y}, "view", "document").y; //$NON-NLS-1$ //$NON-NLS-0$
+			if (this.getOverview() === "document") {
+				rect.y = view.convert({y: y}, "view", "document").y;
 			} else {
 				rect.y = view.getLocationAtOffset(model.getLineStart(lineIndex)).y;
 			}
-			view.convert(rect, "document", "page"); //$NON-NLS-1$ //$NON-NLS-0$
+			view.convert(rect, "document", "page");
 			info.x = rect.x;
 			info.y = rect.y;
-			if (info.anchor === "right") { //$NON-NLS-0$
+			if (info.anchor === "right") {
 				info.x += rect.width;
 			}
 			return info;
@@ -4033,7 +4005,7 @@ define("orion/textview/rulers", ['i18n!o
 			if (style) {
 				if (!result) { result = {}; }
 				if (result.styleClass && style.styleClass && result.styleClass !== style.styleClass) {
-					result.styleClass += " " + style.styleClass; //$NON-NLS-0$
+					result.styleClass += " " + style.styleClass;
 				} else {
 					result.styleClass = style.styleClass;
 				}
@@ -4078,9 +4050,9 @@ define("orion/textview/rulers", ['i18n!o
 	 * @name orion.textview.LineNumberRuler
 	 */
 	function LineNumberRuler (annotationModel, rulerLocation, rulerStyle, oddStyle, evenStyle) {
-		Ruler.call(this, annotationModel, rulerLocation, "page", rulerStyle); //$NON-NLS-0$
-		this._oddStyle = oddStyle || {style: {backgroundColor: "white"}}; //$NON-NLS-0$
-		this._evenStyle = evenStyle || {style: {backgroundColor: "white"}}; //$NON-NLS-0$
+		Ruler.call(this, annotationModel, rulerLocation, "page", rulerStyle);
+		this._oddStyle = oddStyle || {style: {backgroundColor: "white"}};
+		this._evenStyle = evenStyle || {style: {backgroundColor: "white"}};
 		this._numOfDigits = 0;
 	}
 	LineNumberRuler.prototype = new Ruler(); 
@@ -4150,7 +4122,7 @@ define("orion/textview/rulers", ['i18n!o
 	 * @name orion.textview.AnnotationRuler
 	 */
 	function AnnotationRuler (annotationModel, rulerLocation, rulerStyle) {
-		Ruler.call(this, annotationModel, rulerLocation, "page", rulerStyle); //$NON-NLS-0$
+		Ruler.call(this, annotationModel, rulerLocation, "page", rulerStyle);
 	}
 	AnnotationRuler.prototype = new Ruler();
 	
@@ -4176,13 +4148,13 @@ define("orion/textview/rulers", ['i18n!o
 	 * @name orion.textview.OverviewRuler
 	 */
 	function OverviewRuler (annotationModel, rulerLocation, rulerStyle) {
-		Ruler.call(this, annotationModel, rulerLocation, "document", rulerStyle); //$NON-NLS-0$
+		Ruler.call(this, annotationModel, rulerLocation, "document", rulerStyle);
 	}
 	OverviewRuler.prototype = new Ruler();
 	
 	/** @ignore */
 	OverviewRuler.prototype.getRulerStyle = function() {
-		var result = {style: {lineHeight: "1px", fontSize: "1px"}}; //$NON-NLS-1$ //$NON-NLS-0$
+		var result = {style: {lineHeight: "1px", fontSize: "1px"}};
 		result = this._mergeStyle(result, this._rulerStyle);
 		return result;
 	};
@@ -4211,7 +4183,7 @@ define("orion/textview/rulers", ['i18n!o
 		if (!result) {
 			//TODO annotationLineCount does not work when there are folded lines
 			var height = 3 * annotationLineCount;
-			result = {html: "&nbsp;", style: { style: {height: height + "px"}}}; //$NON-NLS-1$ //$NON-NLS-0$
+			result = {html: "&nbsp;", style: { style: {height: height + "px"}}};
 			result.style = this._mergeStyle(result.style, annotation.overviewStyle);
 		}
 		return result;
@@ -4332,13 +4304,13 @@ define("orion/textview/rulers", ['i18n!o
 
 /*global define setTimeout clearTimeout setInterval clearInterval Node */
 
-define("orion/textview/tooltip", ['i18n!orion/textview/nls/messages', 'orion/textview/textView', 'orion/textview/textModel', 'orion/textview/projectionTextModel'], function(messages, mTextView, mTextModel, mProjectionTextModel) { //$NON-NLS-4$ //$NON-NLS-3$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-0$
+define("orion/textview/tooltip", ['i18n!orion/textview/nls/messages', 'orion/textview/textView', 'orion/textview/textModel', 'orion/textview/projectionTextModel'], function(messages, mTextView, mTextModel, mProjectionTextModel) {
 
 	/** @private */
 	function Tooltip (view) {
 		this._view = view;
-		this._create(view.getOptions("parent").ownerDocument); //$NON-NLS-0$
-		view.addEventListener("Destroy", this, this.destroy); //$NON-NLS-0$
+		this._create(view.getOptions("parent").ownerDocument);
+		view.addEventListener("Destroy", this, this.destroy);
 	}
 	Tooltip.getTooltip = function(view) {
 		if (!view._tooltip) {
@@ -4349,11 +4321,11 @@ define("orion/textview/tooltip", ['i18n!
 	Tooltip.prototype = /** @lends orion.textview.Tooltip.prototype */ {
 		_create: function(document) {
 			if (this._tooltipDiv) { return; }
-			var tooltipDiv = this._tooltipDiv = document.createElement("DIV"); //$NON-NLS-0$
-			tooltipDiv.className = "textviewTooltip"; //$NON-NLS-0$
-			tooltipDiv.setAttribute("aria-live", "assertive"); //$NON-NLS-1$ //$NON-NLS-0$
-			tooltipDiv.setAttribute("aria-atomic", "true"); //$NON-NLS-1$ //$NON-NLS-0$
-			var tooltipContents = this._tooltipContents = document.createElement("DIV"); //$NON-NLS-0$
+			var tooltipDiv = this._tooltipDiv = document.createElement("DIV");
+			tooltipDiv.className = "textviewTooltip";
+			tooltipDiv.setAttribute("aria-live", "assertive");
+			tooltipDiv.setAttribute("aria-atomic", "true");
+			var tooltipContents = this._tooltipContents = document.createElement("DIV");
 			tooltipDiv.appendChild(tooltipContents);
 			document.body.appendChild(tooltipDiv);
 			this.hide();
@@ -4374,7 +4346,7 @@ define("orion/textview/tooltip", ['i18n!
 				this._tooltipContents.innerHTML = "";
 			}
 			if (this._tooltipDiv) {
-				this._tooltipDiv.style.visibility = "hidden"; //$NON-NLS-0$
+				this._tooltipDiv.style.visibility = "hidden";
 			}
 			if (this._showTimeout) {
 				clearTimeout(this._showTimeout);
@@ -4390,7 +4362,7 @@ define("orion/textview/tooltip", ['i18n!
 			}
 		},
 		isVisible: function() {
-			return this._tooltipDiv && this._tooltipDiv.style.visibility === "visible"; //$NON-NLS-0$
+			return this._tooltipDiv && this._tooltipDiv.style.visibility === "visible";
 		},
 		setTarget: function(target, delay) {
 			if (this.target === target) { return; }
@@ -4414,12 +4386,12 @@ define("orion/textview/tooltip", ['i18n!
 			if (!info) { return; }
 			var tooltipDiv = this._tooltipDiv, tooltipContents = this._tooltipContents;
 			tooltipDiv.style.left = tooltipDiv.style.right = tooltipDiv.style.width = tooltipDiv.style.height = 
-				tooltipContents.style.width = tooltipContents.style.height = "auto"; //$NON-NLS-0$
+				tooltipContents.style.width = tooltipContents.style.height = "auto";
 			var contents = info.contents;
 			if (contents instanceof Array) {
 				contents = this._getAnnotationContents(contents);
 			}
-			if (typeof contents === "string") { //$NON-NLS-0$
+			if (typeof contents === "string") {
 				tooltipContents.innerHTML = contents;
 			} else if (this._isNode(contents)) {
 				tooltipContents.appendChild(contents);
@@ -4427,11 +4399,11 @@ define("orion/textview/tooltip", ['i18n!
 				var view = this._view;
 				var options = view.getOptions();
 				options.parent = tooltipContents;
-				var tooltipTheme = "tooltip"; //$NON-NLS-0$
+				var tooltipTheme = "tooltip";
 				var theme = options.themeClass;
 				if (theme) {
 					theme = theme.replace(tooltipTheme, "");
-					if (theme) { theme = " " + theme; } //$NON-NLS-0$
+					if (theme) { theme = " " + theme; }
 					theme = tooltipTheme + theme;
 				} else {
 					theme = tooltipTheme;
@@ -4446,40 +4418,40 @@ define("orion/textview/tooltip", ['i18n!
 						view.onLineStyle(e);
 					}
 				};
-				contentsView.addEventListener("LineStyle", listener.onLineStyle); //$NON-NLS-0$
+				contentsView.addEventListener("LineStyle", listener.onLineStyle);
 				contentsView.setModel(contents);
 				var size = contentsView.computeSize();
-				tooltipContents.style.width = (size.width + 20) + "px"; //$NON-NLS-0$
-				tooltipContents.style.height = size.height + "px"; //$NON-NLS-0$
+				tooltipContents.style.width = (size.width + 20) + "px";
+				tooltipContents.style.height = size.height + "px";
 				contentsView.resize();
 			} else {
 				return;
 			}
 			var documentElement = tooltipDiv.ownerDocument.documentElement;
-			if (info.anchor === "right") { //$NON-NLS-0$
+			if (info.anchor === "right") {
 				var right = documentElement.clientWidth - info.x;
-				tooltipDiv.style.right = right + "px"; //$NON-NLS-0$
-				tooltipDiv.style.maxWidth = (documentElement.clientWidth - right - 10) + "px"; //$NON-NLS-0$
+				tooltipDiv.style.right = right + "px";
+				tooltipDiv.style.maxWidth = (documentElement.clientWidth - right - 10) + "px";
 			} else {
-				var left = parseInt(this._getNodeStyle(tooltipDiv, "padding-left", "0"), 10); //$NON-NLS-1$ //$NON-NLS-0$
-				left += parseInt(this._getNodeStyle(tooltipDiv, "border-left-width", "0"), 10); //$NON-NLS-1$ //$NON-NLS-0$
+				var left = parseInt(this._getNodeStyle(tooltipDiv, "padding-left", "0"), 10);
+				left += parseInt(this._getNodeStyle(tooltipDiv, "border-left-width", "0"), 10);
 				left = info.x - left;
-				tooltipDiv.style.left = left + "px"; //$NON-NLS-0$
-				tooltipDiv.style.maxWidth = (documentElement.clientWidth - left - 10) + "px"; //$NON-NLS-0$
+				tooltipDiv.style.left = left + "px";
+				tooltipDiv.style.maxWidth = (documentElement.clientWidth - left - 10) + "px";
 			}
-			var top = parseInt(this._getNodeStyle(tooltipDiv, "padding-top", "0"), 10); //$NON-NLS-1$ //$NON-NLS-0$
-			top += parseInt(this._getNodeStyle(tooltipDiv, "border-top-width", "0"), 10); //$NON-NLS-1$ //$NON-NLS-0$
+			var top = parseInt(this._getNodeStyle(tooltipDiv, "padding-top", "0"), 10);
+			top += parseInt(this._getNodeStyle(tooltipDiv, "border-top-width", "0"), 10);
 			top = info.y - top;
-			tooltipDiv.style.top = top + "px"; //$NON-NLS-0$
-			tooltipDiv.style.maxHeight = (documentElement.clientHeight - top - 10) + "px"; //$NON-NLS-0$
-			tooltipDiv.style.opacity = "1"; //$NON-NLS-0$
-			tooltipDiv.style.visibility = "visible"; //$NON-NLS-0$
+			tooltipDiv.style.top = top + "px";
+			tooltipDiv.style.maxHeight = (documentElement.clientHeight - top - 10) + "px";
+			tooltipDiv.style.opacity = "1";
+			tooltipDiv.style.visibility = "visible";
 			if (autoHide) {
 				var self = this;
 				self._hideTimeout = setTimeout(function() {
-					var opacity = parseFloat(self._getNodeStyle(tooltipDiv, "opacity", "1")); //$NON-NLS-1$ //$NON-NLS-0$
+					var opacity = parseFloat(self._getNodeStyle(tooltipDiv, "opacity", "1"));
 					self._fadeTimeout = setInterval(function() {
-						if (tooltipDiv.style.visibility === "visible" && opacity > 0) { //$NON-NLS-0$
+						if (tooltipDiv.style.visibility === "visible" && opacity > 0) {
 							opacity -= 0.1;
 							tooltipDiv.style.opacity = opacity;
 							return;
@@ -4503,15 +4475,15 @@ define("orion/textview/tooltip", ['i18n!
 			function getAnnotationHTML(annotation) {
 				var title = annotation.title;
 				if (title === "") { return null; }
-				var result = "<div>"; //$NON-NLS-0$
+				var result = "<div>";
 				if (annotation.html) {
-					result += annotation.html + "&nbsp;"; //$NON-NLS-0$
+					result += annotation.html + "&nbsp;";
 				}
 				if (!title) {
 					title = getText(annotation.start, annotation.end);
 				}
-				title = title.replace(/</g, "&lt;").replace(/>/g, "&gt;"); //$NON-NLS-1$ //$NON-NLS-0$
-				result += "<span style='vertical-align:middle;'>" + title + "</span><div>"; //$NON-NLS-1$ //$NON-NLS-0$
+				title = title.replace(/</g, "&lt;").replace(/>/g, "&gt;");
+				result += "<span style='vertical-align:middle;'>" + title + "</span><div>";
 				return result;
 			}
 			if (annotations.length === 1) {
@@ -4531,7 +4503,7 @@ define("orion/textview/tooltip", ['i18n!
 					return newModel;
 				}
 			} else {
-				var tooltipHTML = "<div><em>" + messages.multipleAnnotations + "</em></div>"; //$NON-NLS-1$ //$NON-NLS-0$
+				var tooltipHTML = "<div><em>" + messages.multipleAnnotations + "</em></div>";
 				for (var i = 0; i < annotations.length; i++) {
 					annotation = annotations[i];
 					var html = getAnnotationHTML(annotation);
@@ -4549,7 +4521,7 @@ define("orion/textview/tooltip", ['i18n!
 				if (!value) {
 					if (node.currentStyle) {
 						var index = 0, p = prop;
-						while ((index = p.indexOf("-", index)) !== -1) { //$NON-NLS-0$
+						while ((index = p.indexOf("-", index)) !== -1) {
 							p = p.substring(0, index) + p.substring(index + 1, index + 2).toUpperCase() + p.substring(index + 2);
 						}
 						value = node.currentStyle[p];
@@ -4562,8 +4534,8 @@ define("orion/textview/tooltip", ['i18n!
 			return value || defaultValue;
 		},
 		_isNode: function (obj) {
-			return typeof Node === "object" ? obj instanceof Node : //$NON-NLS-0$
-				obj && typeof obj === "object" && typeof obj.nodeType === "number" && typeof obj.nodeName === "string"; //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-0$
+			return typeof Node === "object" ? obj instanceof Node :
+				obj && typeof obj === "object" && typeof obj.nodeType === "number" && typeof obj.nodeName === "string";
 		}
 	};
 	return {Tooltip: Tooltip};
@@ -4584,22 +4556,22 @@ define("orion/textview/tooltip", ['i18n!
 
 /*global window document navigator setTimeout clearTimeout setInterval clearInterval define */
 
-define("orion/textview/textView", ['orion/textview/textModel', 'orion/textview/keyBinding', 'orion/textview/eventTarget'], function(mTextModel, mKeyBinding, mEventTarget) { //$NON-NLS-3$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-0$
+define("orion/textview/textView", ['orion/textview/textModel', 'orion/textview/keyBinding', 'orion/textview/eventTarget'], function(mTextModel, mKeyBinding, mEventTarget) {
 
 	/** @private */
 	function addHandler(node, type, handler, capture) {
-		if (typeof node.addEventListener === "function") { //$NON-NLS-0$
+		if (typeof node.addEventListener === "function") {
 			node.addEventListener(type, handler, capture === true);
 		} else {
-			node.attachEvent("on" + type, handler); //$NON-NLS-0$
+			node.attachEvent("on" + type, handler);
 		}
 	}
 	/** @private */
 	function removeHandler(node, type, handler, capture) {
-		if (typeof node.removeEventListener === "function") { //$NON-NLS-0$
+		if (typeof node.removeEventListener === "function") {
 			node.removeEventListener(type, handler, capture === true);
 		} else {
-			node.detachEvent("on" + type, handler); //$NON-NLS-0$
+			node.detachEvent("on" + type, handler);
 		}
 	}
 	var userAgent = navigator.userAgent;
@@ -4607,18 +4579,19 @@ define("orion/textview/textView", ['orio
 	if (document.selection && window.ActiveXObject && /MSIE/.test(userAgent)) {
 		isIE = document.documentMode ? document.documentMode : 7;
 	}
-	var isFirefox = parseFloat(userAgent.split("Firefox/")[1] || userAgent.split("Minefield/")[1]) || undefined; //$NON-NLS-1$ //$NON-NLS-0$
-	var isOpera = userAgent.indexOf("Opera") !== -1; //$NON-NLS-0$
-	var isChrome = userAgent.indexOf("Chrome") !== -1; //$NON-NLS-0$
-	var isSafari = userAgent.indexOf("Safari") !== -1 && !isChrome; //$NON-NLS-0$
-	var isWebkit = userAgent.indexOf("WebKit") !== -1; //$NON-NLS-0$
-	var isPad = userAgent.indexOf("iPad") !== -1; //$NON-NLS-0$
-	var isMac = navigator.platform.indexOf("Mac") !== -1; //$NON-NLS-0$
-	var isWindows = navigator.platform.indexOf("Win") !== -1; //$NON-NLS-0$
-	var isLinux = navigator.platform.indexOf("Linux") !== -1; //$NON-NLS-0$
-	var isW3CEvents = typeof window.document.documentElement.addEventListener === "function"; //$NON-NLS-0$
-	var isRangeRects = (!isIE || isIE >= 9) && typeof window.document.createRange().getBoundingClientRect === "function"; //$NON-NLS-0$
-	var platformDelimiter = isWindows ? "\r\n" : "\n"; //$NON-NLS-1$ //$NON-NLS-0$
+	var isFirefox = parseFloat(userAgent.split("Firefox/")[1] || userAgent.split("Minefield/")[1]) || undefined;
+	var isOpera = userAgent.indexOf("Opera") !== -1;
+	var isChrome = userAgent.indexOf("Chrome") !== -1;
+	var isSafari = userAgent.indexOf("Safari") !== -1 && !isChrome;
+	var isWebkit = userAgent.indexOf("WebKit") !== -1;
+	var isPad = userAgent.indexOf("iPad") !== -1;
+	var isMac = navigator.platform.indexOf("Mac") !== -1;
+	var isWindows = navigator.platform.indexOf("Win") !== -1;
+	var isLinux = navigator.platform.indexOf("Linux") !== -1;
+	var isW3CEvents = typeof window.document.documentElement.addEventListener === "function";
+	var isRangeRects = (!isIE || isIE >= 9) && typeof window.document.createRange().getBoundingClientRect === "function";
+	var platformDelimiter = isWindows ? "\r\n" : "\n";
+	var scrollButtonHeight = isPad ? 0 : 17;
 	
 	/** 
 	 * Constructs a new Selection object.
@@ -4681,7 +4654,7 @@ define("orion/textview/textView", ['orio
 		},
 		/** @private */
 		toString: function() {
-			return "start=" + this.start + " end=" + this.end + (this.caret ? " caret is at start" : " caret is at end"); //$NON-NLS-3$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-0$
+			return "start=" + this.start + " end=" + this.end + (this.caret ? " caret is at start" : " caret is at end");
 		},
 		/** @private */
 		isEmpty: function() {
@@ -4706,7 +4679,7 @@ define("orion/textview/textView", ['orio
 	 * @property {orion.textview.TextModel} [model] the text model for the view. If it is not set the view creates an empty {@link orion.textview.TextModel}.
 	 * @property {Boolean} [readonly=false] whether or not the view is read-only.
 	 * @property {Boolean} [fullSelection=true] whether or not the view is in full selection mode.
-	 * @property {Boolean} [tabMode=true] whether or not the tab keypress is consumed by the view or is used for focus traversal.
+	 * @property {Boolean} [tabMode=true] whether or not the tab keypress is consumed by the view.
 	 * @property {Boolean} [expandTab=false] whether or not the tab key inserts white spaces.
 	 * @property {String} [themeClass] the CSS class for the view theming.
 	 * @property {Number} [tabSize] The number of spaces in a tab.
@@ -4768,7 +4741,7 @@ define("orion/textview/textView", ['orio
 			* reset to the appropriate value further down.
 			*/
 			if (isWebkit) {
-				clientDiv.style.width = (0x7FFFF).toString() + "px"; //$NON-NLS-0$
+				clientDiv.style.width = (0x7FFFF).toString() + "px";
 			}
 			var lineCount = model.getLineCount();
 			for (var lineIndex=0; lineIndex<lineCount; lineIndex++) {
@@ -4817,7 +4790,7 @@ define("orion/textview/textView", ['orio
 			var scroll = this._getScroll();
 			var viewPad = this._getViewPadding();
 			var viewRect = this._viewDiv.getBoundingClientRect();
-			if (from === "document") { //$NON-NLS-0$
+			if (from === "document") {
 				if (rect.x !== undefined) {
 					rect.x += - scroll.x + viewRect.left + viewPad.left;
 				}
@@ -4826,7 +4799,7 @@ define("orion/textview/textView", ['orio
 				}
 			}
 			//At this point rect is in the widget coordinate space
-			if (to === "document") { //$NON-NLS-0$
+			if (to === "document") {
 				if (rect.x !== undefined) {
 					rect.x += scroll.x - viewRect.left - viewPad.left;
 				}
@@ -4855,7 +4828,7 @@ define("orion/textview/textView", ['orio
 			
 			this._destroyView();
 
-			var e = {type: "Destroy"}; //$NON-NLS-0$
+			var e = {type: "Destroy"};
 			this.onDestroy(e);
 
 			this._parent = null;
@@ -4895,19 +4868,7 @@ define("orion/textview/textView", ['orio
 			return this._hasFocus;
 		},
 		/**
-		 * Returns the action description for a given action ID.
-		 *
-		 * @returns {orion.textview.ActionDescrition} the action description
-		 */
-		getActionDescription: function(actionID) {
-			var action = this._actions[actionID];
-			if (action) {
-				return action.actionDescription;
-			}
-			return undefined;
-		},
-		/**
-		 * Returns all action IDs defined in the text view.
+		 * Returns all action names defined in the text view.
 		 * <p>
 		 * There are two types of actions, the predefined actions of the view 
 		 * and the actions added by application code.
@@ -4953,8 +4914,6 @@ define("orion/textview/textView", ['orio
 		 *       <li>"deleteWordPrevious" - deletes the word preceding the caret</li>
 		 *       <li>"deleteWordNext" - deletes the word following the caret</li>
 		 *       <li>"tab" - inserts a tab character at the caret</li>
-		 *       <li>"shiftTab" - noop</li>
-		 *       <li>"toggleTabMode" - toggles tab mode.</li>
 		 *       <li>"enter" - inserts a line delimiter at the caret</li>
 		 *     </ul>
 		 *   <li>Clipboard actions.</li>
@@ -4967,7 +4926,7 @@ define("orion/textview/textView", ['orio
 		 * </p>
 		 *
 		 * @param {Boolean} [defaultAction=false] whether or not the predefined actions are included.
-		 * @returns {String[]} an array of action IDs defined in the text view.
+		 * @returns {String[]} an array of action names defined in the text view.
 		 *
 		 * @see #invokeAction
 		 * @see #setAction
@@ -4977,11 +4936,9 @@ define("orion/textview/textView", ['orio
 		getActions: function (defaultAction) {
 			var result = [];
 			var actions = this._actions;
-			for (var i in actions) {
-				if (actions.hasOwnProperty(i)) {
-					if (!defaultAction && actions[i].defaultHandler) { continue; }
-					result.push(i);
-				}
+			for (var i = 0; i < actions.length; i++) {
+				if (!defaultAction && actions[i].defaultHandler) { continue; }
+				result.push(actions[i].name);
 			}
 			return result;
 		},
@@ -5072,19 +5029,19 @@ define("orion/textview/textView", ['orio
 			return this._getScroll().x;
 		},
 		/**
-		 * Returns all the key bindings associated to the given action ID.
-		 *
-		 * @param {String} actionID the action ID.
-		 * @returns {orion.textview.KeyBinding[]} the array of key bindings associated to the given action ID.
+		 * Returns all the key bindings associated to the given action name.
+		 *
+		 * @param {String} name the action name.
+		 * @returns {orion.textview.KeyBinding[]} the array of key bindings associated to the given action name.
 		 *
 		 * @see #setKeyBinding
 		 * @see #setAction
 		 */
-		getKeyBindings: function (actionID) {
+		getKeyBindings: function (name) {
 			var result = [];
 			var keyBindings = this._keyBindings;
 			for (var i = 0; i < keyBindings.length; i++) {
-				if (keyBindings[i].actionID === actionID) {
+				if (keyBindings[i].name === name) {
 					result.push(keyBindings[i].keyBinding);
 				}
 			}
@@ -5167,8 +5124,8 @@ define("orion/textview/textView", ['orio
 				options = this._defaultOptions();
 			} else if (arguments.length === 1) {
 				var arg = arguments[0];
-				if (typeof arg === "string") { //$NON-NLS-0$
-					return this._clone(this["_" + arg]); //$NON-NLS-0$
+				if (typeof arg === "string") {
+					return this._clone(this["_" + arg]);
 				}
 				options = arg;
 			} else {
@@ -5181,7 +5138,7 @@ define("orion/textview/textView", ['orio
 			}
 			for (var option in options) {
 				if (options.hasOwnProperty(option)) {
-					options[option] = this._clone(this["_" + option]); //$NON-NLS-0$
+					options[option] = this._clone(this["_" + option]);
 				}
 			}
 			return options;
@@ -5292,7 +5249,7 @@ define("orion/textview/textView", ['orio
 			return this._getScroll().y;
 		},
 		/**
-		 * Executes the action handler associated with the given action ID.
+		 * Executes the action handler associated with the given name.
 		 * <p>
 		 * The application defined action takes precedence over predefined actions unless
 		 * the <code>defaultAction</code> paramater is <code>true</code>.
@@ -5302,21 +5259,25 @@ define("orion/textview/textView", ['orio
 		 * action is executed if present.
 		 * </p>
 		 *
-		 * @param {String} actionID the action ID.
+		 * @param {String} name the action name.
 		 * @param {Boolean} [defaultAction] whether to always execute the predefined action.
 		 * @returns {Boolean} <code>true</code> if the action was executed.
 		 *
 		 * @see #setAction
 		 * @see #getActions
 		 */
-		invokeAction: function (actionID, defaultAction) {
+		invokeAction: function (name, defaultAction) {
 			if (!this._clientDiv) { return; }
-			var action = this._actions[actionID];
-			if (action) {
-				if (!defaultAction && action.handler) {
-					if (action.handler()) { return; }
-				}
-				if (action.defaultHandler) { return action.defaultHandler(); }
+			var actions = this._actions;
+			for (var i = 0; i < actions.length; i++) {
+				var a = actions[i];
+				if (a.name && a.name === name) {
+					if (!defaultAction && a.userHandler) {
+						if (a.userHandler()) { return; }
+					}
+					if (a.defaultHandler) { return a.defaultHandler(); }
+					return false;
+				}
 			}
 			return false;
 		},
@@ -5678,7 +5639,7 @@ define("orion/textview/textView", ['orio
 			if (!div) { return; }
 			if (ruler) {
 				var location = ruler.getLocation();//"left" or "right"
-				var divRuler = location === "left" ? this._leftDiv : this._rightDiv; //$NON-NLS-0$
+				var divRuler = location === "left" ? this._leftDiv : this._rightDiv;
 				var cells = divRuler.firstChild.rows[0].cells;
 				for (var i = 0; i < cells.length; i++) {
 					if (cells[i].firstChild._ruler === ruler) {
@@ -5690,7 +5651,7 @@ define("orion/textview/textView", ['orio
 			if (ruler) {
 				div.rulerChanged = true;
 			}
-			if (!ruler || ruler.getOverview() === "page") { //$NON-NLS-0$
+			if (!ruler || ruler.getOverview() === "page") {
 				var child = div.firstChild;
 				while (child) {
 					var lineIndex = child.lineIndex;
@@ -5753,68 +5714,79 @@ define("orion/textview/textView", ['orio
 			this._handleResize(null);
 		},
 		/**
-		 * @class This object describes an action for the text view.
+		 * Associates an application defined handler to an action name.
 		 * <p>
-		 * <b>See:</b><br/>
-		 * {@link orion.textview.TextView}<br/>
-		 * {@link orion.textview.TextView#setAction}
-		 * </p>		 
-		 * @name orion.textview.ActionDescription
-		 *
-		 * @property {String} [name] the name to be used when showing the action as text.
-		 */
-		/**
-		 * Associates an application defined handler to an action ID.
-		 * <p>
-		 * If the action ID is a predefined action, the given handler executes before
+		 * If the action name is a predefined action, the given handler executes before
 		 * the default action handler.  If the given handler returns <code>true</code>, the
 		 * default action handler is not called.
 		 * </p>
 		 *
-		 * @param {String} actionID the action ID.
+		 * @param {String} name the action name.
 		 * @param {Function} handler the action handler.
-		 * @param {orion.textview.ActionDescription} [actionDescription=undefined] the action description.
 		 *
 		 * @see #getActions
 		 * @see #invokeAction
 		 */
-		setAction: function(actionID, handler, actionDescription) {
-			if (!actionID) { return; }
+		setAction: function(name, handler) {
+			if (!name) { return; }
 			var actions = this._actions;
-			var action = actions[actionID];
-			if (!action) { 
-				action = actions[actionID] = {};
-			}
-			action.handler = handler;
-			action.actionDescription = actionDescription;
-		},
-		/**
-		 * Associates a key binding with the given action ID. Any previous
+			for (var i = 0; i < actions.length; i++) {
+				var a = actions[i];
+				if (a.name === name) {
+					a.userHandler = handler;
+					return;
+				}
+			}
+			actions.push({name: name, userHandler: handler});
+		},
+		/**
+		 * Associates a key binding with the given action name. Any previous
 		 * association with the specified key binding is overwriten. If the
-		 * action ID is <code>null</code>, the association is removed.
+		 * action name is <code>null</code>, the association is removed.
 		 * 
 		 * @param {orion.textview.KeyBinding} keyBinding the key binding
-		 * @param {String} actionID the action ID
-		 */
-		setKeyBinding: function(keyBinding, actionID) {
+		 * @param {String} name the action
+		 */
+		setKeyBinding: function(keyBinding, name) {
 			var keyBindings = this._keyBindings;
 			for (var i = 0; i < keyBindings.length; i++) {
 				var kb = keyBindings[i]; 
 				if (kb.keyBinding.equals(keyBinding)) {
-					if (actionID) {
-						kb.actionID = actionID;
+					if (name) {
+						kb.name = name;
 					} else {
 						if (kb.predefined) {
-							kb.actionID = null;
+							kb.name = null;
 						} else {
+							var oldName = kb.name; 
 							keyBindings.splice(i, 1);
+							var index = 0;
+							while (index < keyBindings.length && oldName !== keyBindings[index].name) {
+								index++;
+							}
+							if (index === keyBindings.length) {
+								/* <p>
+								 * Removing all the key bindings associated to an user action will cause
+								 * the user action to be removed. TextView predefined actions are never
+								 * removed (so they can be reinstalled in the future). 
+								 * </p>
+								 */
+								var actions = this._actions;
+								for (var j = 0; j < actions.length; j++) {
+									if (actions[j].name === oldName) {
+										if (!actions[j].defaultHandler) {
+											actions.splice(j, 1);
+										}
+									}
+								}
+							}
 						}
 					}
 					return;
 				}
 			}
-			if (actionID) {
-				keyBindings.push({keyBinding: keyBinding, actionID: actionID});
+			if (name) {
+				keyBindings.push({keyBinding: keyBinding, name: name});
 			}
 		},
 		/**
@@ -5882,15 +5854,15 @@ define("orion/textview/textView", ['orio
 		setModel: function(model) {
 			if (!model) { return; }
 			if (model === this._model) { return; }
-			this._model.removeEventListener("Changing", this._modelListener.onChanging); //$NON-NLS-0$
-			this._model.removeEventListener("Changed", this._modelListener.onChanged); //$NON-NLS-0$
+			this._model.removeEventListener("Changing", this._modelListener.onChanging);
+			this._model.removeEventListener("Changed", this._modelListener.onChanged);
 			var oldLineCount = this._model.getLineCount();
 			var oldCharCount = this._model.getCharCount();
 			var newLineCount = model.getLineCount();
 			var newCharCount = model.getCharCount();
 			var newText = model.getText();
 			var e = {
-				type: "ModelChanging", //$NON-NLS-0$
+				type: "ModelChanging",
 				text: newText,
 				start: 0,
 				removedCharCount: oldCharCount,
@@ -5901,7 +5873,7 @@ define("orion/textview/textView", ['orio
 			this.onModelChanging(e);
 			this._model = model;
 			e = {
-				type: "ModelChanged", //$NON-NLS-0$
+				type: "ModelChanged",
 				start: 0,
 				removedCharCount: oldCharCount,
 				addedCharCount: newCharCount,
@@ -5909,8 +5881,8 @@ define("orion/textview/textView", ['orio
 				addedLineCount: newLineCount
 			};
 			this.onModelChanged(e); 
-			this._model.addEventListener("Changing", this._modelListener.onChanging); //$NON-NLS-0$
-			this._model.addEventListener("Changed", this._modelListener.onChanged); //$NON-NLS-0$
+			this._model.addEventListener("Changing", this._modelListener.onChanging);
+			this._model.addEventListener("Changed", this._modelListener.onChanged);
 			this._reset();
 			this._updatePage();
 		},
@@ -5925,14 +5897,14 @@ define("orion/textview/textView", ['orio
 			var defaultOptions = this._defaultOptions();
 			for (var option in options) {
 				if (options.hasOwnProperty(option)) {
-					var newValue = options[option], oldValue = this["_" + option]; //$NON-NLS-0$
+					var newValue = options[option], oldValue = this["_" + option];
 					if (this._compare(oldValue, newValue)) { continue; }
 					var update = defaultOptions[option] ? defaultOptions[option].update : null;
 					if (update) {
 						update.call(this, newValue);
 						continue;
 					}
-					this["_" + option] = this._clone(newValue); //$NON-NLS-0$
+					this["_" + option] = this._clone(newValue);
 				}
 			}
 		},
@@ -6142,7 +6114,7 @@ define("orion/textview/textView", ['orio
 			*/
 			if (isIE < 9) {
 				if (!this._getSelection().isEmpty()) {
-					var child = document.createElement("DIV"); //$NON-NLS-0$
+					var child = document.createElement("DIV");
 					var rootDiv = this._rootDiv;
 					rootDiv.appendChild(child);
 					rootDiv.removeChild(child);
@@ -6150,7 +6122,7 @@ define("orion/textview/textView", ['orio
 			}
 			if (isFirefox || isIE) {
 				if (this._selDiv1) {
-					var color = "transparent"; //$NON-NLS-0$
+					var color = "transparent";
 					this._selDiv1.style.background = color;
 					this._selDiv2.style.background = color;
 					this._selDiv3.style.background = color;
@@ -6161,7 +6133,7 @@ define("orion/textview/textView", ['orio
 				}
 			}
 			if (!this._ignoreFocus) {
-				this.onBlur({type: "Blur"}); //$NON-NLS-0$
+				this.onBlur({type: "Blur"});
 			}
 		},
 		_handleContextMenu: function (e) {
@@ -6172,8 +6144,8 @@ define("orion/textview/textView", ['orio
 				// See bug 366312 and 376508.
 				this._updateDOMSelection();
 			}
-			if (this.isListening("ContextMenu")) { //$NON-NLS-0$
-				var evt = this._createMouseEvent("ContextMenu", e); //$NON-NLS-0$
+			if (this.isListening("ContextMenu")) {
+				var evt = this._createMouseEvent("ContextMenu", e);
 				evt.screenX = e.screenX;
 				evt.screenY = e.screenY;
 				this.onContextMenu(evt);
@@ -6218,9 +6190,9 @@ define("orion/textview/textView", ['orio
 					self._ignoreBlur = false;
 				}, 0);
 			}
-			if (this.isListening("DragStart") && this._dragOffset !== -1) { //$NON-NLS-0$
+			if (this.isListening("DragStart") && this._dragOffset !== -1) {
 				this._isMouseDown = false;
-				this.onDragStart(this._createMouseEvent("DragStart", e)); //$NON-NLS-0$
+				this.onDragStart(this._createMouseEvent("DragStart", e));
 				this._dragOffset = -1;
 			} else {
 				if (e.preventDefault) { e.preventDefault(); }
@@ -6229,16 +6201,16 @@ define("orion/textview/textView", ['orio
 		},
 		_handleDrag: function (e) {
 			if (!e) { e = window.event; }
-			if (this.isListening("Drag")) { //$NON-NLS-0$
-				this.onDrag(this._createMouseEvent("Drag", e)); //$NON-NLS-0$
+			if (this.isListening("Drag")) {
+				this.onDrag(this._createMouseEvent("Drag", e));
 			}
 		},
 		_handleDragEnd: function (e) {
 			if (!e) { e = window.event; }
 			this._dropTarget = false;
 			this._dragOffset = -1;
-			if (this.isListening("DragEnd")) { //$NON-NLS-0$
-				this.onDragEnd(this._createMouseEvent("DragEnd", e)); //$NON-NLS-0$
+			if (this.isListening("DragEnd")) {
+				this.onDragEnd(this._createMouseEvent("DragEnd", e));
 			}
 			if (isFirefox) {
 				this._fixCaret();
@@ -6247,7 +6219,7 @@ define("orion/textview/textView", ['orio
 				* selection is dropped onto itself. The fix is to detected the case and 
 				* call fixCaret() a second time.
 				*/
-				if (e.dataTransfer.dropEffect === "none" && !e.dataTransfer.mozUserCancelled) { //$NON-NLS-0$
+				if (e.dataTransfer.dropEffect === "none" && !e.dataTransfer.mozUserCancelled) {
 					this._fixCaret();
 				}
 			}
@@ -6256,9 +6228,9 @@ define("orion/textview/textView", ['orio
 			if (!e) { e = window.event; }
 			var prevent = true;
 			this._dropTarget = true;
-			if (this.isListening("DragEnter")) { //$NON-NLS-0$
+			if (this.isListening("DragEnter")) {
 				prevent = false;
-				this.onDragEnter(this._createMouseEvent("DragEnter", e)); //$NON-NLS-0$
+				this.onDragEnter(this._createMouseEvent("DragEnter", e));
 			}
 			/*
 			* Webkit will not send drop events if this event is not prevented, as spec in HTML5.
@@ -6273,9 +6245,9 @@ define("orion/textview/textView", ['orio
 		_handleDragOver: function (e) {
 			if (!e) { e = window.event; }
 			var prevent = true;
-			if (this.isListening("DragOver")) { //$NON-NLS-0$
+			if (this.isListening("DragOver")) {
 				prevent = false;
-				this.onDragOver(this._createMouseEvent("DragOver", e)); //$NON-NLS-0$
+				this.onDragOver(this._createMouseEvent("DragOver", e));
 			}
 			/*
 			* Webkit will not send drop events if this event is not prevented, as spec in HTML5.
@@ -6283,7 +6255,7 @@ define("orion/textview/textView", ['orio
 			* event will result is loss of functionality (insertion mark, etc).
 			*/
 			if (isWebkit || prevent) {
-				if (prevent) { e.dataTransfer.dropEffect = "none"; } //$NON-NLS-0$
+				if (prevent) { e.dataTransfer.dropEffect = "none"; }
 				if (e.preventDefault) { e.preventDefault(); }
 				return false;
 			}
@@ -6291,15 +6263,15 @@ define("orion/textview/textView", ['orio
 		_handleDragLeave: function (e) {
 			if (!e) { e = window.event; }
 			this._dropTarget = false;
-			if (this.isListening("DragLeave")) { //$NON-NLS-0$
-				this.onDragLeave(this._createMouseEvent("DragLeave", e)); //$NON-NLS-0$
+			if (this.isListening("DragLeave")) {
+				this.onDragLeave(this._createMouseEvent("DragLeave", e));
 			}
 		},
 		_handleDrop: function (e) {
 			if (!e) { e = window.event; }
 			this._dropTarget = false;
-			if (this.isListening("Drop")) { //$NON-NLS-0$
-				this.onDrop(this._createMouseEvent("Drop", e)); //$NON-NLS-0$
+			if (this.isListening("Drop")) {
+				this.onDrop(this._createMouseEvent("Drop", e));
 			}
 			/*
 			* This event must be prevented otherwise the user agent will modify
@@ -6329,18 +6301,16 @@ define("orion/textview/textView", ['orio
 				}
 			}
 			if (!this._ignoreFocus) {
-				this.onFocus({type: "Focus"}); //$NON-NLS-0$
+				this.onFocus({type: "Focus"});
 			}
 		},
 		_handleKeyDown: function (e) {
 			if (!e) { e = window.event; }
-			var modifier = false;
 			switch (e.keyCode) {
 				case 16: /* Shift */
 				case 17: /* Control */
 				case 18: /* Alt */
 				case 91: /* Command */
-					modifier = true;
 					break;
 				default:
 					this._setLinksVisible(false);
@@ -6367,9 +6337,7 @@ define("orion/textview/textView", ['orio
 					this._startIME();
 				}
 			} else {
-				if (!modifier) {
-					this._commitIME();
-				}
+				this._commitIME();
 			}
 			/*
 			* Feature in Firefox. When a key is held down the browser sends 
@@ -6489,7 +6457,7 @@ define("orion/textview/textView", ['orio
 				}, 0);
 			}
 			if (this._clickCount === 1) {
-				result = this._setSelectionTo(e.clientX, e.clientY, e.shiftKey, !isOpera && this.isListening("DragStart")); //$NON-NLS-0$
+				result = this._setSelectionTo(e.clientX, e.clientY, e.shiftKey, !isOpera && this.isListening("DragStart"));
 				if (result) { this._setGrab(target); }
 			} else {
 				/*
@@ -6515,12 +6483,12 @@ define("orion/textview/textView", ['orio
 		},
 		_handleMouseDown: function (e) {
 			if (!e) { e = window.event; }
-			if (this.isListening("MouseDown")) { //$NON-NLS-0$
-				this.onMouseDown(this._createMouseEvent("MouseDown", e)); //$NON-NLS-0$
+			if (this.isListening("MouseDown")) {
+				this.onMouseDown(this._createMouseEvent("MouseDown", e));
 			}
 			if (this._linksVisible) {
 				var target = e.target || e.srcElement;
-				if (target.tagName !== "A") { //$NON-NLS-0$
+				if (target.tagName !== "A") {
 					this._setLinksVisible(false);
 				} else {
 					return;
@@ -6570,22 +6538,22 @@ define("orion/textview/textView", ['orio
 		},
 		_handleMouseOver: function (e) {
 			if (!e) { e = window.event; }
-			if (this.isListening("MouseOver")) { //$NON-NLS-0$
-				this.onMouseOver(this._createMouseEvent("MouseOver", e)); //$NON-NLS-0$
+			if (this.isListening("MouseOver")) {
+				this.onMouseOver(this._createMouseEvent("MouseOver", e));
 			}
 		},
 		_handleMouseOut: function (e) {
 			if (!e) { e = window.event; }
-			if (this.isListening("MouseOut")) { //$NON-NLS-0$
-				this.onMouseOut(this._createMouseEvent("MouseOut", e)); //$NON-NLS-0$
+			if (this.isListening("MouseOut")) {
+				this.onMouseOut(this._createMouseEvent("MouseOut", e));
 			}
 		},
 		_handleMouseMove: function (e) {
 			if (!e) { e = window.event; }
 			var inClient = this._isClientDiv(e);
-			if (this.isListening("MouseMove")) { //$NON-NLS-0$
+			if (this.isListening("MouseMove")) {
 				if (inClient){
-					this.onMouseMove(this._createMouseEvent("MouseMove", e)); //$NON-NLS-0$
+					this.onMouseMove(this._createMouseEvent("MouseMove", e));
 				}
 			}
 			if (this._dropTarget) {
@@ -6646,13 +6614,13 @@ define("orion/textview/textView", ['orio
 			var model = this._model;
 			var caretLine = model.getLineAtOffset(this._getSelection().getCaret());
 			if (y < topEdge && caretLine !== 0) {
-				this._doAutoScroll("up", x, y - topEdge); //$NON-NLS-0$
+				this._doAutoScroll("up", x, y - topEdge);
 			} else if (y > bottomEdge && caretLine !== model.getLineCount() - 1) {
-				this._doAutoScroll("down", x, y - bottomEdge); //$NON-NLS-0$
+				this._doAutoScroll("down", x, y - bottomEdge);
 			} else if (x < leftEdge) {
-				this._doAutoScroll("left", x - leftEdge, y); //$NON-NLS-0$
+				this._doAutoScroll("left", x - leftEdge, y);
 			} else if (x > rightEdge) {
-				this._doAutoScroll("right", x - rightEdge, y); //$NON-NLS-0$
+				this._doAutoScroll("right", x - rightEdge, y);
 			} else {
 				this._endAutoScroll();
 				this._setSelectionTo(x, y, true);
@@ -6685,9 +6653,9 @@ define("orion/textview/textView", ['orio
 		_handleMouseUp: function (e) {
 			if (!e) { e = window.event; }
 			var left = e.which ? e.button === 0 : e.button === 1;
-			if (this.isListening("MouseUp")) { //$NON-NLS-0$
+			if (this.isListening("MouseUp")) {
 				if (this._isClientDiv(e) || (left && this._isMouseDown)) {
-					this.onMouseUp(this._createMouseEvent("MouseUp", e)); //$NON-NLS-0$
+					this.onMouseUp(this._createMouseEvent("MouseUp", e));
 				}
 			}
 			if (this._linksVisible) {
@@ -6800,6 +6768,7 @@ define("orion/textview/textView", ['orio
 			var oldScroll = this._getScroll();
 			this._scrollView(pixelX, pixelY);
 			var newScroll = this._getScroll();
+			if (isSafari) { this._mouseWheelLine = null; }
 			if (oldScroll.x !== newScroll.x || oldScroll.y !== newScroll.y) {
 				if (e.preventDefault) { e.preventDefault(); }
 				return false;
@@ -6855,32 +6824,32 @@ define("orion/textview/textView", ['orio
 				element = element.parentNode;
 			}
 			var ruler = element ? element._ruler : null;
-			if (lineIndex === undefined && ruler && ruler.getOverview() === "document") { //$NON-NLS-0$
+			if (lineIndex === undefined && ruler && ruler.getOverview() === "document") {
 				var clientHeight = this._getClientHeight ();
 				var lineCount = this._model.getLineCount ();
 				var viewPad = this._getViewPadding();
 				var viewRect = this._viewDiv.getBoundingClientRect();
-				var trackHeight = clientHeight + viewPad.top + viewPad.bottom - 2 * this._metrics.scrollWidth;
-				lineIndex = Math.floor(((e.clientY - viewRect.top) - this._metrics.scrollWidth) * lineCount / trackHeight);
+				var trackHeight = clientHeight + viewPad.top + viewPad.bottom - 2 * scrollButtonHeight;
+				lineIndex = Math.floor(((e.clientY - viewRect.top) - scrollButtonHeight) * lineCount / trackHeight);
 				if (!(0 <= lineIndex && lineIndex < lineCount)) {
 					lineIndex = undefined;
 				}
 			}
 			if (ruler) {
 				switch (e.type) {
-					case "click": //$NON-NLS-0$
+					case "click":
 						if (ruler.onClick) { ruler.onClick(lineIndex, e); }
 						break;
-					case "dblclick": //$NON-NLS-0$
+					case "dblclick": 
 						if (ruler.onDblClick) { ruler.onDblClick(lineIndex, e); }
 						break;
-					case "mousemove": //$NON-NLS-0$
+					case "mousemove": 
 						if (ruler.onMouseMove) { ruler.onMouseMove(lineIndex, e); }
 						break;
-					case "mouseover": //$NON-NLS-0$
+					case "mouseover": 
 						if (ruler.onMouseOver) { ruler.onMouseOver(lineIndex, e); }
 						break;
-					case "mouseout": //$NON-NLS-0$
+					case "mouseout": 
 						if (ruler.onMouseOut) { ruler.onMouseOut(lineIndex, e); }
 						break;
 				}
@@ -6896,7 +6865,7 @@ define("orion/textview/textView", ['orio
 				this._commitIME();
 				this._updatePage(oldY === scroll.y);
 				var e = {
-					type: "Scroll", //$NON-NLS-0$
+					type: "Scroll",
 					oldValue: {x: oldX, y: oldY},
 					newValue: scroll
 				};
@@ -6913,14 +6882,14 @@ define("orion/textview/textView", ['orio
 		_getModelOffset: function(node, offset) {
 			if (!node) { return; }
 			var lineNode;
-			if (node.tagName === "DIV") { //$NON-NLS-0$
+			if (node.tagName === "DIV") {
 				lineNode = node;
 			} else {
 				lineNode = node.parentNode.parentNode;
 			}
 			var lineOffset = 0;
 			var lineIndex = lineNode.lineIndex;
-			if (node.tagName !== "DIV") { //$NON-NLS-0$
+			if (node.tagName !== "DIV") {
 				var child = lineNode.firstChild;
 				while (child) {
 					var textNode = child.firstChild;
@@ -6947,8 +6916,8 @@ define("orion/textview/textView", ['orio
 		},
 		_handleTouchStart: function (e) {
 			if (this._touchScrollTimer) {
-				this._vScrollDiv.style.display = "none"; //$NON-NLS-0$
-				this._hScrollDiv.style.display = "none"; //$NON-NLS-0$
+				this._vScrollDiv.style.display = "none";
+				this._hScrollDiv.style.display = "none";
 				clearInterval(this._touchScrollTimer);
 				this._touchScrollTimer = null;
 			}
@@ -6970,8 +6939,8 @@ define("orion/textview/textView", ['orio
 				this._touchCurrentY = touch.clientY;
 				var interval = 10;
 				if (!this._touchScrollTimer && (e.timeStamp - this._touchStartTime) < (interval*20)) {
-					this._vScrollDiv.style.display = "block"; //$NON-NLS-0$
-					this._hScrollDiv.style.display = "block"; //$NON-NLS-0$
+					this._vScrollDiv.style.display = "block";
+					this._hScrollDiv.style.display = "block";
 					var self = this;
 					this._touchScrollTimer = setInterval(function() {
 						var deltaX = 0, deltaY = 0;
@@ -6984,8 +6953,8 @@ define("orion/textview/textView", ['orio
 							self._touchStartY = self._touchCurrentY;
 						} else {
 							if (Math.abs(self._touchSpeedX) < 0.1 && Math.abs(self._touchSpeedY) < 0.1) {
-								self._vScrollDiv.style.display = "none"; //$NON-NLS-0$
-								self._hScrollDiv.style.display = "none"; //$NON-NLS-0$
+								self._vScrollDiv.style.display = "none";
+								self._hScrollDiv.style.display = "none";
 								clearInterval(self._touchScrollTimer);
 								self._touchScrollTimer = null;
 								return;
@@ -7017,20 +6986,23 @@ define("orion/textview/textView", ['orio
 			for (var i = 0; i < keyBindings.length; i++) {
 				var kb = keyBindings[i];
 				if (kb.keyBinding.match(e)) {
-					if (kb.actionID) {
+					if (kb.name) {
 						var actions = this._actions;
-						var action = actions[kb.actionID];
-						if (action) {
-							if (action.handler) {
-								if (!action.handler()) {
-									if (action.defaultHandler) {
-										return typeof(action.defaultHandler()) === "boolean"; //$NON-NLS-0$
-									} else {
-										return false;
+						for (var j = 0; j < actions.length; j++) {
+							var a = actions[j];
+							if (a.name === kb.name) {
+								if (a.userHandler) {
+									if (!a.userHandler()) {
+										if (a.defaultHandler) {
+											return typeof(a.defaultHandler()) === "boolean";
+										} else {
+											return false;
+										}
 									}
+								} else if (a.defaultHandler) {
+									return typeof(a.defaultHandler()) === "boolean";
 								}
-							} else if (action.defaultHandler) {
-								return typeof(action.defaultHandler()) === "boolean"; //$NON-NLS-0$
+								break;
 							}
 						}
 					}
@@ -7052,7 +7024,7 @@ define("orion/textview/textView", ['orio
 					}
 				} else {
 					var removeTab = false;
-					if (this._expandTab && args.unit === "character" && (caret - lineStart) % this._tabSize === 0) { //$NON-NLS-0$
+					if (this._expandTab && args.unit === "character" && (caret - lineStart) % this._tabSize === 0) {
 						var lineText = model.getText(lineStart, caret);
 						removeTab = !/[^ ]/.test(lineText); // Only spaces between line start and caret.
 					}
@@ -7080,7 +7052,7 @@ define("orion/textview/textView", ['orio
 		},
 		_doCursorNext: function (args) {
 			if (!args.select) {
-				if (this._clearSelection("next")) { return true; } //$NON-NLS-0$
+				if (this._clearSelection("next")) { return true; }
 			}
 			var model = this._model;
 			var selection = this._getSelection();
@@ -7099,7 +7071,7 @@ define("orion/textview/textView", ['orio
 		},
 		_doCursorPrevious: function (args) {
 			if (!args.select) {
-				if (this._clearSelection("previous")) { return true; } //$NON-NLS-0$
+				if (this._clearSelection("previous")) { return true; }
 			}
 			var model = this._model;
 			var selection = this._getSelection();
@@ -7303,11 +7275,11 @@ define("orion/textview/textView", ['orio
 			var verticalScrollOffset = this._getScroll().y;
 			var pixel;
 			switch (type) {
-				case "textStart": pixel = 0; break; //$NON-NLS-0$
-				case "textEnd": pixel = verticalMaximum - clientHeight; break; //$NON-NLS-0$
-				case "pageDown": pixel = verticalScrollOffset + clientHeight; break; //$NON-NLS-0$
-				case "pageUp": pixel = verticalScrollOffset - clientHeight; break; //$NON-NLS-0$
-				case "centerLine": //$NON-NLS-0$
+				case "textStart": pixel = 0; break;
+				case "textEnd": pixel = verticalMaximum - clientHeight; break;
+				case "pageDown": pixel = verticalScrollOffset + clientHeight; break;
+				case "pageUp": pixel = verticalScrollOffset - clientHeight; break;
+				case "centerLine":
 					var selection = this._getSelection();
 					var lineStart = model.getLineAtOffset(selection.start);
 					var lineEnd = model.getLineAtOffset(selection.end);
@@ -7319,7 +7291,6 @@ define("orion/textview/textView", ['orio
 				pixel = Math.min(Math.max(0, pixel), verticalMaximum - clientHeight);
 				this._scrollView(0, pixel - verticalScrollOffset);
 			}
-			return true;
 		},
 		_doSelectAll: function (args) {
 			var model = this._model;
@@ -7330,21 +7301,21 @@ define("orion/textview/textView", ['orio
 			return true;
 		},
 		_doTab: function (args) {
-			if(!this._tabMode || this._readonly) { return; }
-			var text = "\t"; //$NON-NLS-0$
+			if(!this._tabMode) { return; }
+			var text = "\t";
 			if (this._expandTab) {
 				var model = this._model;
 				var caret = this._getSelection().getCaret();
 				var lineIndex = model.getLineAtOffset(caret);
 				var lineStart = model.getLineStart(lineIndex);
 				var spaces = this._tabSize - ((caret - lineStart) % this._tabSize);
-				text = (new Array(spaces + 1)).join(" "); //$NON-NLS-0$
+				text = (new Array(spaces + 1)).join(" ");
 			}
 			this._doContent(text);
 			return true;
 		},
 		_doShiftTab: function (args) {
-			if(!this._tabMode || this._readonly) { return; }
+			if(!this._tabMode) { return; }
 			return true;
 		},
 		_doTabMode: function (args) {
@@ -7390,12 +7361,12 @@ define("orion/textview/textView", ['orio
 			var selection = this._getSelection();
 			var line;
 			var x = this._autoScrollX;
-			if (this._autoScrollDir === "up" || this._autoScrollDir === "down") { //$NON-NLS-1$ //$NON-NLS-0$
+			if (this._autoScrollDir === "up" || this._autoScrollDir === "down") {
 				var scroll = this._autoScrollY / this._getLineHeight();
 				scroll = scroll < 0 ? Math.floor(scroll) : Math.ceil(scroll);
 				line = this._model.getLineAtOffset(selection.getCaret());
 				line = Math.max(0, Math.min(this._model.getLineCount() - 1, line + scroll));
-			} else if (this._autoScrollDir === "left" || this._autoScrollDir === "right") { //$NON-NLS-1$ //$NON-NLS-0$
+			} else if (this._autoScrollDir === "left" || this._autoScrollDir === "right") {
 				line = this._getYToLine(this._autoScrollY);
 				x += this._getOffsetToX(selection.getCaret());
 			}
@@ -7409,30 +7380,30 @@ define("orion/textview/textView", ['orio
 		},
 		_calculateMetrics: function() {
 			var parent = this._clientDiv;
-			var c = " "; //$NON-NLS-0$
-			var line = document.createElement("DIV"); //$NON-NLS-0$
-			line.style.lineHeight = "normal"; //$NON-NLS-0$
+			var c = " ";
+			var line = document.createElement("DIV");
+			line.style.lineHeight = "normal";
 			var model = this._model;
 			var lineText = model.getLine(0);
-			var e = {type:"LineStyle", textView: this, 0: 0, lineText: lineText, lineStart: 0}; //$NON-NLS-0$
+			var e = {type:"LineStyle", textView: this, 0: 0, lineText: lineText, lineStart: 0};
 			this.onLineStyle(e);
 			this._applyStyle(e.style, line);
-			line.style.position = "fixed"; //$NON-NLS-0$
-			line.style.left = "-1000px"; //$NON-NLS-0$
-			var span1 = document.createElement("SPAN"); //$NON-NLS-0$
+			line.style.position = "fixed";
+			line.style.left = "-1000px";
+			var span1 = document.createElement("SPAN");
 			span1.appendChild(document.createTextNode(c));
 			line.appendChild(span1);
-			var span2 = document.createElement("SPAN"); //$NON-NLS-0$
-			span2.style.fontStyle = "italic"; //$NON-NLS-0$
+			var span2 = document.createElement("SPAN");
+			span2.style.fontStyle = "italic";
 			span2.appendChild(document.createTextNode(c));
 			line.appendChild(span2);
-			var span3 = document.createElement("SPAN"); //$NON-NLS-0$
-			span3.style.fontWeight = "bold"; //$NON-NLS-0$
+			var span3 = document.createElement("SPAN");
+			span3.style.fontWeight = "bold";
 			span3.appendChild(document.createTextNode(c));
 			line.appendChild(span3);
-			var span4 = document.createElement("SPAN"); //$NON-NLS-0$
-			span4.style.fontWeight = "bold"; //$NON-NLS-0$
-			span4.style.fontStyle = "italic"; //$NON-NLS-0$
+			var span4 = document.createElement("SPAN");
+			span4.style.fontWeight = "bold";
+			span4.style.fontStyle = "italic";
 			span4.appendChild(document.createTextNode(c));
 			line.appendChild(span4);
 			parent.appendChild(line);
@@ -7460,52 +7431,48 @@ define("orion/textview/textView", ['orio
 			if (fontStyle !== 0) {
 				style = {style: {}};
 				if ((fontStyle & 1) !== 0) {
-					style.style.fontStyle = "italic"; //$NON-NLS-0$
+					style.style.fontStyle = "italic";
 				}
 				if ((fontStyle & 2) !== 0) {
-					style.style.fontWeight = "bold"; //$NON-NLS-0$
+					style.style.fontWeight = "bold";
 				}
 			}
 			var trim = this._getLineTrim(line);
 			parent.removeChild(line);
-			
-			// calculate pad and scroll width
+			return {lineHeight: lineHeight, largestFontStyle: style, lineTrim: trim, viewPadding: this._calculatePadding()};
+		},
+		_calculatePadding: function() {
+			var parent = this._clientDiv;
 			var pad = this._getPadding(this._viewDiv);
-			var div1 = document.createElement("DIV"); //$NON-NLS-0$
-			div1.style.position = "fixed"; //$NON-NLS-0$
-			div1.style.left = "-1000px"; //$NON-NLS-0$
-			div1.style.paddingLeft = pad.left + "px"; //$NON-NLS-0$
-			div1.style.paddingTop = pad.top + "px"; //$NON-NLS-0$
-			div1.style.paddingRight = pad.right + "px"; //$NON-NLS-0$
-			div1.style.paddingBottom = pad.bottom + "px"; //$NON-NLS-0$
-			div1.style.width = "100px"; //$NON-NLS-0$
-			div1.style.height = "100px"; //$NON-NLS-0$
-			var div2 = document.createElement("DIV"); //$NON-NLS-0$
-			div2.style.width = "100%"; //$NON-NLS-0$
-			div2.style.height = "100%"; //$NON-NLS-0$
+			var div1 = document.createElement("DIV");
+			div1.style.position = "fixed";
+			div1.style.left = "-1000px";
+			div1.style.paddingLeft = pad.left + "px";
+			div1.style.paddingTop = pad.top + "px";
+			div1.style.paddingRight = pad.right + "px";
+			div1.style.paddingBottom = pad.bottom + "px";
+			div1.style.width = "100px";
+			div1.style.height = "100px";
+			var div2 = document.createElement("DIV");
+			div2.style.width = "100%";
+			div2.style.height = "100%";
 			div1.appendChild(div2);
 			parent.appendChild(div1);
 			var rect1 = div1.getBoundingClientRect();
 			var rect2 = div2.getBoundingClientRect();
-			div1.style.overflow = 'hidden'; //$NON-NLS-0$
-			div2.style.height = "200px"; //$NON-NLS-0$
-			var w1 = div1.clientWidth;
-			div1.style.overflow = 'scroll'; //$NON-NLS-0$
-			var w2 = div1.clientWidth;
 			parent.removeChild(div1);
-			var scrollWidth = w1 - w2;
 			pad = {
 				left: rect2.left - rect1.left,
 				top: rect2.top - rect1.top,
 				right: rect1.right - rect2.right,
 				bottom: rect1.bottom - rect2.bottom
 			};
-			return {lineHeight: lineHeight, largestFontStyle: style, lineTrim: trim, viewPadding: pad, scrollWidth: scrollWidth};
+			return pad;
 		},
 		_clearSelection: function (direction) {
 			var selection = this._getSelection();
 			if (selection.isEmpty()) { return false; }
-			if (direction === "next") { //$NON-NLS-0$
+			if (direction === "next") {
 				selection.start = selection.end;
 			} else {
 				selection.end = selection.start;
@@ -7571,8 +7538,8 @@ define("orion/textview/textView", ['orio
 		_convertDelimiter: function (text, addTextFunc, addDelimiterFunc) {
 				var cr = 0, lf = 0, index = 0, length = text.length;
 				while (index < length) {
-					if (cr !== -1 && cr <= index) { cr = text.indexOf("\r", index); } //$NON-NLS-0$
-					if (lf !== -1 && lf <= index) { lf = text.indexOf("\n", index); } //$NON-NLS-0$
+					if (cr !== -1 && cr <= index) { cr = text.indexOf("\r", index); }
+					if (lf !== -1 && lf <= index) { lf = text.indexOf("\n", index); }
 					var start = index, end;
 					if (lf === -1 && cr === -1) {
 						addTextFunc(text.substring(index));
@@ -7603,96 +7570,96 @@ define("orion/textview/textView", ['orio
 			var bindings = this._keyBindings = [];
 
 			// Cursor Navigation
-			bindings.push({actionID: "lineUp",		keyBinding: new KeyBinding(38), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "lineDown",	keyBinding: new KeyBinding(40), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "charPrevious",	keyBinding: new KeyBinding(37), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "charNext",	keyBinding: new KeyBinding(39), predefined: true}); //$NON-NLS-0$
+			bindings.push({name: "lineUp",		keyBinding: new KeyBinding(38), predefined: true});
+			bindings.push({name: "lineDown",	keyBinding: new KeyBinding(40), predefined: true});
+			bindings.push({name: "charPrevious",	keyBinding: new KeyBinding(37), predefined: true});
+			bindings.push({name: "charNext",	keyBinding: new KeyBinding(39), predefined: true});
 			if (isMac) {
-				bindings.push({actionID: "scrollPageUp",		keyBinding: new KeyBinding(33), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "scrollPageDown",	keyBinding: new KeyBinding(34), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "pageUp",		keyBinding: new KeyBinding(33, null, null, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "pageDown",	keyBinding: new KeyBinding(34, null, null, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "lineStart",	keyBinding: new KeyBinding(37, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "lineEnd",		keyBinding: new KeyBinding(39, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "wordPrevious",	keyBinding: new KeyBinding(37, null, null, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "wordNext",	keyBinding: new KeyBinding(39, null, null, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "scrollTextStart",	keyBinding: new KeyBinding(36), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "scrollTextEnd",		keyBinding: new KeyBinding(35), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "textStart",	keyBinding: new KeyBinding(38, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "textEnd",		keyBinding: new KeyBinding(40, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "scrollPageUp",	keyBinding: new KeyBinding(38, null, null, null, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "scrollPageDown",		keyBinding: new KeyBinding(40, null, null, null, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "lineStart",	keyBinding: new KeyBinding(37, null, null, null, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "lineEnd",		keyBinding: new KeyBinding(39, null, null, null, true), predefined: true}); //$NON-NLS-0$
+				bindings.push({name: "scrollPageUp",		keyBinding: new KeyBinding(33), predefined: true});
+				bindings.push({name: "scrollPageDown",	keyBinding: new KeyBinding(34), predefined: true});
+				bindings.push({name: "pageUp",		keyBinding: new KeyBinding(33, null, null, true), predefined: true});
+				bindings.push({name: "pageDown",	keyBinding: new KeyBinding(34, null, null, true), predefined: true});
+				bindings.push({name: "lineStart",	keyBinding: new KeyBinding(37, true), predefined: true});
+				bindings.push({name: "lineEnd",		keyBinding: new KeyBinding(39, true), predefined: true});
+				bindings.push({name: "wordPrevious",	keyBinding: new KeyBinding(37, null, null, true), predefined: true});
+				bindings.push({name: "wordNext",	keyBinding: new KeyBinding(39, null, null, true), predefined: true});
+				bindings.push({name: "scrollTextStart",	keyBinding: new KeyBinding(36), predefined: true});
+				bindings.push({name: "scrollTextEnd",		keyBinding: new KeyBinding(35), predefined: true});
+				bindings.push({name: "textStart",	keyBinding: new KeyBinding(38, true), predefined: true});
+				bindings.push({name: "textEnd",		keyBinding: new KeyBinding(40, true), predefined: true});
+				bindings.push({name: "scrollPageUp",	keyBinding: new KeyBinding(38, null, null, null, true), predefined: true});
+				bindings.push({name: "scrollPageDown",		keyBinding: new KeyBinding(40, null, null, null, true), predefined: true});
+				bindings.push({name: "lineStart",	keyBinding: new KeyBinding(37, null, null, null, true), predefined: true});
+				bindings.push({name: "lineEnd",		keyBinding: new KeyBinding(39, null, null, null, true), predefined: true});
 				//TODO These two actions should be changed to paragraph start and paragraph end  when word wrap is implemented
-				bindings.push({actionID: "lineStart",	keyBinding: new KeyBinding(38, null, null, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "lineEnd",		keyBinding: new KeyBinding(40, null, null, true), predefined: true}); //$NON-NLS-0$
+				bindings.push({name: "lineStart",	keyBinding: new KeyBinding(38, null, null, true), predefined: true});
+				bindings.push({name: "lineEnd",		keyBinding: new KeyBinding(40, null, null, true), predefined: true});
 			} else {
-				bindings.push({actionID: "pageUp",		keyBinding: new KeyBinding(33), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "pageDown",	keyBinding: new KeyBinding(34), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "lineStart",	keyBinding: new KeyBinding(36), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "lineEnd",		keyBinding: new KeyBinding(35), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "wordPrevious",	keyBinding: new KeyBinding(37, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "wordNext",	keyBinding: new KeyBinding(39, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "textStart",	keyBinding: new KeyBinding(36, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "textEnd",		keyBinding: new KeyBinding(35, true), predefined: true}); //$NON-NLS-0$
+				bindings.push({name: "pageUp",		keyBinding: new KeyBinding(33), predefined: true});
+				bindings.push({name: "pageDown",	keyBinding: new KeyBinding(34), predefined: true});
+				bindings.push({name: "lineStart",	keyBinding: new KeyBinding(36), predefined: true});
+				bindings.push({name: "lineEnd",		keyBinding: new KeyBinding(35), predefined: true});
+				bindings.push({name: "wordPrevious",	keyBinding: new KeyBinding(37, true), predefined: true});
+				bindings.push({name: "wordNext",	keyBinding: new KeyBinding(39, true), predefined: true});
+				bindings.push({name: "textStart",	keyBinding: new KeyBinding(36, true), predefined: true});
+				bindings.push({name: "textEnd",		keyBinding: new KeyBinding(35, true), predefined: true});
 			}
 			if (isFirefox && isLinux) {
-				bindings.push({actionID: "lineUp",		keyBinding: new KeyBinding(38, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "lineDown",	keyBinding: new KeyBinding(40, true), predefined: true}); //$NON-NLS-0$
+				bindings.push({name: "lineUp",		keyBinding: new KeyBinding(38, true), predefined: true});
+				bindings.push({name: "lineDown",	keyBinding: new KeyBinding(40, true), predefined: true});
 			}
 
 			// Select Cursor Navigation
-			bindings.push({actionID: "selectLineUp",		keyBinding: new KeyBinding(38, null, true), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "selectLineDown",		keyBinding: new KeyBinding(40, null, true), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "selectCharPrevious",	keyBinding: new KeyBinding(37, null, true), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "selectCharNext",		keyBinding: new KeyBinding(39, null, true), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "selectPageUp",		keyBinding: new KeyBinding(33, null, true), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "selectPageDown",		keyBinding: new KeyBinding(34, null, true), predefined: true}); //$NON-NLS-0$
+			bindings.push({name: "selectLineUp",		keyBinding: new KeyBinding(38, null, true), predefined: true});
+			bindings.push({name: "selectLineDown",		keyBinding: new KeyBinding(40, null, true), predefined: true});
+			bindings.push({name: "selectCharPrevious",	keyBinding: new KeyBinding(37, null, true), predefined: true});
+			bindings.push({name: "selectCharNext",		keyBinding: new KeyBinding(39, null, true), predefined: true});
+			bindings.push({name: "selectPageUp",		keyBinding: new KeyBinding(33, null, true), predefined: true});
+			bindings.push({name: "selectPageDown",		keyBinding: new KeyBinding(34, null, true), predefined: true});
 			if (isMac) {
-				bindings.push({actionID: "selectLineStart",	keyBinding: new KeyBinding(37, true, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "selectLineEnd",		keyBinding: new KeyBinding(39, true, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "selectWordPrevious",	keyBinding: new KeyBinding(37, null, true, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "selectWordNext",	keyBinding: new KeyBinding(39, null, true, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "selectTextStart",	keyBinding: new KeyBinding(36, null, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "selectTextEnd",		keyBinding: new KeyBinding(35, null, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "selectTextStart",	keyBinding: new KeyBinding(38, true, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "selectTextEnd",		keyBinding: new KeyBinding(40, true, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "selectLineStart",	keyBinding: new KeyBinding(37, null, true, null, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "selectLineEnd",		keyBinding: new KeyBinding(39, null, true, null, true), predefined: true}); //$NON-NLS-0$
+				bindings.push({name: "selectLineStart",	keyBinding: new KeyBinding(37, true, true), predefined: true});
+				bindings.push({name: "selectLineEnd",		keyBinding: new KeyBinding(39, true, true), predefined: true});
+				bindings.push({name: "selectWordPrevious",	keyBinding: new KeyBinding(37, null, true, true), predefined: true});
+				bindings.push({name: "selectWordNext",	keyBinding: new KeyBinding(39, null, true, true), predefined: true});
+				bindings.push({name: "selectTextStart",	keyBinding: new KeyBinding(36, null, true), predefined: true});
+				bindings.push({name: "selectTextEnd",		keyBinding: new KeyBinding(35, null, true), predefined: true});
+				bindings.push({name: "selectTextStart",	keyBinding: new KeyBinding(38, true, true), predefined: true});
+				bindings.push({name: "selectTextEnd",		keyBinding: new KeyBinding(40, true, true), predefined: true});
+				bindings.push({name: "selectLineStart",	keyBinding: new KeyBinding(37, null, true, null, true), predefined: true});
+				bindings.push({name: "selectLineEnd",		keyBinding: new KeyBinding(39, null, true, null, true), predefined: true});
 				//TODO These two actions should be changed to select paragraph start and select paragraph end  when word wrap is implemented
-				bindings.push({actionID: "selectLineStart",	keyBinding: new KeyBinding(38, null, true, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "selectLineEnd",		keyBinding: new KeyBinding(40, null, true, true), predefined: true}); //$NON-NLS-0$
+				bindings.push({name: "selectLineStart",	keyBinding: new KeyBinding(38, null, true, true), predefined: true});
+				bindings.push({name: "selectLineEnd",		keyBinding: new KeyBinding(40, null, true, true), predefined: true});
 			} else {
 				if (isLinux) {
-					bindings.push({actionID: "selectWholeLineUp",		keyBinding: new KeyBinding(38, true, true), predefined: true}); //$NON-NLS-0$
-					bindings.push({actionID: "selectWholeLineDown",		keyBinding: new KeyBinding(40, true, true), predefined: true}); //$NON-NLS-0$
-				}
-				bindings.push({actionID: "selectLineStart",		keyBinding: new KeyBinding(36, null, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "selectLineEnd",		keyBinding: new KeyBinding(35, null, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "selectWordPrevious",	keyBinding: new KeyBinding(37, true, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "selectWordNext",		keyBinding: new KeyBinding(39, true, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "selectTextStart",		keyBinding: new KeyBinding(36, true, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "selectTextEnd",		keyBinding: new KeyBinding(35, true, true), predefined: true}); //$NON-NLS-0$
+					bindings.push({name: "selectWholeLineUp",		keyBinding: new KeyBinding(38, true, true), predefined: true});
+					bindings.push({name: "selectWholeLineDown",		keyBinding: new KeyBinding(40, true, true), predefined: true});
+				}
+				bindings.push({name: "selectLineStart",		keyBinding: new KeyBinding(36, null, true), predefined: true});
+				bindings.push({name: "selectLineEnd",		keyBinding: new KeyBinding(35, null, true), predefined: true});
+				bindings.push({name: "selectWordPrevious",	keyBinding: new KeyBinding(37, true, true), predefined: true});
+				bindings.push({name: "selectWordNext",		keyBinding: new KeyBinding(39, true, true), predefined: true});
+				bindings.push({name: "selectTextStart",		keyBinding: new KeyBinding(36, true, true), predefined: true});
+				bindings.push({name: "selectTextEnd",		keyBinding: new KeyBinding(35, true, true), predefined: true});
 			}
 
 			//Misc
-			bindings.push({actionID: "deletePrevious",		keyBinding: new KeyBinding(8), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "deletePrevious",		keyBinding: new KeyBinding(8, null, true), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "deleteNext",		keyBinding: new KeyBinding(46), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "deleteWordPrevious",	keyBinding: new KeyBinding(8, true), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "deleteWordPrevious",	keyBinding: new KeyBinding(8, true, true), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "deleteWordNext",		keyBinding: new KeyBinding(46, true), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "tab",			keyBinding: new KeyBinding(9), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "shiftTab",			keyBinding: new KeyBinding(9, null, true), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "enter",			keyBinding: new KeyBinding(13), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "enter",			keyBinding: new KeyBinding(13, null, true), predefined: true}); //$NON-NLS-0$
-			bindings.push({actionID: "selectAll",		keyBinding: new KeyBinding('a', true), predefined: true}); //$NON-NLS-1$ //$NON-NLS-0$
-			bindings.push({actionID: "toggleTabMode",	keyBinding: new KeyBinding('m', true), predefined: true}); //$NON-NLS-1$ //$NON-NLS-0$
+			bindings.push({name: "deletePrevious",		keyBinding: new KeyBinding(8), predefined: true});
+			bindings.push({name: "deletePrevious",		keyBinding: new KeyBinding(8, null, true), predefined: true});
+			bindings.push({name: "deleteNext",		keyBinding: new KeyBinding(46), predefined: true});
+			bindings.push({name: "deleteWordPrevious",	keyBinding: new KeyBinding(8, true), predefined: true});
+			bindings.push({name: "deleteWordPrevious",	keyBinding: new KeyBinding(8, true, true), predefined: true});
+			bindings.push({name: "deleteWordNext",		keyBinding: new KeyBinding(46, true), predefined: true});
+			bindings.push({name: "tab",			keyBinding: new KeyBinding(9), predefined: true});
+			bindings.push({name: "shiftTab",			keyBinding: new KeyBinding(9, null, true), predefined: true});
+			bindings.push({name: "enter",			keyBinding: new KeyBinding(13), predefined: true});
+			bindings.push({name: "enter",			keyBinding: new KeyBinding(13, null, true), predefined: true});
+			bindings.push({name: "selectAll",		keyBinding: new KeyBinding('a', true), predefined: true});
+			bindings.push({name: "toggleTabMode",	keyBinding: new KeyBinding('m', true), predefined: true});
 			if (isMac) {
-				bindings.push({actionID: "deleteNext",		keyBinding: new KeyBinding(46, null, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "deleteWordPrevious",	keyBinding: new KeyBinding(8, null, null, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "deleteWordNext",		keyBinding: new KeyBinding(46, null, null, true), predefined: true}); //$NON-NLS-0$
+				bindings.push({name: "deleteNext",		keyBinding: new KeyBinding(46, null, true), predefined: true});
+				bindings.push({name: "deleteWordPrevious",	keyBinding: new KeyBinding(8, null, null, true), predefined: true});
+				bindings.push({name: "deleteWordNext",		keyBinding: new KeyBinding(46, null, null, true), predefined: true});
 			}
 				
 			/*
@@ -7702,105 +7669,105 @@ define("orion/textview/textView", ['orio
 			*/
 			if (!isFirefox) {
 				var isMacChrome = isMac && isChrome;
-				bindings.push({actionID: null, keyBinding: new KeyBinding('u', !isMacChrome, false, false, isMacChrome), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: null, keyBinding: new KeyBinding('i', !isMacChrome, false, false, isMacChrome), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: null, keyBinding: new KeyBinding('b', !isMacChrome, false, false, isMacChrome), predefined: true}); //$NON-NLS-0$
+				bindings.push({name: null, keyBinding: new KeyBinding('u', !isMacChrome, false, false, isMacChrome), predefined: true});
+				bindings.push({name: null, keyBinding: new KeyBinding('i', !isMacChrome, false, false, isMacChrome), predefined: true});
+				bindings.push({name: null, keyBinding: new KeyBinding('b', !isMacChrome, false, false, isMacChrome), predefined: true});
 			}
 
 			if (isFirefox) {
-				bindings.push({actionID: "copy", keyBinding: new KeyBinding(45, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "paste", keyBinding: new KeyBinding(45, null, true), predefined: true}); //$NON-NLS-0$
-				bindings.push({actionID: "cut", keyBinding: new KeyBinding(46, null, true), predefined: true}); //$NON-NLS-0$
+				bindings.push({name: "copy", keyBinding: new KeyBinding(45, true), predefined: true});
+				bindings.push({name: "paste", keyBinding: new KeyBinding(45, null, true), predefined: true});
+				bindings.push({name: "cut", keyBinding: new KeyBinding(46, null, true), predefined: true});
 			}
 
 			// Add the emacs Control+ ... key bindings.
 			if (isMac) {
-				bindings.push({actionID: "lineStart", keyBinding: new KeyBinding("a", false, false, false, true), predefined: true}); //$NON-NLS-1$ //$NON-NLS-0$
-				bindings.push({actionID: "lineEnd", keyBinding: new KeyBinding("e", false, false, false, true), predefined: true}); //$NON-NLS-1$ //$NON-NLS-0$
-				bindings.push({actionID: "lineUp", keyBinding: new KeyBinding("p", false, false, false, true), predefined: true}); //$NON-NLS-1$ //$NON-NLS-0$
-				bindings.push({actionID: "lineDown", keyBinding: new KeyBinding("n", false, false, false, true), predefined: true}); //$NON-NLS-1$ //$NON-NLS-0$
-				bindings.push({actionID: "charPrevious", keyBinding: new KeyBinding("b", false, false, false, true), predefined: true}); //$NON-NLS-1$ //$NON-NLS-0$
-				bindings.push({actionID: "charNext", keyBinding: new KeyBinding("f", false, false, false, true), predefined: true}); //$NON-NLS-1$ //$NON-NLS-0$
-				bindings.push({actionID: "deletePrevious", keyBinding: new KeyBinding("h", false, false, false, true), predefined: true}); //$NON-NLS-1$ //$NON-NLS-0$
-				bindings.push({actionID: "deleteNext", keyBinding: new KeyBinding("d", false, false, false, true), predefined: true}); //$NON-NLS-1$ //$NON-NLS-0$
-				bindings.push({actionID: "deleteLineEnd", keyBinding: new KeyBinding("k", false, false, false, true), predefined: true}); //$NON-NLS-1$ //$NON-NLS-0$
+				bindings.push({name: "lineStart", keyBinding: new KeyBinding("a", false, false, false, true), predefined: true});
+				bindings.push({name: "lineEnd", keyBinding: new KeyBinding("e", false, false, false, true), predefined: true});
+				bindings.push({name: "lineUp", keyBinding: new KeyBinding("p", false, false, false, true), predefined: true});
+				bindings.push({name: "lineDown", keyBinding: new KeyBinding("n", false, false, false, true), predefined: true});
+				bindings.push({name: "charPrevious", keyBinding: new KeyBinding("b", false, false, false, true), predefined: true});
+				bindings.push({name: "charNext", keyBinding: new KeyBinding("f", false, false, false, true), predefined: true});
+				bindings.push({name: "deletePrevious", keyBinding: new KeyBinding("h", false, false, false, true), predefined: true});
+				bindings.push({name: "deleteNext", keyBinding: new KeyBinding("d", false, false, false, true), predefined: true});
+				bindings.push({name: "deleteLineEnd", keyBinding: new KeyBinding("k", false, false, false, true), predefined: true});
 				if (isFirefox) {
-					bindings.push({actionID: "scrollPageDown", keyBinding: new KeyBinding("v", false, false, false, true), predefined: true}); //$NON-NLS-1$ //$NON-NLS-0$
-					bindings.push({actionID: "deleteLineStart", keyBinding: new KeyBinding("u", false, false, false, true), predefined: true}); //$NON-NLS-1$ //$NON-NLS-0$
-					bindings.push({actionID: "deleteWordPrevious", keyBinding: new KeyBinding("w", false, false, false, true), predefined: true}); //$NON-NLS-1$ //$NON-NLS-0$
+					bindings.push({name: "scrollPageDown", keyBinding: new KeyBinding("v", false, false, false, true), predefined: true});
+					bindings.push({name: "deleteLineStart", keyBinding: new KeyBinding("u", false, false, false, true), predefined: true});
+					bindings.push({name: "deleteWordPrevious", keyBinding: new KeyBinding("w", false, false, false, true), predefined: true});
 				} else {
-					bindings.push({actionID: "pageDown", keyBinding: new KeyBinding("v", false, false, false, true), predefined: true}); //$NON-NLS-1$ //$NON-NLS-0$
-					bindings.push({actionID: "centerLine", keyBinding: new KeyBinding("l", false, false, false, true), predefined: true}); //$NON-NLS-1$ //$NON-NLS-0$
-					bindings.push({actionID: "enterNoCursor", keyBinding: new KeyBinding("o", false, false, false, true), predefined: true}); //$NON-NLS-1$ //$NON-NLS-0$
+					bindings.push({name: "pageDown", keyBinding: new KeyBinding("v", false, false, false, true), predefined: true});
+					bindings.push({name: "centerLine", keyBinding: new KeyBinding("l", false, false, false, true), predefined: true});
+					bindings.push({name: "enterNoCursor", keyBinding: new KeyBinding("o", false, false, false, true), predefined: true});
 					//TODO implement: y (yank), t (transpose)
 				}
 			}
 
 			//1 to 1, no duplicates
 			var self = this;
-			this._actions = {
-				"lineUp": {defaultHandler: function() {return self._doLineUp({select: false});}}, //$NON-NLS-0$
-				"lineDown": {defaultHandler: function() {return self._doLineDown({select: false});}}, //$NON-NLS-0$
-				"lineStart": {defaultHandler: function() {return self._doHome({select: false, ctrl:false});}}, //$NON-NLS-0$
-				"lineEnd": {defaultHandler: function() {return self._doEnd({select: false, ctrl:false});}}, //$NON-NLS-0$
-				"charPrevious": {defaultHandler: function() {return self._doCursorPrevious({select: false, unit:"character"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"charNext": {defaultHandler: function() {return self._doCursorNext({select: false, unit:"character"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"pageUp": {defaultHandler: function() {return self._doPageUp({select: false});}}, //$NON-NLS-0$
-				"pageDown": {defaultHandler: function() {return self._doPageDown({select: false});}}, //$NON-NLS-0$
-				"scrollPageUp": {defaultHandler: function() {return self._doScroll({type: "pageUp"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"scrollPageDown": {defaultHandler: function() {return self._doScroll({type: "pageDown"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"wordPrevious": {defaultHandler: function() {return self._doCursorPrevious({select: false, unit:"word"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"wordNext": {defaultHandler: function() {return self._doCursorNext({select: false, unit:"word"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"textStart": {defaultHandler: function() {return self._doHome({select: false, ctrl:true});}}, //$NON-NLS-0$
-				"textEnd": {defaultHandler: function() {return self._doEnd({select: false, ctrl:true});}}, //$NON-NLS-0$
-				"scrollTextStart": {defaultHandler: function() {return self._doScroll({type: "textStart"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"scrollTextEnd": {defaultHandler: function() {return self._doScroll({type: "textEnd"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"centerLine": {defaultHandler: function() {return self._doScroll({type: "centerLine"});}}, //$NON-NLS-1$ //$NON-NLS-0$
+			this._actions = [
+				{name: "lineUp",		defaultHandler: function() {return self._doLineUp({select: false});}},
+				{name: "lineDown",		defaultHandler: function() {return self._doLineDown({select: false});}},
+				{name: "lineStart",		defaultHandler: function() {return self._doHome({select: false, ctrl:false});}},
+				{name: "lineEnd",		defaultHandler: function() {return self._doEnd({select: false, ctrl:false});}},
+				{name: "charPrevious",		defaultHandler: function() {return self._doCursorPrevious({select: false, unit:"character"});}},
+				{name: "charNext",		defaultHandler: function() {return self._doCursorNext({select: false, unit:"character"});}},
+				{name: "pageUp",		defaultHandler: function() {return self._doPageUp({select: false});}},
+				{name: "pageDown",		defaultHandler: function() {return self._doPageDown({select: false});}},
+				{name: "scrollPageUp",		defaultHandler: function() {return self._doScroll({type: "pageUp"});}},
+				{name: "scrollPageDown",		defaultHandler: function() {return self._doScroll({type: "pageDown"});}},
+				{name: "wordPrevious",		defaultHandler: function() {return self._doCursorPrevious({select: false, unit:"word"});}},
+				{name: "wordNext",		defaultHandler: function() {return self._doCursorNext({select: false, unit:"word"});}},
+				{name: "textStart",		defaultHandler: function() {return self._doHome({select: false, ctrl:true});}},
+				{name: "textEnd",		defaultHandler: function() {return self._doEnd({select: false, ctrl:true});}},
+				{name: "scrollTextStart",	defaultHandler: function() {return self._doScroll({type: "textStart"});}},
+				{name: "scrollTextEnd",		defaultHandler: function() {return self._doScroll({type: "textEnd"});}},
+				{name: "centerLine",		defaultHandler: function() {return self._doScroll({type: "centerLine"});}},
 				
-				"selectLineUp": {defaultHandler: function() {return self._doLineUp({select: true});}}, //$NON-NLS-0$
-				"selectLineDown": {defaultHandler: function() {return self._doLineDown({select: true});}}, //$NON-NLS-0$
-				"selectWholeLineUp": {defaultHandler: function() {return self._doLineUp({select: true, wholeLine: true});}}, //$NON-NLS-0$
-				"selectWholeLineDown": {defaultHandler: function() {return self._doLineDown({select: true, wholeLine: true});}}, //$NON-NLS-0$
-				"selectLineStart": {defaultHandler: function() {return self._doHome({select: true, ctrl:false});}}, //$NON-NLS-0$
-				"selectLineEnd": {defaultHandler: function() {return self._doEnd({select: true, ctrl:false});}}, //$NON-NLS-0$
-				"selectCharPrevious": {defaultHandler: function() {return self._doCursorPrevious({select: true, unit:"character"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"selectCharNext": {defaultHandler: function() {return self._doCursorNext({select: true, unit:"character"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"selectPageUp": {defaultHandler: function() {return self._doPageUp({select: true});}}, //$NON-NLS-0$
-				"selectPageDown": {defaultHandler: function() {return self._doPageDown({select: true});}}, //$NON-NLS-0$
-				"selectWordPrevious": {defaultHandler: function() {return self._doCursorPrevious({select: true, unit:"word"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"selectWordNext": {defaultHandler: function() {return self._doCursorNext({select: true, unit:"word"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"selectTextStart": {defaultHandler: function() {return self._doHome({select: true, ctrl:true});}}, //$NON-NLS-0$
-				"selectTextEnd": {defaultHandler: function() {return self._doEnd({select: true, ctrl:true});}}, //$NON-NLS-0$
-
-				"deletePrevious": {defaultHandler: function() {return self._doBackspace({unit:"character"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"deleteNext": {defaultHandler: function() {return self._doDelete({unit:"character"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"deleteWordPrevious": {defaultHandler: function() {return self._doBackspace({unit:"word"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"deleteWordNext": {defaultHandler: function() {return self._doDelete({unit:"word"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"deleteLineStart": {defaultHandler: function() {return self._doBackspace({unit: "line"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"deleteLineEnd": {defaultHandler: function() {return self._doDelete({unit: "line"});}}, //$NON-NLS-1$ //$NON-NLS-0$
-				"tab": {defaultHandler: function() {return self._doTab();}}, //$NON-NLS-0$
-				"shiftTab": {defaultHandler: function() {return self._doShiftTab();}}, //$NON-NLS-0$
-				"enter": {defaultHandler: function() {return self._doEnter();}}, //$NON-NLS-0$
-				"enterNoCursor": {defaultHandler: function() {return self._doEnter({noCursor:true});}}, //$NON-NLS-0$
-				"selectAll": {defaultHandler: function() {return self._doSelectAll();}}, //$NON-NLS-0$
-				"copy": {defaultHandler: function() {return self._doCopy();}}, //$NON-NLS-0$
-				"cut": {defaultHandler: function() {return self._doCut();}}, //$NON-NLS-0$
-				"paste": {defaultHandler: function() {return self._doPaste();}}, //$NON-NLS-0$
+				{name: "selectLineUp",		defaultHandler: function() {return self._doLineUp({select: true});}},
+				{name: "selectLineDown",	defaultHandler: function() {return self._doLineDown({select: true});}},
+				{name: "selectWholeLineUp",		defaultHandler: function() {return self._doLineUp({select: true, wholeLine: true});}},
+				{name: "selectWholeLineDown",	defaultHandler: function() {return self._doLineDown({select: true, wholeLine: true});}},
+				{name: "selectLineStart",	defaultHandler: function() {return self._doHome({select: true, ctrl:false});}},
+				{name: "selectLineEnd",		defaultHandler: function() {return self._doEnd({select: true, ctrl:false});}},
+				{name: "selectCharPrevious",	defaultHandler: function() {return self._doCursorPrevious({select: true, unit:"character"});}},
+				{name: "selectCharNext",	defaultHandler: function() {return self._doCursorNext({select: true, unit:"character"});}},
+				{name: "selectPageUp",		defaultHandler: function() {return self._doPageUp({select: true});}},
+				{name: "selectPageDown",	defaultHandler: function() {return self._doPageDown({select: true});}},
+				{name: "selectWordPrevious",	defaultHandler: function() {return self._doCursorPrevious({select: true, unit:"word"});}},
+				{name: "selectWordNext",	defaultHandler: function() {return self._doCursorNext({select: true, unit:"word"});}},
+				{name: "selectTextStart",	defaultHandler: function() {return self._doHome({select: true, ctrl:true});}},
+				{name: "selectTextEnd",		defaultHandler: function() {return self._doEnd({select: true, ctrl:true});}},
+
+				{name: "deletePrevious",	defaultHandler: function() {return self._doBackspace({unit:"character"});}},
+				{name: "deleteNext",		defaultHandler: function() {return self._doDelete({unit:"character"});}},
+				{name: "deleteWordPrevious",	defaultHandler: function() {return self._doBackspace({unit:"word"});}},
+				{name: "deleteWordNext",	defaultHandler: function() {return self._doDelete({unit:"word"});}},
+				{name: "deleteLineStart",	defaultHandler: function() {return self._doBackspace({unit: "line"});}},
+				{name: "deleteLineEnd",	defaultHandler: function() {return self._doDelete({unit: "line"});}},
+				{name: "tab",			defaultHandler: function() {return self._doTab();}},
+				{name: "shiftTab",			defaultHandler: function() {return self._doShiftTab();}},
+				{name: "enter",			defaultHandler: function() {return self._doEnter();}},
+				{name: "enterNoCursor",	defaultHandler: function() {return self._doEnter({noCursor:true});}},
+				{name: "selectAll",		defaultHandler: function() {return self._doSelectAll();}},
+				{name: "copy",			defaultHandler: function() {return self._doCopy();}},
+				{name: "cut",			defaultHandler: function() {return self._doCut();}},
+				{name: "paste",			defaultHandler: function() {return self._doPaste();}},
 				
-				"toggleTabMode": {defaultHandler: function() {return self._doTabMode();}} //$NON-NLS-0$
-			};
+				{name: "toggleTabMode",			defaultHandler: function() {return self._doTabMode();}}
+			];
 		},
 		_createLine: function(parent, div, document, lineIndex, model) {
 			var lineText = model.getLine(lineIndex);
 			var lineStart = model.getLineStart(lineIndex);
-			var e = {type:"LineStyle", textView: this, lineIndex: lineIndex, lineText: lineText, lineStart: lineStart}; //$NON-NLS-0$
+			var e = {type:"LineStyle", textView: this, lineIndex: lineIndex, lineText: lineText, lineStart: lineStart};
 			this.onLineStyle(e);
-			var lineDiv = div || document.createElement("DIV"); //$NON-NLS-0$
+			var lineDiv = div || document.createElement("DIV");
 			if (!div || !this._compare(div.viewStyle, e.style)) {
 				this._applyStyle(e.style, lineDiv, div);
 				if (div) { div._trim = null; }
 				lineDiv.viewStyle = e.style;
-				lineDiv.setAttribute("role", "presentation"); //$NON-NLS-1$ //$NON-NLS-0$
+				lineDiv.setAttribute("role", "presentation");
 			}
 			lineDiv.lineIndex = lineIndex;
 			var ranges = [];
@@ -7815,14 +7782,14 @@ define("orion/textview/textView", ['orio
 			* selection at the end of the line when the line is fully selected. 
 			* 3. The height of a div with only an empty span is zero.
 			*/
-			var c = " "; //$NON-NLS-0$
+			var c = " ";
 			if (!this._fullSelection && isIE < 9) {
 				/* 
 				* IE8 already selects extra space at end of a line fully selected,
 				* adding another space at the end of the line causes the selection 
 				* to look too big. The fix is to use a zero-width space (\uFEFF) instead. 
 				*/
-				c = "\uFEFF"; //$NON-NLS-0$
+				c = "\uFEFF";
 			}
 			if (isWebkit) {
 				/*
@@ -7832,7 +7799,7 @@ define("orion/textview/textView", ['orio
 				* Note: To not use \uFEFF because in old version of Chrome this character 
 				* shows a glyph;
 				*/
-				c = "\u200C"; //$NON-NLS-0$
+				c = "\u200C";
 			}
 			ranges.push({text: c, style: this._metrics.largestFontStyle, ignoreChars: 1});
 			
@@ -7871,8 +7838,7 @@ define("orion/textview/textView", ['orio
 								if (spanEnd >= changeStart) {
 									spanEnd -= changeCount;
 								}
-								var t = oldSpan.firstChild.data;
-								var length = t ? t.length : 0;
+								var length = oldSpan.firstChild.data.length;
 								if (oldEnd + length > spanEnd) { break; }
 								oldEnd += length;
 							}
@@ -7937,7 +7903,7 @@ define("orion/textview/textView", ['orio
 			if (start >= end) { return; }
 			var tabSize = this._customTabSize, range;
 			if (tabSize && tabSize !== 8) {
-				var tabIndex = text.indexOf("\t", start); //$NON-NLS-0$
+				var tabIndex = text.indexOf("\t", start);
 				while (tabIndex !== -1 && tabIndex < end) {
 					if (start < tabIndex) {
 						range = {text: text.substring(start, tabIndex), style: style};
@@ -7947,16 +7913,16 @@ define("orion/textview/textView", ['orio
 					var spacesCount = tabSize - (data.tabOffset % tabSize);
 					if (spacesCount > 0) {
 						//TODO hack to preserve text length in getDOMText()
-						var spaces = "\u00A0"; //$NON-NLS-0$
+						var spaces = "\u00A0";
 						for (var i = 1; i < spacesCount; i++) {
-							spaces += " "; //$NON-NLS-0$
+							spaces += " ";
 						}
 						range = {text: spaces, style: style, ignoreChars: spacesCount - 1};
 						data.ranges.push(range);
 						data.tabOffset += range.text.length;
 					}
 					start = tabIndex + 1;
-					tabIndex = text.indexOf("\t", start); //$NON-NLS-0$
+					tabIndex = text.indexOf("\t", start);
 				}
 			}
 			if (start < end) {
@@ -7966,15 +7932,15 @@ define("orion/textview/textView", ['orio
 			}
 		},
 		_createSpan: function(parent, document, text, style, ignoreChars) {
-			var isLink = style && style.tagName === "A"; //$NON-NLS-0$
+			var isLink = style && style.tagName === "A";
 			if (isLink) { parent.hasLink = true; }
-			var tagName = isLink && this._linksVisible ? "A" : "SPAN"; //$NON-NLS-1$ //$NON-NLS-0$
+			var tagName = isLink && this._linksVisible ? "A" : "SPAN";
 			var child = document.createElement(tagName);
 			child.appendChild(document.createTextNode(text));
 			this._applyStyle(style, child);
-			if (tagName === "A") { //$NON-NLS-0$
+			if (tagName === "A") {
 				var self = this;
-				addHandler(child, "click", function(e) { return self._handleLinkClick(e); }, false); //$NON-NLS-0$
+				addHandler(child, "click", function(e) { return self._handleLinkClick(e); }, false);
 			}
 			child.viewStyle = style;
 			if (ignoreChars) {
@@ -7985,16 +7951,16 @@ define("orion/textview/textView", ['orio
 		_createRuler: function(ruler, index) {
 			if (!this._clientDiv) { return; }
 			var side = ruler.getLocation();
-			var rulerParent = side === "left" ? this._leftDiv : this._rightDiv; //$NON-NLS-0$
-			var div = document.createElement("DIV"); //$NON-NLS-0$
+			var rulerParent = side === "left" ? this._leftDiv : this._rightDiv;
+			var div = document.createElement("DIV");
 			div._ruler = ruler;
 			div.rulerChanged = true;
-			div.style.position = "relative"; //$NON-NLS-0$
+			div.style.position = "relative";
 			var row = rulerParent.firstChild.rows[0];
 			var length = row.cells.length;
 			index = index === undefined || index < 0 || index > length ? length : index;
 			var cell = row.insertCell(index);
-			cell.vAlign = "top"; //$NON-NLS-0$
+			cell.vAlign = "top";
 			cell.appendChild(div);
 		},
 		_createView: function() {
@@ -8002,162 +7968,162 @@ define("orion/textview/textView", ['orio
 			var parent = this._parent;
 			while (parent.hasChildNodes()) { parent.removeChild(parent.lastChild); }
 
-			var rootDiv = document.createElement("DIV"); //$NON-NLS-0$
+			var rootDiv = document.createElement("DIV");
 			this._rootDiv = rootDiv;
 			rootDiv.tabIndex = -1;
-			rootDiv.style.position = "absolute"; //$NON-NLS-0$
-			rootDiv.style.overflow = "hidden"; //$NON-NLS-0$
-			rootDiv.setAttribute("role", "application"); //$NON-NLS-1$ //$NON-NLS-0$
+			rootDiv.style.position = "absolute";
+			rootDiv.style.overflow = "hidden";
+			rootDiv.setAttribute("role", "application");
 			parent.appendChild(rootDiv);
 			
-			var leftDiv = document.createElement("DIV"); //$NON-NLS-0$
-			leftDiv.className = "textviewLeftRuler"; //$NON-NLS-0$
+			var leftDiv = document.createElement("DIV");
+			leftDiv.className = "textviewLeftRuler";
 			this._leftDiv = leftDiv;
 			leftDiv.tabIndex = -1;
-			leftDiv.style.overflow = "hidden"; //$NON-NLS-0$
-			leftDiv.style.MozUserSelect = "none"; //$NON-NLS-0$
-			leftDiv.style.WebkitUserSelect = "none"; //$NON-NLS-0$
-			leftDiv.style.position = "absolute"; //$NON-NLS-0$
-			leftDiv.style.cursor = "default"; //$NON-NLS-0$
-			leftDiv.setAttribute("aria-hidden", "true"); //$NON-NLS-1$ //$NON-NLS-0$
-			var table = document.createElement("TABLE"); //$NON-NLS-0$
+			leftDiv.style.overflow = "hidden";
+			leftDiv.style.MozUserSelect = "none";
+			leftDiv.style.WebkitUserSelect = "none";
+			leftDiv.style.position = "absolute";
+			leftDiv.style.cursor = "default";
+			leftDiv.setAttribute("aria-hidden", "true");
+			var table = document.createElement("TABLE");
 			leftDiv.appendChild(table);
-			table.cellPadding = "0px"; //$NON-NLS-0$
-			table.cellSpacing = "0px"; //$NON-NLS-0$
-			table.border = "0px"; //$NON-NLS-0$
+			table.cellPadding = "0px";
+			table.cellSpacing = "0px";
+			table.border = "0px";
 			table.insertRow(0);
 			rootDiv.appendChild(leftDiv);
 
-			var viewDiv = document.createElement("DIV"); //$NON-NLS-0$
-			viewDiv.className = "textview"; //$NON-NLS-0$
+			var viewDiv = document.createElement("DIV");
+			viewDiv.className = "textview";
 			this._viewDiv = viewDiv;
 			viewDiv.tabIndex = -1;
-			viewDiv.style.overflow = "auto"; //$NON-NLS-0$
-			viewDiv.style.position = "absolute"; //$NON-NLS-0$
-			viewDiv.style.top = "0px"; //$NON-NLS-0$
-			viewDiv.style.borderWidth = "0px"; //$NON-NLS-0$
-			viewDiv.style.margin = "0px"; //$NON-NLS-0$
-			viewDiv.style.outline = "none"; //$NON-NLS-0$
+			viewDiv.style.overflow = "auto";
+			viewDiv.style.position = "absolute";
+			viewDiv.style.top = "0px";
+			viewDiv.style.borderWidth = "0px";
+			viewDiv.style.margin = "0px";
+			viewDiv.style.outline = "none";
 			rootDiv.appendChild(viewDiv);
 			
-			var rightDiv = document.createElement("DIV"); //$NON-NLS-0$
-			rightDiv.className = "textviewRightRuler"; //$NON-NLS-0$
+			var rightDiv = document.createElement("DIV");
+			rightDiv.className = "textviewRightRuler";
 			this._rightDiv = rightDiv;
 			rightDiv.tabIndex = -1;
-			rightDiv.style.overflow = "hidden"; //$NON-NLS-0$
-			rightDiv.style.MozUserSelect = "none"; //$NON-NLS-0$
-			rightDiv.style.WebkitUserSelect = "none"; //$NON-NLS-0$
-			rightDiv.style.position = "absolute"; //$NON-NLS-0$
-			rightDiv.style.cursor = "default"; //$NON-NLS-0$
-			rightDiv.setAttribute("aria-hidden", "true"); //$NON-NLS-1$ //$NON-NLS-0$
-			table = document.createElement("TABLE"); //$NON-NLS-0$
+			rightDiv.style.overflow = "hidden";
+			rightDiv.style.MozUserSelect = "none";
+			rightDiv.style.WebkitUserSelect = "none";
+			rightDiv.style.position = "absolute";
+			rightDiv.style.cursor = "default";
+			rightDiv.setAttribute("aria-hidden", "true");
+			table = document.createElement("TABLE");
 			rightDiv.appendChild(table);
-			table.cellPadding = "0px"; //$NON-NLS-0$
-			table.cellSpacing = "0px"; //$NON-NLS-0$
-			table.border = "0px"; //$NON-NLS-0$
+			table.cellPadding = "0px";
+			table.cellSpacing = "0px";
+			table.border = "0px";
 			table.insertRow(0);
 			rootDiv.appendChild(rightDiv);
 				
-			var scrollDiv = document.createElement("DIV"); //$NON-NLS-0$
+			var scrollDiv = document.createElement("DIV");
 			this._scrollDiv = scrollDiv;
-			scrollDiv.style.margin = "0px"; //$NON-NLS-0$
-			scrollDiv.style.borderWidth = "0px"; //$NON-NLS-0$
-			scrollDiv.style.padding = "0px"; //$NON-NLS-0$
+			scrollDiv.style.margin = "0px";
+			scrollDiv.style.borderWidth = "0px";
+			scrollDiv.style.padding = "0px";
 			viewDiv.appendChild(scrollDiv);
 			
 			if (isFirefox) {
-				var clipboardDiv = document.createElement("DIV"); //$NON-NLS-0$
+				var clipboardDiv = document.createElement("DIV");
 				this._clipboardDiv = clipboardDiv;
-				clipboardDiv.style.position = "fixed"; //$NON-NLS-0$
-				clipboardDiv.style.whiteSpace = "pre"; //$NON-NLS-0$
-				clipboardDiv.style.left = "-1000px"; //$NON-NLS-0$
+				clipboardDiv.style.position = "fixed";
+				clipboardDiv.style.whiteSpace = "pre";
+				clipboardDiv.style.left = "-1000px";
 				rootDiv.appendChild(clipboardDiv);
 			
-				var clipDiv = document.createElement("DIV"); //$NON-NLS-0$
+				var clipDiv = document.createElement("DIV");
 				this._clipDiv = clipDiv;
-				clipDiv.style.position = "absolute"; //$NON-NLS-0$
-				clipDiv.style.overflow = "hidden"; //$NON-NLS-0$
-				clipDiv.style.margin = "0px"; //$NON-NLS-0$
-				clipDiv.style.borderWidth = "0px"; //$NON-NLS-0$
-				clipDiv.style.padding = "0px"; //$NON-NLS-0$
+				clipDiv.style.position = "absolute";
+				clipDiv.style.overflow = "hidden";
+				clipDiv.style.margin = "0px";
+				clipDiv.style.borderWidth = "0px";
+				clipDiv.style.padding = "0px";
 				rootDiv.appendChild(clipDiv);
 				
-				var clipScrollDiv = document.createElement("DIV"); //$NON-NLS-0$
+				var clipScrollDiv = document.createElement("DIV");
 				this._clipScrollDiv = clipScrollDiv;
-				clipScrollDiv.style.position = "absolute"; //$NON-NLS-0$
-				clipScrollDiv.style.height = "1px"; //$NON-NLS-0$
-				clipScrollDiv.style.top = "-1000px"; //$NON-NLS-0$
+				clipScrollDiv.style.position = "absolute";
+				clipScrollDiv.style.height = "1px";
+				clipScrollDiv.style.top = "-1000px";
 				clipDiv.appendChild(clipScrollDiv);
 			}
 			
 			this._setFullSelection(this._fullSelection, true);
 
-			var clientDiv = document.createElement("DIV"); //$NON-NLS-0$
-			clientDiv.className = "textviewContent"; //$NON-NLS-0$
+			var clientDiv = document.createElement("DIV");
+			clientDiv.className = "textviewContent";
 			this._clientDiv = clientDiv;
-			clientDiv.style.whiteSpace = "pre"; //$NON-NLS-0$
-			clientDiv.style.position = "absolute"; //$NON-NLS-0$
-			clientDiv.style.borderWidth = "0px"; //$NON-NLS-0$
-			clientDiv.style.margin = "0px"; //$NON-NLS-0$
-			clientDiv.style.padding = "0px"; //$NON-NLS-0$
-			clientDiv.style.outline = "none"; //$NON-NLS-0$
-			clientDiv.style.zIndex = "1"; //$NON-NLS-0$
-			clientDiv.style.WebkitUserSelect = "text"; //$NON-NLS-0$
-			clientDiv.setAttribute("spellcheck", "false"); //$NON-NLS-1$ //$NON-NLS-0$
+			clientDiv.style.whiteSpace = "pre";
+			clientDiv.style.position = "absolute";
+			clientDiv.style.borderWidth = "0px";
+			clientDiv.style.margin = "0px";
+			clientDiv.style.padding = "0px";
+			clientDiv.style.outline = "none";
+			clientDiv.style.zIndex = "1";
+			clientDiv.style.WebkitUserSelect = "text";
+			clientDiv.setAttribute("spellcheck", "false");
 			if (isPad) {
-				clientDiv.style.WebkitTapHighlightColor = "transparent"; //$NON-NLS-0$
+				clientDiv.style.WebkitTapHighlightColor = "transparent";
 			}
 			(this._clipDiv || rootDiv).appendChild(clientDiv);
 			
 			if (isPad) {
-				var vScrollDiv = document.createElement("DIV"); //$NON-NLS-0$
+				var vScrollDiv = document.createElement("DIV");
 				this._vScrollDiv = vScrollDiv;
-				vScrollDiv.style.position = "absolute"; //$NON-NLS-0$
-				vScrollDiv.style.borderWidth = "1px"; //$NON-NLS-0$
-				vScrollDiv.style.borderColor = "white"; //$NON-NLS-0$
-				vScrollDiv.style.borderStyle = "solid"; //$NON-NLS-0$
-				vScrollDiv.style.borderRadius = "4px"; //$NON-NLS-0$
-				vScrollDiv.style.backgroundColor = "black"; //$NON-NLS-0$
-				vScrollDiv.style.opacity = "0.5"; //$NON-NLS-0$
-				vScrollDiv.style.margin = "0px"; //$NON-NLS-0$
-				vScrollDiv.style.padding = "0px"; //$NON-NLS-0$
-				vScrollDiv.style.outline = "none"; //$NON-NLS-0$
-				vScrollDiv.style.zIndex = "3"; //$NON-NLS-0$
-				vScrollDiv.style.width = "8px"; //$NON-NLS-0$
-				vScrollDiv.style.display = "none"; //$NON-NLS-0$
+				vScrollDiv.style.position = "absolute";
+				vScrollDiv.style.borderWidth = "1px";
+				vScrollDiv.style.borderColor = "white";
+				vScrollDiv.style.borderStyle = "solid";
+				vScrollDiv.style.borderRadius = "4px";
+				vScrollDiv.style.backgroundColor = "black";
+				vScrollDiv.style.opacity = "0.5";
+				vScrollDiv.style.margin = "0px";
+				vScrollDiv.style.padding = "0px";
+				vScrollDiv.style.outline = "none";
+				vScrollDiv.style.zIndex = "3";
+				vScrollDiv.style.width = "8px";
+				vScrollDiv.style.display = "none";
 				rootDiv.appendChild(vScrollDiv);
-				var hScrollDiv = document.createElement("DIV"); //$NON-NLS-0$
+				var hScrollDiv = document.createElement("DIV");
 				this._hScrollDiv = hScrollDiv;
-				hScrollDiv.style.position = "absolute"; //$NON-NLS-0$
-				hScrollDiv.style.borderWidth = "1px"; //$NON-NLS-0$
-				hScrollDiv.style.borderColor = "white"; //$NON-NLS-0$
-				hScrollDiv.style.borderStyle = "solid"; //$NON-NLS-0$
-				hScrollDiv.style.borderRadius = "4px"; //$NON-NLS-0$
-				hScrollDiv.style.backgroundColor = "black"; //$NON-NLS-0$
-				hScrollDiv.style.opacity = "0.5"; //$NON-NLS-0$
-				hScrollDiv.style.margin = "0px"; //$NON-NLS-0$
-				hScrollDiv.style.padding = "0px"; //$NON-NLS-0$
-				hScrollDiv.style.outline = "none"; //$NON-NLS-0$
-				hScrollDiv.style.zIndex = "3"; //$NON-NLS-0$
-				hScrollDiv.style.height = "8px"; //$NON-NLS-0$
-				hScrollDiv.style.display = "none"; //$NON-NLS-0$
+				hScrollDiv.style.position = "absolute";
+				hScrollDiv.style.borderWidth = "1px";
+				hScrollDiv.style.borderColor = "white";
+				hScrollDiv.style.borderStyle = "solid";
+				hScrollDiv.style.borderRadius = "4px";
+				hScrollDiv.style.backgroundColor = "black";
+				hScrollDiv.style.opacity = "0.5";
+				hScrollDiv.style.margin = "0px";
+				hScrollDiv.style.padding = "0px";
+				hScrollDiv.style.outline = "none";
+				hScrollDiv.style.zIndex = "3";
+				hScrollDiv.style.height = "8px";
+				hScrollDiv.style.display = "none";
 				rootDiv.appendChild(hScrollDiv);
 			}
 
 			if (isFirefox && !clientDiv.setCapture) {
-				var overlayDiv = document.createElement("DIV"); //$NON-NLS-0$
+				var overlayDiv = document.createElement("DIV");
 				this._overlayDiv = overlayDiv;
 				overlayDiv.style.position = clientDiv.style.position;
 				overlayDiv.style.borderWidth = clientDiv.style.borderWidth;
 				overlayDiv.style.margin = clientDiv.style.margin;
 				overlayDiv.style.padding = clientDiv.style.padding;
-				overlayDiv.style.cursor = "text"; //$NON-NLS-0$
-				overlayDiv.style.zIndex = "2"; //$NON-NLS-0$
+				overlayDiv.style.cursor = "text";
+				overlayDiv.style.zIndex = "2";
 				(this._clipDiv || rootDiv).appendChild(overlayDiv);
 			}
-			clientDiv.contentEditable = "true"; //$NON-NLS-0$
-			clientDiv.setAttribute("role", "textbox"); //$NON-NLS-1$ //$NON-NLS-0$
-			clientDiv.setAttribute("aria-multiline", "true"); //$NON-NLS-1$ //$NON-NLS-0$
+			clientDiv.contentEditable = "true";
+			clientDiv.setAttribute("role", "textbox");
+			clientDiv.setAttribute("aria-multiline", "true");
 			this._setReadOnly(this._readonly);
 			this._setThemeClass(this._themeClass, true);
 			this._setTabSize(this._tabSize, true);
@@ -8182,7 +8148,7 @@ define("orion/textview/textView", ['orio
 		},
 		_destroyRuler: function(ruler) {
 			var side = ruler.getLocation();
-			var rulerParent = side === "left" ? this._leftDiv : this._rightDiv; //$NON-NLS-0$
+			var rulerParent = side === "left" ? this._leftDiv : this._rightDiv;
 			if (rulerParent) {
 				var row = rulerParent.firstChild.rows[0];
 				var cells = row.cells;
@@ -8271,10 +8237,10 @@ define("orion/textview/textView", ['orio
 			var left,top,right,bottom;
 			if (window.getComputedStyle) {
 				var style = window.getComputedStyle(node, null);
-				left = style.getPropertyValue("border-left-width"); //$NON-NLS-0$
-				top = style.getPropertyValue("border-top-width"); //$NON-NLS-0$
-				right = style.getPropertyValue("border-right-width"); //$NON-NLS-0$
-				bottom = style.getPropertyValue("border-bottom-width"); //$NON-NLS-0$
+				left = style.getPropertyValue("border-left-width");
+				top = style.getPropertyValue("border-top-width");
+				right = style.getPropertyValue("border-right-width");
+				bottom = style.getPropertyValue("border-bottom-width");
 			} else if (node.currentStyle) {
 				left = node.currentStyle.borderLeftWidth;
 				top = node.currentStyle.borderTopWidth;
@@ -8319,14 +8285,14 @@ define("orion/textview/textView", ['orio
 							range = document.body.createTextRange();
 							range.moveToElementText(lineChild);
 							range.collapse();
-							range.moveEnd("character", index + 1); //$NON-NLS-0$
-							range.moveStart("character", index); //$NON-NLS-0$
+							range.moveEnd("character", index + 1);
+							range.moveStart("character", index);
 							result = range.getBoundingClientRect();
 						} else {
 							var text = textNode.data;
 							lineChild.removeChild(textNode);
 							lineChild.appendChild(document.createTextNode(text.substring(0, index)));
-							var span = document.createElement("SPAN"); //$NON-NLS-0$
+							var span = document.createElement("SPAN");
 							span.appendChild(document.createTextNode(text.substring(index, index + 1)));
 							lineChild.appendChild(span);
 							lineChild.appendChild(document.createTextNode(text.substring(index + 1)));
@@ -8389,7 +8355,7 @@ define("orion/textview/textView", ['orio
 			if (window.clipboardData) {
 				//IE
 				clipboadText = [];
-				text = window.clipboardData.getData("Text"); //$NON-NLS-0$
+				text = window.clipboardData.getData("Text");
 				this._convertDelimiter(text, function(t) {clipboadText.push(t);}, function() {clipboadText.push(delimiter);});
 				text = clipboadText.join("");
 				if (handler) { handler(text); }
@@ -8398,7 +8364,7 @@ define("orion/textview/textView", ['orio
 			if (isFirefox) {
 				this._ignoreFocus = true;
 				var clipboardDiv = this._clipboardDiv;
-				clipboardDiv.innerHTML = "<pre contenteditable=''></pre>"; //$NON-NLS-0$
+				clipboardDiv.innerHTML = "<pre contenteditable=''></pre>";
 				clipboardDiv.firstChild.focus();
 				var self = this;
 				var _getText = function() {
@@ -8416,7 +8382,7 @@ define("orion/textview/textView", ['orio
 				/* Do not try execCommand if middle-click is used, because if we do, we get the clipboard text, not the primary selection text. */
 				if (!isLinux || this._lastMouseButton !== 2) {
 					try {
-						result = document.execCommand("paste", false, null); //$NON-NLS-0$
+						result = document.execCommand("paste", false, null);
 					} catch (ex) {
 						/* Firefox can throw even when execCommand() works, see bug 362835. */
 						result = clipboardDiv.childNodes.length > 1 || clipboardDiv.firstChild && clipboardDiv.firstChild.childNodes.length > 0;
@@ -8457,7 +8423,7 @@ define("orion/textview/textView", ['orio
 				* Note: setData is not allowed, not even during copy/cut event
 				*/
 				clipboadText = [];
-				text = event.clipboardData.getData("text/plain"); //$NON-NLS-0$
+				text = event.clipboardData.getData("text/plain");
 				this._convertDelimiter(text, function(t) {clipboadText.push(t);}, function() {clipboadText.push(delimiter);});
 				text = clipboadText.join("");
 				if (text && handler) {
@@ -8479,7 +8445,7 @@ define("orion/textview/textView", ['orio
 					if (lineChild.ignoreChars) {
 						for (var i = 0; i < textNode.length; i++) {
 							var ch = textNode.data.substring(i, i + 1);
-							if (ch !== " ") { //$NON-NLS-0$
+							if (ch !== " ") {
 								text += ch;
 							}
 						}
@@ -8586,7 +8552,7 @@ define("orion/textview/textView", ['orio
 			return node;
 		},
 		_getOffset: function (offset, unit, direction) {
-			if (unit === "line") { //$NON-NLS-0$
+			if (unit === "line") {
 				var model = this._model;
 				var lineIndex = model.getLineAtOffset(offset);
 				if (direction > 0) {
@@ -8594,7 +8560,7 @@ define("orion/textview/textView", ['orio
 				}
 				return model.getLineStart(lineIndex);
 			}
-			if (unit === "wordend") { //$NON-NLS-0$
+			if (unit === "wordend") {
 				return this._getOffset_W3C(offset, unit, direction);
 			}
 			return isIE ? this._getOffset_IE(offset, unit, direction) : this._getOffset_W3C(offset, unit, direction);
@@ -8606,7 +8572,7 @@ define("orion/textview/textView", ['orio
 			function _isWhitespace(c) {
 				return c === 32 || c === 9;
 			}
-			if (unit === "word" || unit === "wordend") { //$NON-NLS-1$ //$NON-NLS-0$
+			if (unit === "word" || unit === "wordend") {
 				var model = this._model;
 				var lineIndex = model.getLineAtOffset(offset);
 				var lineText = model.getLine(lineIndex);
@@ -8626,13 +8592,13 @@ define("orion/textview/textView", ['orio
 					while (offsetInLine < lineLength) {
 						c = lineText.charCodeAt(offsetInLine);
 						punctuation = _isPunctuation(c);
-						if (unit === "wordend") { //$NON-NLS-0$
+						if (unit === "wordend") {
 							if (!punctuation && previousPunctuation) { break; }
 						} else {
 							if (punctuation && !previousPunctuation) { break; }
 						}
 						letterOrDigit  = !punctuation && !_isWhitespace(c);
-						if (unit === "wordend") { //$NON-NLS-0$
+						if (unit === "wordend") {
 							if (!letterOrDigit && previousLetterOrDigit) { break; }
 						} else {
 							if (letterOrDigit && !previousLetterOrDigit) { break; }
@@ -8650,13 +8616,13 @@ define("orion/textview/textView", ['orio
 					while (0 < offsetInLine) {
 						c = lineText.charCodeAt(offsetInLine - 1);
 						punctuation = _isPunctuation(c);
-						if (unit === "wordend") { //$NON-NLS-0$
+						if (unit === "wordend") {
 							if (punctuation && !previousPunctuation) { break; }
 						} else {
 							if (!punctuation && previousPunctuation) { break; }
 						}
 						letterOrDigit  = !punctuation && !_isWhitespace(c);
-						if (unit === "wordend") { //$NON-NLS-0$
+						if (unit === "wordend") {
 							if (letterOrDigit && !previousLetterOrDigit) { break; }
 						} else {
 							if (!letterOrDigit && previousLetterOrDigit) { break; }
@@ -8704,7 +8670,7 @@ define("orion/textview/textView", ['orio
 						} else {
 							range.moveToElementText(lineChild);
 							range.collapse();
-							range.moveEnd("character", offset - lineOffset); //$NON-NLS-0$
+							range.moveEnd("character", offset - lineOffset);
 						}
 						length = range.text.length;
 						range.moveEnd(unit, direction);
@@ -8725,10 +8691,10 @@ define("orion/textview/textView", ['orio
 			var left,top,right,bottom;
 			if (window.getComputedStyle) {
 				var style = window.getComputedStyle(node, null);
-				left = style.getPropertyValue("padding-left"); //$NON-NLS-0$
-				top = style.getPropertyValue("padding-top"); //$NON-NLS-0$
-				right = style.getPropertyValue("padding-right"); //$NON-NLS-0$
-				bottom = style.getPropertyValue("padding-bottom"); //$NON-NLS-0$
+				left = style.getPropertyValue("padding-left");
+				top = style.getPropertyValue("padding-top");
+				right = style.getPropertyValue("padding-right");
+				bottom = style.getPropertyValue("padding-bottom");
 			} else if (node.currentStyle) {
 				left = node.currentStyle.paddingLeft;
 				top = node.currentStyle.paddingTop;
@@ -8839,8 +8805,8 @@ define("orion/textview/textView", ['orio
 									range.setEnd(textNode, end);
 								} else {
 									range.moveToElementText(lineChild);
-									range.move("character", start); //$NON-NLS-0$
-									range.moveEnd("character", end - start); //$NON-NLS-0$
+									range.move("character", start);
+									range.moveEnd("character", end - start);
 								}
 								rects = range.getClientRects();
 								var found = false;
@@ -8867,8 +8833,8 @@ define("orion/textview/textView", ['orio
 								range.setEnd(textNode, end);
 							} else {
 								range.moveToElementText(lineChild);
-								range.move("character", start); //$NON-NLS-0$
-								range.moveEnd("character", end - start); //$NON-NLS-0$
+								range.move("character", start);
+								range.moveEnd("character", end - start);
 							}
 							rect = range.getClientRects()[0];
 							//TODO test for character trailing (wrong for bidi)
@@ -8878,13 +8844,13 @@ define("orion/textview/textView", ['orio
 						} else {
 							var newText = [];
 							for (var q = 0; q < nodeLength; q++) {
-								newText.push("<span>"); //$NON-NLS-0$
+								newText.push("<span>");
 								if (q === nodeLength - 1) {
 									newText.push(textNode.data.substring(q));
 								} else {
 									newText.push(textNode.data.substring(q, q + 1));
 								}
-								newText.push("</span>"); //$NON-NLS-0$
+								newText.push("</span>");
 							}
 							lineChild.innerHTML = newText.join("");
 							var rangeChild = lineChild.firstChild;
@@ -8944,86 +8910,80 @@ define("orion/textview/textView", ['orio
 					self._onModelChanged(modelChangedEvent);
 				}
 			};
-			this._model.addEventListener("Changing", this._modelListener.onChanging); //$NON-NLS-0$
-			this._model.addEventListener("Changed", this._modelListener.onChanged); //$NON-NLS-0$
+			this._model.addEventListener("Changing", this._modelListener.onChanging);
+			this._model.addEventListener("Changed", this._modelListener.onChanged);
 			
 			var handlers = this._handlers = [];
 			var clientDiv = this._clientDiv, viewDiv = this._viewDiv, rootDiv = this._rootDiv;
 			var topNode = this._overlayDiv || clientDiv;
 			var grabNode = isIE ? document : window;
-			handlers.push({target: window, type: "resize", handler: function(e) { return self._handleResize(e);}}); //$NON-NLS-0$
-			handlers.push({target: clientDiv, type: "blur", handler: function(e) { return self._handleBlur(e);}}); //$NON-NLS-0$
-			handlers.push({target: clientDiv, type: "focus", handler: function(e) { return self._handleFocus(e);}}); //$NON-NLS-0$
-			handlers.push({target: viewDiv, type: "focus", handler: function(e) { clientDiv.focus(); }}); //$NON-NLS-0$
-			handlers.push({target: viewDiv, type: "scroll", handler: function(e) { return self._handleScroll(e);}}); //$NON-NLS-0$
-			handlers.push({target: clientDiv, type: "keydown", handler: function(e) { return self._handleKeyDown(e);}}); //$NON-NLS-0$
-			handlers.push({target: clientDiv, type: "keypress", handler: function(e) { return self._handleKeyPress(e);}}); //$NON-NLS-0$
-			handlers.push({target: clientDiv, type: "keyup", handler: function(e) { return self._handleKeyUp(e);}}); //$NON-NLS-0$
-			handlers.push({target: clientDiv, type: "selectstart", handler: function(e) { return self._handleSelectStart(e);}}); //$NON-NLS-0$
-			handlers.push({target: clientDiv, type: "contextmenu", handler: function(e) { return self._handleContextMenu(e);}}); //$NON-NLS-0$
-			handlers.push({target: clientDiv, type: "copy", handler: function(e) { return self._handleCopy(e);}}); //$NON-NLS-0$
-			handlers.push({target: clientDiv, type: "cut", handler: function(e) { return self._handleCut(e);}}); //$NON-NLS-0$
-			handlers.push({target: clientDiv, type: "paste", handler: function(e) { return self._handlePaste(e);}}); //$NON-NLS-0$
+			handlers.push({target: window, type: "resize", handler: function(e) { return self._handleResize(e);}});
+			handlers.push({target: clientDiv, type: "blur", handler: function(e) { return self._handleBlur(e);}});
+			handlers.push({target: clientDiv, type: "focus", handler: function(e) { return self._handleFocus(e);}});
+			handlers.push({target: viewDiv, type: "focus", handler: function(e) { clientDiv.focus(); }});
+			handlers.push({target: viewDiv, type: "scroll", handler: function(e) { return self._handleScroll(e);}});
+			handlers.push({target: clientDiv, type: "keydown", handler: function(e) { return self._handleKeyDown(e);}});
+			handlers.push({target: clientDiv, type: "keypress", handler: function(e) { return self._handleKeyPress(e);}});
+			handlers.push({target: clientDiv, type: "keyup", handler: function(e) { return self._handleKeyUp(e);}});
+			handlers.push({target: clientDiv, type: "selectstart", handler: function(e) { return self._handleSelectStart(e);}});
+			handlers.push({target: clientDiv, type: "contextmenu", handler: function(e) { return self._handleContextMenu(e);}});
+			handlers.push({target: clientDiv, type: "copy", handler: function(e) { return self._handleCopy(e);}});
+			handlers.push({target: clientDiv, type: "cut", handler: function(e) { return self._handleCut(e);}});
+			handlers.push({target: clientDiv, type: "paste", handler: function(e) { return self._handlePaste(e);}});
 			if (isPad) {
-				handlers.push({target: document, type: "selectionchange", handler: function(e) { return self._handleSelectionChange(e); }}); //$NON-NLS-0$
-				handlers.push({target: clientDiv, type: "touchstart", handler: function(e) { return self._handleTouchStart(e); }}); //$NON-NLS-0$
-				handlers.push({target: clientDiv, type: "touchmove", handler: function(e) { return self._handleTouchMove(e); }}); //$NON-NLS-0$
-				handlers.push({target: clientDiv, type: "touchend", handler: function(e) { return self._handleTouchEnd(e); }}); //$NON-NLS-0$
+				handlers.push({target: document, type: "selectionchange", handler: function(e) { return self._handleSelectionChange(e); }});
+				handlers.push({target: clientDiv, type: "touchstart", handler: function(e) { return self._handleTouchStart(e); }});
+				handlers.push({target: clientDiv, type: "touchmove", handler: function(e) { return self._handleTouchMove(e); }});
+				handlers.push({target: clientDiv, type: "touchend", handler: function(e) { return self._handleTouchEnd(e); }});
 			} else {
-				handlers.push({target: clientDiv, type: "mousedown", handler: function(e) { return self._handleMouseDown(e);}}); //$NON-NLS-0$
-				handlers.push({target: clientDiv, type: "mouseover", handler: function(e) { return self._handleMouseOver(e);}}); //$NON-NLS-0$
-				handlers.push({target: clientDiv, type: "mouseout", handler: function(e) { return self._handleMouseOut(e);}}); //$NON-NLS-0$
-				handlers.push({target: grabNode, type: "mouseup", handler: function(e) { return self._handleMouseUp(e);}}); //$NON-NLS-0$
-				handlers.push({target: grabNode, type: "mousemove", handler: function(e) { return self._handleMouseMove(e);}}); //$NON-NLS-0$
-				handlers.push({target: rootDiv, type: "mousedown", handler: function(e) { return self._handleRootMouseDown(e);}}); //$NON-NLS-0$
-				handlers.push({target: rootDiv, type: "mouseup", handler: function(e) { return self._handleRootMouseUp(e);}}); //$NON-NLS-0$
-				handlers.push({target: topNode, type: "dragstart", handler: function(e) { return self._handleDragStart(e);}}); //$NON-NLS-0$
-				handlers.push({target: topNode, type: "drag", handler: function(e) { return self._handleDrag(e);}}); //$NON-NLS-0$
-				handlers.push({target: topNode, type: "dragend", handler: function(e) { return self._handleDragEnd(e);}}); //$NON-NLS-0$
-				handlers.push({target: topNode, type: "dragenter", handler: function(e) { return self._handleDragEnter(e);}}); //$NON-NLS-0$
-				handlers.push({target: topNode, type: "dragover", handler: function(e) { return self._handleDragOver(e);}}); //$NON-NLS-0$
-				handlers.push({target: topNode, type: "dragleave", handler: function(e) { return self._handleDragLeave(e);}}); //$NON-NLS-0$
-				handlers.push({target: topNode, type: "drop", handler: function(e) { return self._handleDrop(e);}}); //$NON-NLS-0$
-				handlers.push({target: this._clientDiv, type: isFirefox ? "DOMMouseScroll" : "mousewheel", handler: function(e) { return self._handleMouseWheel(e); }}); //$NON-NLS-1$ //$NON-NLS-0$
+				handlers.push({target: clientDiv, type: "mousedown", handler: function(e) { return self._handleMouseDown(e);}});
+				handlers.push({target: clientDiv, type: "mouseover", handler: function(e) { return self._handleMouseOver(e);}});
+				handlers.push({target: clientDiv, type: "mouseout", handler: function(e) { return self._handleMouseOut(e);}});
+				handlers.push({target: grabNode, type: "mouseup", handler: function(e) { return self._handleMouseUp(e);}});
+				handlers.push({target: grabNode, type: "mousemove", handler: function(e) { return self._handleMouseMove(e);}});
+				handlers.push({target: rootDiv, type: "mousedown", handler: function(e) { return self._handleRootMouseDown(e);}});
+				handlers.push({target: rootDiv, type: "mouseup", handler: function(e) { return self._handleRootMouseUp(e);}});
+				handlers.push({target: topNode, type: "dragstart", handler: function(e) { return self._handleDragStart(e);}});
+				handlers.push({target: topNode, type: "drag", handler: function(e) { return self._handleDrag(e);}});
+				handlers.push({target: topNode, type: "dragend", handler: function(e) { return self._handleDragEnd(e);}});
+				handlers.push({target: topNode, type: "dragenter", handler: function(e) { return self._handleDragEnter(e);}});
+				handlers.push({target: topNode, type: "dragover", handler: function(e) { return self._handleDragOver(e);}});
+				handlers.push({target: topNode, type: "dragleave", handler: function(e) { return self._handleDragLeave(e);}});
+				handlers.push({target: topNode, type: "drop", handler: function(e) { return self._handleDrop(e);}});
+				handlers.push({target: this._clientDiv, type: isFirefox ? "DOMMouseScroll" : "mousewheel", handler: function(e) { return self._handleMouseWheel(e); }});
 				if (isFirefox && !isWindows) {
-					var MutationObserver = window.MutationObserver || window.MozMutationObserver;
-					if (MutationObserver) {
-						this._mutationObserver = new MutationObserver(function(mutations) { self._handleDataModified(mutations); });
-						this._mutationObserver.observe(clientDiv, {subtree: true, characterData: true});
-					} else {
-						handlers.push({target: this._clientDiv, type: "DOMCharacterDataModified", handler: function (e) { return self._handleDataModified(e); }}); //$NON-NLS-0$
-					}
+					handlers.push({target: this._clientDiv, type: "DOMCharacterDataModified", handler: function (e) { return self._handleDataModified(e); }});
 				}
 				if (this._overlayDiv) {
-					handlers.push({target: this._overlayDiv, type: "mousedown", handler: function(e) { return self._handleMouseDown(e);}}); //$NON-NLS-0$
-					handlers.push({target: this._overlayDiv, type: "mouseover", handler: function(e) { return self._handleMouseOver(e);}}); //$NON-NLS-0$
-					handlers.push({target: this._overlayDiv, type: "mouseout", handler: function(e) { return self._handleMouseOut(e);}}); //$NON-NLS-0$
-					handlers.push({target: this._overlayDiv, type: "contextmenu", handler: function(e) { return self._handleContextMenu(e); }}); //$NON-NLS-0$
+					handlers.push({target: this._overlayDiv, type: "mousedown", handler: function(e) { return self._handleMouseDown(e);}});
+					handlers.push({target: this._overlayDiv, type: "mouseover", handler: function(e) { return self._handleMouseOver(e);}});
+					handlers.push({target: this._overlayDiv, type: "mouseout", handler: function(e) { return self._handleMouseOut(e);}});
+					handlers.push({target: this._overlayDiv, type: "contextmenu", handler: function(e) { return self._handleContextMenu(e); }});
 				}
 				if (!isW3CEvents) {
-					handlers.push({target: this._clientDiv, type: "dblclick", handler: function(e) { return self._handleDblclick(e); }}); //$NON-NLS-0$
+					handlers.push({target: this._clientDiv, type: "dblclick", handler: function(e) { return self._handleDblclick(e); }});
 				}
 			}
 
 			var leftDiv = this._leftDiv, rightDiv = this._rightDiv;
 			if (isIE) {
-				handlers.push({target: leftDiv, type: "selectstart", handler: function() {return false;}}); //$NON-NLS-0$
-			}
-			handlers.push({target: leftDiv, type: isFirefox ? "DOMMouseScroll" : "mousewheel", handler: function(e) { return self._handleMouseWheel(e); }}); //$NON-NLS-1$ //$NON-NLS-0$
-			handlers.push({target: leftDiv, type: "click", handler: function(e) { self._handleRulerEvent(e); }}); //$NON-NLS-0$
-			handlers.push({target: leftDiv, type: "dblclick", handler: function(e) { self._handleRulerEvent(e); }}); //$NON-NLS-0$
-			handlers.push({target: leftDiv, type: "mousemove", handler: function(e) { self._handleRulerEvent(e); }}); //$NON-NLS-0$
-			handlers.push({target: leftDiv, type: "mouseover", handler: function(e) { self._handleRulerEvent(e); }}); //$NON-NLS-0$
-			handlers.push({target: leftDiv, type: "mouseout", handler: function(e) { self._handleRulerEvent(e); }}); //$NON-NLS-0$
+				handlers.push({target: leftDiv, type: "selectstart", handler: function() {return false;}});
+			}
+			handlers.push({target: leftDiv, type: isFirefox ? "DOMMouseScroll" : "mousewheel", handler: function(e) { return self._handleMouseWheel(e); }});
+			handlers.push({target: leftDiv, type: "click", handler: function(e) { self._handleRulerEvent(e); }});
+			handlers.push({target: leftDiv, type: "dblclick", handler: function(e) { self._handleRulerEvent(e); }});
+			handlers.push({target: leftDiv, type: "mousemove", handler: function(e) { self._handleRulerEvent(e); }});
+			handlers.push({target: leftDiv, type: "mouseover", handler: function(e) { self._handleRulerEvent(e); }});
+			handlers.push({target: leftDiv, type: "mouseout", handler: function(e) { self._handleRulerEvent(e); }});
 			if (isIE) {
-				handlers.push({target: rightDiv, type: "selectstart", handler: function() {return false;}}); //$NON-NLS-0$
-			}
-			handlers.push({target: rightDiv, type: isFirefox ? "DOMMouseScroll" : "mousewheel", handler: function(e) { return self._handleMouseWheel(e); }}); //$NON-NLS-1$ //$NON-NLS-0$
-			handlers.push({target: rightDiv, type: "click", handler: function(e) { self._handleRulerEvent(e); }}); //$NON-NLS-0$
-			handlers.push({target: rightDiv, type: "dblclick", handler: function(e) { self._handleRulerEvent(e); }}); //$NON-NLS-0$
-			handlers.push({target: rightDiv, type: "mousemove", handler: function(e) { self._handleRulerEvent(e); }}); //$NON-NLS-0$
-			handlers.push({target: rightDiv, type: "mouseover", handler: function(e) { self._handleRulerEvent(e); }}); //$NON-NLS-0$
-			handlers.push({target: rightDiv, type: "mouseout", handler: function(e) { self._handleRulerEvent(e); }}); //$NON-NLS-0$
+				handlers.push({target: rightDiv, type: "selectstart", handler: function() {return false;}});
+			}
+			handlers.push({target: rightDiv, type: isFirefox ? "DOMMouseScroll" : "mousewheel", handler: function(e) { return self._handleMouseWheel(e); }});
+			handlers.push({target: rightDiv, type: "click", handler: function(e) { self._handleRulerEvent(e); }});
+			handlers.push({target: rightDiv, type: "dblclick", handler: function(e) { self._handleRulerEvent(e); }});
+			handlers.push({target: rightDiv, type: "mousemove", handler: function(e) { self._handleRulerEvent(e); }});
+			handlers.push({target: rightDiv, type: "mouseover", handler: function(e) { self._handleRulerEvent(e); }});
+			handlers.push({target: rightDiv, type: "mouseout", handler: function(e) { self._handleRulerEvent(e); }});
 			
 			for (var i=0; i<handlers.length; i++) {
 				var h = handlers[i];
@@ -9032,10 +8992,10 @@ define("orion/textview/textView", ['orio
 		},
 		_init: function(options) {
 			var parent = options.parent;
-			if (typeof(parent) === "string") { //$NON-NLS-0$
+			if (typeof(parent) === "string") {
 				parent = window.document.getElementById(parent);
 			}
-			if (!parent) { throw "no parent"; } //$NON-NLS-0$
+			if (!parent) { throw "no parent"; }
 			options.parent = parent;
 			options.model = options.model || new mTextModel.TextModel();
 			var defaultOptions = this._defaultOptions();
@@ -9047,7 +9007,7 @@ define("orion/textview/textView", ['orio
 					} else {
 						value = defaultOptions[option].value;
 					}
-					this["_" + option] = value; //$NON-NLS-0$
+					this["_" + option] = value;
 				}
 			}
 			this._rulers = [];
@@ -9093,13 +9053,13 @@ define("orion/textview/textView", ['orio
 			this._createView();
 		},
 		_isLinkURL: function(string) {
-			return string.toLowerCase().lastIndexOf(".css") === string.length - 4; //$NON-NLS-0$
+			return string.toLowerCase().lastIndexOf(".css") === string.length - 4;
 		},
 		_modifyContent: function(e, updateCaret) {
 			if (this._readonly && !e._code) {
 				return;
 			}
-			e.type = "Verify"; //$NON-NLS-0$
+			e.type = "Verify";
 			this.onVerify(e);
 
 			if (e.text === null || e.text === undefined) { return; }
@@ -9117,12 +9077,12 @@ define("orion/textview/textView", ['orio
 				selection.setCaret(e.start + e.text.length);
 				this._setSelection(selection, true);
 			}
-			this.onModify({type: "Modify"}); //$NON-NLS-0$
+			this.onModify({type: "Modify"});
 		},
 		_onModelChanged: function(modelChangedEvent) {
-			modelChangedEvent.type = "ModelChanged"; //$NON-NLS-0$
+			modelChangedEvent.type = "ModelChanged";
 			this.onModelChanged(modelChangedEvent);
-			modelChangedEvent.type = "Changed"; //$NON-NLS-0$
+			modelChangedEvent.type = "Changed";
 			var start = modelChangedEvent.start;
 			var addedCharCount = modelChangedEvent.addedCharCount;
 			var removedCharCount = modelChangedEvent.removedCharCount;
@@ -9169,9 +9129,9 @@ define("orion/textview/textView", ['orio
 			this._updatePage();
 		},
 		_onModelChanging: function(modelChangingEvent) {
-			modelChangingEvent.type = "ModelChanging"; //$NON-NLS-0$
+			modelChangingEvent.type = "ModelChanging";
 			this.onModelChanging(modelChangingEvent);
-			modelChangingEvent.type = "Changing"; //$NON-NLS-0$
+			modelChangingEvent.type = "Changing";
 		},
 		_queueUpdatePage: function() {
 			if (this._updateTimer) { return; }
@@ -9252,62 +9212,63 @@ define("orion/textview/textView", ['orio
 				//IE
 				clipboardText = [];
 				this._convertDelimiter(text, function(t) {clipboardText.push(t);}, function() {clipboardText.push(platformDelimiter);});
-				return window.clipboardData.setData("Text", clipboardText.join("")); //$NON-NLS-0$
+				return window.clipboardData.setData("Text", clipboardText.join(""));
+			}
+			/* Feature in Chrome, clipboardData.setData is no-op on Chrome even though it returns true */
+			if (isChrome || isFirefox || !event) {
+				var child = document.createElement("PRE");
+				child.style.position = "fixed";
+				child.style.left = "-1000px";
+				this._convertDelimiter(text, 
+					function(t) {
+						child.appendChild(document.createTextNode(t));
+					}, 
+					function() {
+						child.appendChild(document.createElement("BR"));
+					}
+				);
+				child.appendChild(document.createTextNode(" "));
+				this._clientDiv.appendChild(child);
+				var range = document.createRange();
+				range.setStart(child.firstChild, 0);
+				range.setEndBefore(child.lastChild);
+				var sel = window.getSelection();
+				if (sel.rangeCount > 0) { sel.removeAllRanges(); }
+				sel.addRange(range);
+				var self = this;
+				/** @ignore */
+				var cleanup = function() {
+					if (child && child.parentNode === self._clientDiv) {
+						self._clientDiv.removeChild(child);
+					}
+					self._updateDOMSelection();
+				};
+				var result = false;
+				/* 
+				* Try execCommand first, it works on firefox with clipboard permission,
+				* chrome 5, safari 4.
+				*/
+				this._ignoreCopy = true;
+				try {
+					result = document.execCommand("copy", false, null);
+				} catch (e) {}
+				this._ignoreCopy = false;
+				if (!result) {
+					if (event) {
+						setTimeout(cleanup, 0);
+						return false;
+					}
+				}
+				/* no event and no permission, copy can not be done */
+				cleanup();
+				return true;
 			}
 			if (event && event.clipboardData) {
 				//webkit
 				clipboardText = [];
 				this._convertDelimiter(text, function(t) {clipboardText.push(t);}, function() {clipboardText.push(platformDelimiter);});
-				if (event.clipboardData.setData("text/plain", clipboardText.join(""))) { //$NON-NLS-0$
-					return true;
-				}
-			}
-			var child = document.createElement("PRE"); //$NON-NLS-0$
-			child.style.position = "fixed"; //$NON-NLS-0$
-			child.style.left = "-1000px"; //$NON-NLS-0$
-			this._convertDelimiter(text, 
-				function(t) {
-					child.appendChild(document.createTextNode(t));
-				}, 
-				function() {
-					child.appendChild(document.createElement("BR")); //$NON-NLS-0$
-				}
-			);
-			child.appendChild(document.createTextNode(" ")); //$NON-NLS-0$
-			this._clientDiv.appendChild(child);
-			var range = document.createRange();
-			range.setStart(child.firstChild, 0);
-			range.setEndBefore(child.lastChild);
-			var sel = window.getSelection();
-			if (sel.rangeCount > 0) { sel.removeAllRanges(); }
-			sel.addRange(range);
-			var self = this;
-			/** @ignore */
-			var cleanup = function() {
-				if (child && child.parentNode === self._clientDiv) {
-					self._clientDiv.removeChild(child);
-				}
-				self._updateDOMSelection();
-			};
-			var result = false;
-			/* 
-			* Try execCommand first, it works on firefox with clipboard permission,
-			* chrome 5, safari 4.
-			*/
-			this._ignoreCopy = true;
-			try {
-				result = document.execCommand("copy", false, null); //$NON-NLS-0$
-			} catch (e) {}
-			this._ignoreCopy = false;
-			if (!result) {
-				if (event) {
-					setTimeout(cleanup, 0);
-					return false;
-				}
-			}
-			/* no event and no permission, copy can not be done */
-			cleanup();
-			return true;
+				return event.clipboardData.setData("text/plain", clipboardText.join("")); 
+			}
 		},
 		_setDOMSelection: function (startNode, startOffset, endNode, endOffset) {
 			var startLineNode, startLineOffset, endLineNode, endLineOffset;
@@ -9375,17 +9336,17 @@ define("orion/textview/textView", ['orio
 				* selection at the end of some lines does not get redrawn.  The
 				* fix is to create a DOM element in the body to force a redraw.
 				*/
-				var child = document.createElement("DIV"); //$NON-NLS-0$
+				var child = document.createElement("DIV");
 				body.appendChild(child);
 				body.removeChild(child);
 				
 				range = body.createTextRange();
 				range.moveToElementText(startLineNode.parentNode);
-				range.moveStart("character", startLineOffset); //$NON-NLS-0$
+				range.moveStart("character", startLineOffset);
 				var endRange = body.createTextRange();
 				endRange.moveToElementText(endLineNode.parentNode);
-				endRange.moveStart("character", endLineOffset); //$NON-NLS-0$
-				range.setEndPoint("EndToStart", endRange); //$NON-NLS-0$
+				endRange.moveStart("character", endLineOffset);
+				range.setEndPoint("EndToStart", endRange);
 				this._ignoreSelect = false;
 				range.select();
 				this._ignoreSelect = true;
@@ -9394,14 +9355,14 @@ define("orion/textview/textView", ['orio
 		_setDOMFullSelection: function(startNode, startOffset, startLineEnd, endNode, endOffset, endLineEnd) {
 			if (!this._selDiv1) { return; }
 			var selDiv = this._selDiv1;
-			selDiv.style.width = "0px"; //$NON-NLS-0$
-			selDiv.style.height = "0px"; //$NON-NLS-0$
+			selDiv.style.width = "0px";
+			selDiv.style.height = "0px";
 			selDiv = this._selDiv2;
-			selDiv.style.width = "0px"; //$NON-NLS-0$
-			selDiv.style.height = "0px"; //$NON-NLS-0$
+			selDiv.style.width = "0px";
+			selDiv.style.height = "0px";
 			selDiv = this._selDiv3;
-			selDiv.style.width = "0px"; //$NON-NLS-0$
-			selDiv.style.height = "0px"; //$NON-NLS-0$
+			selDiv.style.width = "0px";
+			selDiv.style.height = "0px";
 			if (startNode === endNode && startOffset === endOffset) { return; }
 			var model = this._model;
 			var viewPad = this._getViewPadding();
@@ -9452,29 +9413,29 @@ define("orion/textview/textView", ['orio
 			var sel1Top = Math.min(bottom, Math.max(top, startLineBounds.top));
 			var sel1Right = right;
 			var sel1Bottom = Math.min(bottom, Math.max(top, startLineBounds.bottom));
-			sel1Div.style.left = (sel1Left - hd) + "px"; //$NON-NLS-0$
-			sel1Div.style.top = (sel1Top - vd) + "px"; //$NON-NLS-0$
-			sel1Div.style.width = Math.max(0, sel1Right - sel1Left) + "px"; //$NON-NLS-0$
-			sel1Div.style.height = Math.max(0, sel1Bottom - sel1Top) + "px"; //$NON-NLS-0$
+			sel1Div.style.left = (sel1Left - hd) + "px";
+			sel1Div.style.top = (sel1Top - vd) + "px";
+			sel1Div.style.width = Math.max(0, sel1Right - sel1Left) + "px";
+			sel1Div.style.height = Math.max(0, sel1Bottom - sel1Top) + "px";
 			if (startNode === endNode) {
 				sel1Right = Math.min(r, right);
-				sel1Div.style.width = Math.max(0, sel1Right - sel1Left) + "px"; //$NON-NLS-0$
+				sel1Div.style.width = Math.max(0, sel1Right - sel1Left) + "px";
 			} else {
 				var sel3Left = left;
 				var sel3Top = Math.min(bottom, Math.max(top, endLineBounds.top));
 				var sel3Right = Math.min(right, Math.max(left, r));
 				var sel3Bottom = Math.min(bottom, Math.max(top, endLineBounds.bottom));
 				var sel3Div = this._selDiv3;
-				sel3Div.style.left = (sel3Left - hd) + "px"; //$NON-NLS-0$
-				sel3Div.style.top = (sel3Top - vd) + "px"; //$NON-NLS-0$
-				sel3Div.style.width = Math.max(0, sel3Right - sel3Left) + "px"; //$NON-NLS-0$
-				sel3Div.style.height = Math.max(0, sel3Bottom - sel3Top) + "px"; //$NON-NLS-0$
+				sel3Div.style.left = (sel3Left - hd) + "px";
+				sel3Div.style.top = (sel3Top - vd) + "px";
+				sel3Div.style.width = Math.max(0, sel3Right - sel3Left) + "px";
+				sel3Div.style.height = Math.max(0, sel3Bottom - sel3Top) + "px";
 				if (sel3Top - sel1Bottom > 0) {
 					var sel2Div = this._selDiv2;
-					sel2Div.style.left = (left - hd)  + "px"; //$NON-NLS-0$
-					sel2Div.style.top = (sel1Bottom - vd) + "px"; //$NON-NLS-0$
-					sel2Div.style.width = Math.max(0, right - left) + "px"; //$NON-NLS-0$
-					sel2Div.style.height = Math.max(0, sel3Top - sel1Bottom) + "px"; //$NON-NLS-0$
+					sel2Div.style.left = (left - hd)  + "px";
+					sel2Div.style.top = (sel1Bottom - vd) + "px";
+					sel2Div.style.width = Math.max(0, right - left) + "px";
+					sel2Div.style.height = Math.max(0, sel3Top - sel1Bottom) + "px";
 				}
 			}
 		},
@@ -9506,7 +9467,7 @@ define("orion/textview/textView", ['orio
 				clientDiv.focus();
 			}
 			if (this._overlayDiv) {
-				this._overlayDiv.style.zIndex = visible ? "-1" : "1"; //$NON-NLS-1$ //$NON-NLS-0$
+				this._overlayDiv.style.zIndex = visible ? "-1" : "1";
 			}
 			var line = this._getLineNext();
 			while (line) {
@@ -9515,7 +9476,7 @@ define("orion/textview/textView", ['orio
 					while (lineChild) {
 						var next = lineChild.nextSibling;
 						var style = lineChild.viewStyle;
-						if (style && style.tagName === "A") { //$NON-NLS-0$
+						if (style && style.tagName === "A") {
 							line.replaceChild(this._createSpan(line, document, lineChild.firstChild.data, style), lineChild);
 						}
 						lineChild = next;
@@ -9532,7 +9493,7 @@ define("orion/textview/textView", ['orio
 				if (!oldSelection.equals(selection)) {
 					this._selection = selection;
 					var e = {
-						type: "Selection", //$NON-NLS-0$
+						type: "Selection",
 						oldValue: {start:oldSelection.start, end:oldSelection.end},
 						newValue: {start:selection.start, end:selection.end}
 					};
@@ -9577,14 +9538,14 @@ define("orion/textview/textView", ['orio
 					if (this._doubleClickSelection) {
 						if (offset >= this._doubleClickSelection.start) {
 							start = this._doubleClickSelection.start;
-							end = this._getOffset(offset, "wordend", +1); //$NON-NLS-0$
+							end = this._getOffset(offset, "wordend", +1);
 						} else {
-							start = this._getOffset(offset, "word", -1); //$NON-NLS-0$
+							start = this._getOffset(offset, "word", -1);
 							end = this._doubleClickSelection.end;
 						}
 					} else {
-						start = this._getOffset(offset, "word", -1); //$NON-NLS-0$
-						end = this._getOffset(start, "wordend", +1); //$NON-NLS-0$
+						start = this._getOffset(offset, "word", -1);
+						end = this._getOffset(start, "wordend", +1);
 					}
 				} else {
 					if (this._doubleClickSelection) {
@@ -9633,42 +9594,42 @@ define("orion/textview/textView", ['orio
 			}
 			
 			if (!this._selDiv1 && (this._fullSelection && !isWebkit)) {
-				this._hightlightRGB = "Highlight"; //$NON-NLS-0$
-				var selDiv1 = document.createElement("DIV"); //$NON-NLS-0$
+				this._hightlightRGB = "Highlight";
+				var selDiv1 = document.createElement("DIV");
 				this._selDiv1 = selDiv1;
-				selDiv1.style.position = "absolute"; //$NON-NLS-0$
-				selDiv1.style.borderWidth = "0px"; //$NON-NLS-0$
-				selDiv1.style.margin = "0px"; //$NON-NLS-0$
-				selDiv1.style.padding = "0px"; //$NON-NLS-0$
-				selDiv1.style.outline = "none"; //$NON-NLS-0$
+				selDiv1.style.position = "absolute";
+				selDiv1.style.borderWidth = "0px";
+				selDiv1.style.margin = "0px";
+				selDiv1.style.padding = "0px";
+				selDiv1.style.outline = "none";
 				selDiv1.style.background = this._hightlightRGB;
-				selDiv1.style.width = "0px"; //$NON-NLS-0$
-				selDiv1.style.height = "0px"; //$NON-NLS-0$
-				selDiv1.style.zIndex = "0"; //$NON-NLS-0$
+				selDiv1.style.width = "0px";
+				selDiv1.style.height = "0px";
+				selDiv1.style.zIndex = "0";
 				parent.appendChild(selDiv1);
-				var selDiv2 = document.createElement("DIV"); //$NON-NLS-0$
+				var selDiv2 = document.createElement("DIV");
 				this._selDiv2 = selDiv2;
-				selDiv2.style.position = "absolute"; //$NON-NLS-0$
-				selDiv2.style.borderWidth = "0px"; //$NON-NLS-0$
-				selDiv2.style.margin = "0px"; //$NON-NLS-0$
-				selDiv2.style.padding = "0px"; //$NON-NLS-0$
-				selDiv2.style.outline = "none"; //$NON-NLS-0$
+				selDiv2.style.position = "absolute";
+				selDiv2.style.borderWidth = "0px";
+				selDiv2.style.margin = "0px";
+				selDiv2.style.padding = "0px";
+				selDiv2.style.outline = "none";
 				selDiv2.style.background = this._hightlightRGB;
-				selDiv2.style.width = "0px"; //$NON-NLS-0$
-				selDiv2.style.height = "0px"; //$NON-NLS-0$
-				selDiv2.style.zIndex = "0"; //$NON-NLS-0$
+				selDiv2.style.width = "0px";
+				selDiv2.style.height = "0px";
+				selDiv2.style.zIndex = "0";
 				parent.appendChild(selDiv2);
-				var selDiv3 = document.createElement("DIV"); //$NON-NLS-0$
+				var selDiv3 = document.createElement("DIV");
 				this._selDiv3 = selDiv3;
-				selDiv3.style.position = "absolute"; //$NON-NLS-0$
-				selDiv3.style.borderWidth = "0px"; //$NON-NLS-0$
-				selDiv3.style.margin = "0px"; //$NON-NLS-0$
-				selDiv3.style.padding = "0px"; //$NON-NLS-0$
-				selDiv3.style.outline = "none"; //$NON-NLS-0$
+				selDiv3.style.position = "absolute";
+				selDiv3.style.borderWidth = "0px";
+				selDiv3.style.margin = "0px";
+				selDiv3.style.padding = "0px";
+				selDiv3.style.outline = "none";
 				selDiv3.style.background = this._hightlightRGB;
-				selDiv3.style.width = "0px"; //$NON-NLS-0$
-				selDiv3.style.height = "0px"; //$NON-NLS-0$
-				selDiv3.style.zIndex = "0"; //$NON-NLS-0$
+				selDiv3.style.width = "0px";
+				selDiv3.style.height = "0px";
+				selDiv3.style.zIndex = "0";
 				parent.appendChild(selDiv3);
 				
 				/*
@@ -9678,25 +9639,25 @@ define("orion/textview/textView", ['orio
 				*/
 				if (isFirefox && isMac) {
 					var style = window.getComputedStyle(selDiv3, null);
-					var rgb = style.getPropertyValue("background-color"); //$NON-NLS-0$
+					var rgb = style.getPropertyValue("background-color");
 					switch (rgb) {
-						case "rgb(119, 141, 168)": rgb = "rgb(199, 208, 218)"; break; //$NON-NLS-1$ //$NON-NLS-0$
-						case "rgb(127, 127, 127)": rgb = "rgb(198, 198, 198)"; break; //$NON-NLS-1$ //$NON-NLS-0$
-						case "rgb(255, 193, 31)": rgb = "rgb(250, 236, 115)"; break; //$NON-NLS-1$ //$NON-NLS-0$
-						case "rgb(243, 70, 72)": rgb = "rgb(255, 176, 139)"; break; //$NON-NLS-1$ //$NON-NLS-0$
-						case "rgb(255, 138, 34)": rgb = "rgb(255, 209, 129)"; break; //$NON-NLS-1$ //$NON-NLS-0$
-						case "rgb(102, 197, 71)": rgb = "rgb(194, 249, 144)"; break; //$NON-NLS-1$ //$NON-NLS-0$
-						case "rgb(140, 78, 184)": rgb = "rgb(232, 184, 255)"; break; //$NON-NLS-1$ //$NON-NLS-0$
-						default: rgb = "rgb(180, 213, 255)"; break; //$NON-NLS-0$
+						case "rgb(119, 141, 168)": rgb = "rgb(199, 208, 218)"; break;
+						case "rgb(127, 127, 127)": rgb = "rgb(198, 198, 198)"; break;
+						case "rgb(255, 193, 31)": rgb = "rgb(250, 236, 115)"; break;
+						case "rgb(243, 70, 72)": rgb = "rgb(255, 176, 139)"; break;
+						case "rgb(255, 138, 34)": rgb = "rgb(255, 209, 129)"; break;
+						case "rgb(102, 197, 71)": rgb = "rgb(194, 249, 144)"; break;
+						case "rgb(140, 78, 184)": rgb = "rgb(232, 184, 255)"; break;
+						default: rgb = "rgb(180, 213, 255)"; break;
 					}
 					this._hightlightRGB = rgb;
 					selDiv1.style.background = rgb;
 					selDiv2.style.background = rgb;
 					selDiv3.style.background = rgb;
 					if (!this._insertedSelRule) {
-						var stylesheet = document.createElement("STYLE"); //$NON-NLS-0$
-						var head = document.getElementsByTagName("HEAD")[0] || document.documentElement; //$NON-NLS-0$
-						stylesheet.appendChild(document.createTextNode("::-moz-selection {background: " + rgb + "; }")); //$NON-NLS-1$ //$NON-NLS-0$
+						var stylesheet = document.createElement("STYLE");
+						var head = document.getElementsByTagName("HEAD")[0] || document.documentElement;
+						stylesheet.appendChild(document.createTextNode("::-moz-selection {background: " + rgb + "; }"));
 						head.insertBefore(stylesheet, head.firstChild);
 						this._insertedSelRule = true;
 					}
@@ -9707,8 +9668,7 @@ define("orion/textview/textView", ['orio
 			}
 		},
 		_setReadOnly: function (readOnly) {
-			this._readonly = readOnly;
-			this._clientDiv.setAttribute("aria-readonly", readOnly ? "true" : "false"); //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-0$
+			this._clientDiv.setAttribute("aria-readonly", readOnly ? "true" : "false");
 		},
 		_setTabSize: function (tabSize, init) {
 			this._tabSize = tabSize;
@@ -9728,8 +9688,8 @@ define("orion/textview/textView", ['orio
 		},
 		_setThemeClass: function (themeClass, init) {
 			this._themeClass = themeClass;
-			var viewContainerClass = "textviewContainer"; //$NON-NLS-0$
-			if (this._themeClass) { viewContainerClass += " " + this._themeClass; } //$NON-NLS-0$
+			var viewContainerClass = "textviewContainer";
+			if (this._themeClass) { viewContainerClass += " " + this._themeClass; }
 			this._rootDiv.className = viewContainerClass;
 			this._updateStyle(init);
 		},
@@ -9832,18 +9792,14 @@ define("orion/textview/textView", ['orio
 			this._imeOffset = selection.start;
 		},
 		_unhookEvents: function() {
-			this._model.removeEventListener("Changing", this._modelListener.onChanging); //$NON-NLS-0$
-			this._model.removeEventListener("Changed", this._modelListener.onChanged); //$NON-NLS-0$
+			this._model.removeEventListener("Changing", this._modelListener.onChanging);
+			this._model.removeEventListener("Changed", this._modelListener.onChanged);
 			this._modelListener = null;
 			for (var i=0; i<this._handlers.length; i++) {
 				var h = this._handlers[i];
 				removeHandler(h.target, h.type, h.handler);
 			}
 			this._handlers = null;
-			if (this._mutationObserver) {
-				this._mutationObserver.disconnect();
-				this._mutationObserver = null;
-			}
 		},
 		_updateDOMSelection: function () {
 			if (this._ignoreDOMSelection) { return; }
@@ -9915,12 +9871,12 @@ define("orion/textview/textView", ['orio
 				var rootDiv = this._rootDiv;
 				var parentWidth = parent.clientWidth;
 				var parentHeight = parent.clientHeight;
-				rootDiv.style.width = parentWidth + "px"; //$NON-NLS-0$
-				rootDiv.style.height = parentHeight + "px"; //$NON-NLS-0$
+				rootDiv.style.width = parentWidth + "px";
+				rootDiv.style.height = parentHeight + "px";
 
 				/* Update view height in order to have client height computed */
 				var viewDiv = this._viewDiv;
-				viewDiv.style.height = Math.max(0, (parentHeight - viewPad.top - viewPad.bottom)) + "px"; //$NON-NLS-0$
+				viewDiv.style.height = Math.max(0, (parentHeight - viewPad.top - viewPad.bottom)) + "px";
 				clientHeight = this._getClientHeight();
 				var linesPerPage = Math.floor((clientHeight + partialY) / lineHeight);
 				var bottomIndex = Math.min(topIndex + linesPerPage, lineCount - 1);
@@ -9933,7 +9889,7 @@ define("orion/textview/textView", ['orio
 					var nextChild = child.nextSibling;
 					if (!(lineStart <= lineIndex && lineIndex <= lineEnd) || child.lineRemoved || child.lineIndex === -1) {
 						if (this._mouseWheelLine === child) {
-							child.style.display = "none"; //$NON-NLS-0$
+							child.style.display = "none";
 							child.lineIndex = -1;
 						} else {
 							clientDiv.removeChild(child);
@@ -9970,7 +9926,7 @@ define("orion/textview/textView", ['orio
 				* reset to the appropriate value further down.
 				*/ 
 				if (isWebkit) {
-					clientDiv.style.width = (0x7FFFF).toString() + "px"; //$NON-NLS-0$
+					clientDiv.style.width = (0x7FFFF).toString() + "px";
 				}
 	
 				var rect;
@@ -10011,14 +9967,14 @@ define("orion/textview/textView", ['orio
 				
 				leftWidth = this._leftDiv ? this._leftDiv.scrollWidth : 0;
 				var rightWidth = this._rightDiv ? this._rightDiv.scrollWidth : 0;
-				viewDiv.style.left = leftWidth + "px"; //$NON-NLS-0$
-				viewDiv.style.width = Math.max(0, parentWidth - leftWidth - rightWidth - viewPad.left - viewPad.right) + "px"; //$NON-NLS-0$
+				viewDiv.style.left = leftWidth + "px";
+				viewDiv.style.width = Math.max(0, parentWidth - leftWidth - rightWidth - viewPad.left - viewPad.right) + "px";
 				if (this._rightDiv) {
-					this._rightDiv.style.left = (parentWidth - rightWidth) + "px"; //$NON-NLS-0$
+					this._rightDiv.style.left = (parentWidth - rightWidth) + "px"; 
 				}
 				/* Need to set the height first in order for the width to consider the vertical scrollbar */
 				var scrollDiv = this._scrollDiv;
-				scrollDiv.style.height = scrollHeight + "px"; //$NON-NLS-0$
+				scrollDiv.style.height = scrollHeight + "px";
 				/*
 				* TODO if frameHeightWithoutHScrollbar < scrollHeight  < frameHeightWithHScrollbar and the horizontal bar is visible, 
 				* then the clientWidth is wrong because the vertical scrollbar is showing. To correct code should hide both scrollbars 
@@ -10032,9 +9988,9 @@ define("orion/textview/textView", ['orio
 				*/
 				scrollWidth = width;
 				if (!isIE || isIE >= 9) { width += viewPad.right; }
-				scrollDiv.style.width = width + "px"; //$NON-NLS-0$
+				scrollDiv.style.width = width + "px";
 				if (this._clipScrollDiv) {
-					this._clipScrollDiv.style.width = width + "px"; //$NON-NLS-0$
+					this._clipScrollDiv.style.width = width + "px";
 				}
 				/* Get the left scroll after setting the width of the scrollDiv as this can change the horizontal scroll offset. */
 				scroll = this._getScroll();
@@ -10045,16 +10001,16 @@ define("orion/textview/textView", ['orio
 			if (this._vScrollDiv) {
 				var trackHeight = clientHeight - 8;
 				var thumbHeight = Math.max(15, Math.ceil(Math.min(1, trackHeight / (scrollHeight + viewPad.top + viewPad.bottom)) * trackHeight));
-				this._vScrollDiv.style.left = (leftWidth + clientWidth - 8) + "px"; //$NON-NLS-0$
-				this._vScrollDiv.style.top = Math.floor(Math.max(0, (scroll.y * trackHeight / scrollHeight))) + "px"; //$NON-NLS-0$
-				this._vScrollDiv.style.height = thumbHeight + "px"; //$NON-NLS-0$
+				this._vScrollDiv.style.left = (leftWidth + clientWidth - 8) + "px";
+				this._vScrollDiv.style.top = Math.floor(Math.max(0, (scroll.y * trackHeight / scrollHeight))) + "px";
+				this._vScrollDiv.style.height = thumbHeight + "px";
 			}
 			if (this._hScrollDiv) {
 				var trackWidth = clientWidth - 8;
 				var thumbWidth = Math.max(15, Math.ceil(Math.min(1, trackWidth / (this._maxLineWidth + viewPad.left + viewPad.right)) * trackWidth));
-				this._hScrollDiv.style.left = leftWidth + Math.floor(Math.max(0, Math.floor(scroll.x * trackWidth / this._maxLineWidth))) + "px"; //$NON-NLS-0$
-				this._hScrollDiv.style.top = (clientHeight - 9) + "px"; //$NON-NLS-0$
-				this._hScrollDiv.style.width = thumbWidth + "px"; //$NON-NLS-0$
+				this._hScrollDiv.style.left = leftWidth + Math.floor(Math.max(0, Math.floor(scroll.x * trackWidth / this._maxLineWidth))) + "px";
+				this._hScrollDiv.style.top = (clientHeight - 9) + "px";
+				this._hScrollDiv.style.width = thumbWidth + "px";
 			}
 			var left = scroll.x;	
 			var clipDiv = this._clipDiv;
@@ -10083,14 +10039,14 @@ define("orion/textview/textView", ['orio
 				if (scroll.y + clientHeight === scrollHeight) { 
 					clipHeight += viewPad.bottom; 
 				}
-				clipDiv.style.left = clipLeft + "px"; //$NON-NLS-0$
-				clipDiv.style.top = clipTop + "px"; //$NON-NLS-0$
-				clipDiv.style.width = clipWidth + "px"; //$NON-NLS-0$
-				clipDiv.style.height = clipHeight + "px"; //$NON-NLS-0$
-				clientDiv.style.left = clientLeft + "px"; //$NON-NLS-0$
-				clientDiv.style.top = clientTop + "px"; //$NON-NLS-0$
-				clientDiv.style.width = scrollWidth + "px"; //$NON-NLS-0$
-				clientDiv.style.height = (clientHeight + top) + "px"; //$NON-NLS-0$
+				clipDiv.style.left = clipLeft + "px";
+				clipDiv.style.top = clipTop + "px";
+				clipDiv.style.width = clipWidth + "px";
+				clipDiv.style.height = clipHeight + "px";
+				clientDiv.style.left = clientLeft + "px";
+				clientDiv.style.top = clientTop + "px";
+				clientDiv.style.width = scrollWidth + "px";
+				clientDiv.style.height = (clientHeight + top) + "px";
 				if (overlayDiv) {
 					overlayDiv.style.left = clientDiv.style.left;
 					overlayDiv.style.top = clientDiv.style.top;
@@ -10106,12 +10062,12 @@ define("orion/textview/textView", ['orio
 				if (clipTop === 0) { clipTop -= viewPad.top; }
 				if (clipRight === scrollWidth) { clipRight += viewPad.right; }
 				if (scroll.y + clientHeight === scrollHeight) { clipBottom += viewPad.bottom; }
-				clientDiv.style.clip = "rect(" + clipTop + "px," + clipRight + "px," + clipBottom + "px," + clipLeft + "px)"; //$NON-NLS-4$ //$NON-NLS-3$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-0$
-				clientDiv.style.left = (-left + leftWidth + viewPad.left) + "px"; //$NON-NLS-0$
-				clientDiv.style.width = (isWebkit ? scrollWidth : clientWidth + left) + "px"; //$NON-NLS-0$
+				clientDiv.style.clip = "rect(" + clipTop + "px," + clipRight + "px," + clipBottom + "px," + clipLeft + "px)";
+				clientDiv.style.left = (-left + leftWidth + viewPad.left) + "px";
+				clientDiv.style.width = (isWebkit ? scrollWidth : clientWidth + left) + "px";
 				if (!hScrollOnly) {
-					clientDiv.style.top = (-top + viewPad.top) + "px"; //$NON-NLS-0$
-					clientDiv.style.height = (clientHeight + top) + "px"; //$NON-NLS-0$
+					clientDiv.style.top = (-top + viewPad.top) + "px";
+					clientDiv.style.height = (clientHeight + top) + "px";
 				}
 				if (overlayDiv) {
 					overlayDiv.style.clip = clientDiv.style.clip;
@@ -10149,12 +10105,12 @@ define("orion/textview/textView", ['orio
 			for (var i = 0; i < cells.length; i++) {
 				var div = cells[i].firstChild;
 				var offset = lineHeight;
-				if (div._ruler.getOverview() === "page") { offset += partialY; } //$NON-NLS-0$
-				div.style.top = -offset + "px"; //$NON-NLS-0$
-				div.style.height = (rulerHeight + offset) + "px"; //$NON-NLS-0$
+				if (div._ruler.getOverview() === "page") { offset += partialY; }
+				div.style.top = -offset + "px";
+				div.style.height = (rulerHeight + offset) + "px";
 				div = div.nextSibling;
 			}
-			divRuler.style.height = rulerHeight + "px"; //$NON-NLS-0$
+			divRuler.style.height = rulerHeight + "px";
 		},
 		_updateRuler: function (divRuler, topIndex, bottomIndex) {
 			if (!divRuler) { return; }
@@ -10174,8 +10130,8 @@ define("orion/textview/textView", ['orio
 					widthDiv = child;
 					child = child.nextSibling;
 				} else {
-					widthDiv = document.createElement("DIV"); //$NON-NLS-0$
-					widthDiv.style.visibility = "hidden"; //$NON-NLS-0$
+					widthDiv = document.createElement("DIV");
+					widthDiv.style.visibility = "hidden";
 					div.appendChild(widthDiv);
 				}
 				var lineIndex, annotation;
@@ -10190,12 +10146,12 @@ define("orion/textview/textView", ['orio
 							}
 						}
 						widthDiv.lineIndex = lineIndex;
-						widthDiv.style.height = (lineHeight + viewPad.top) + "px"; //$NON-NLS-0$
+						widthDiv.style.height = (lineHeight + viewPad.top) + "px";
 					}
 				}
 
 				var overview = ruler.getOverview(), lineDiv, frag, annotations;
-				if (overview === "page") { //$NON-NLS-0$
+				if (overview === "page") {
 					annotations = ruler.getAnnotations(topIndex, bottomIndex + 1);
 					while (child) {
 						lineIndex = child.lineIndex;
@@ -10209,7 +10165,7 @@ define("orion/textview/textView", ['orio
 					frag = document.createDocumentFragment();
 					for (lineIndex=topIndex; lineIndex<=bottomIndex; lineIndex++) {
 						if (!child || child.lineIndex > lineIndex) {
-							lineDiv = document.createElement("DIV"); //$NON-NLS-0$
+							lineDiv = document.createElement("DIV");
 							annotation = annotations[lineIndex];
 							if (annotation) {
 								this._applyStyle(annotation.style, lineDiv);
@@ -10219,7 +10175,7 @@ define("orion/textview/textView", ['orio
 								lineDiv.annotation = annotation;
 							}
 							lineDiv.lineIndex = lineIndex;
-							lineDiv.style.height = lineHeight + "px"; //$NON-NLS-0$
+							lineDiv.style.height = lineHeight + "px";
 							frag.appendChild(lineDiv);
 						} else {
 							if (frag.firstChild) {
@@ -10236,7 +10192,7 @@ define("orion/textview/textView", ['orio
 					var clientHeight = this._getClientHeight ();
 					var lineCount = this._model.getLineCount ();
 					var contentHeight = lineHeight * lineCount;
-					var trackHeight = clientHeight + viewPad.top + viewPad.bottom - 2 * this._metrics.scrollWidth;
+					var trackHeight = clientHeight + viewPad.top + viewPad.bottom - 2 * scrollButtonHeight;
 					var divHeight;
 					if (contentHeight < trackHeight) {
 						divHeight = lineHeight;
@@ -10254,11 +10210,11 @@ define("orion/textview/textView", ['orio
 						for (var prop in annotations) {
 							lineIndex = prop >>> 0;
 							if (lineIndex < 0) { continue; }
-							lineDiv = document.createElement("DIV"); //$NON-NLS-0$
+							lineDiv = document.createElement("DIV");
 							annotation = annotations[prop];
 							this._applyStyle(annotation.style, lineDiv);
-							lineDiv.style.position = "absolute"; //$NON-NLS-0$
-							lineDiv.style.top = this._metrics.scrollWidth + lineHeight + Math.floor(lineIndex * divHeight) + "px"; //$NON-NLS-0$
+							lineDiv.style.position = "absolute";
+							lineDiv.style.top = scrollButtonHeight + lineHeight + Math.floor(lineIndex * divHeight) + "px";
 							if (annotation.html) {
 								lineDiv.innerHTML = annotation.html;
 							}
@@ -10270,7 +10226,7 @@ define("orion/textview/textView", ['orio
 					} else if (div._oldTrackHeight !== trackHeight) {
 						lineDiv = div.firstChild ? div.firstChild.nextSibling : null;
 						while (lineDiv) {
-							lineDiv.style.top = this._metrics.scrollWidth + lineHeight + Math.floor(lineDiv.lineIndex * divHeight) + "px"; //$NON-NLS-0$
+							lineDiv.style.top = scrollButtonHeight + lineHeight + Math.floor(lineDiv.lineIndex * divHeight) + "px";
 							lineDiv = lineDiv.nextSibling;
 						}
 					}
@@ -10282,13 +10238,13 @@ define("orion/textview/textView", ['orio
 		},
 		_updateStyle: function (init) {
 			if (!init && isIE) {
-				this._rootDiv.style.lineHeight = "normal"; //$NON-NLS-0$
+				this._rootDiv.style.lineHeight = "normal";
 			}
 			var metrics = this._metrics = this._calculateMetrics();
 			if (isIE) {
-				this._rootDiv.style.lineHeight = (metrics.lineHeight - (metrics.lineTrim.top + metrics.lineTrim.bottom)) + "px"; //$NON-NLS-0$
+				this._rootDiv.style.lineHeight = (metrics.lineHeight - (metrics.lineTrim.top + metrics.lineTrim.bottom)) + "px";
 			} else {
-				this._rootDiv.style.lineHeight = "normal"; //$NON-NLS-0$
+				this._rootDiv.style.lineHeight = "normal";
 			}
 			if (!init) {
 				this.redraw();
@@ -10316,8 +10272,8 @@ define("orion/textview/textView", ['orio
  
 /*global define window*/
 
-define("orion/textview/textModel", ['orion/textview/eventTarget'], function(mEventTarget) { //$NON-NLS-1$ //$NON-NLS-0$
-	var isWindows = window.navigator.platform.indexOf("Win") !== -1; //$NON-NLS-0$
+define("orion/textview/textModel", ['orion/textview/eventTarget'], function(mEventTarget) {
+	var isWindows = window.navigator.platform.indexOf("Win") !== -1;
 
 	/**
 	 * Constructs a new TextModel with the given text and default line delimiter.
@@ -10386,7 +10342,7 @@ define("orion/textview/textModel", ['ori
 			var regex = options.regex;
 			var pattern = string;
 			if (!regex && string) {
-				pattern = string.replace(/([\\$\^*\/+?\.\(\)|{}\[\]])/g, "\\$&"); //$NON-NLS-0$
+				pattern = string.replace(/([\\$\^*\/+?\.\(\)|{}\[\]])/g, "\\$&");
 			}
 			var current = null, skip;
 			if (pattern) {
@@ -10398,12 +10354,12 @@ define("orion/textview/textModel", ['ori
 				var end = options.end;
 				var isRange = options.end !== undefined;
 				var flags = "";
-				if (flags.indexOf("g") === -1) { flags += "g"; } //$NON-NLS-1$ //$NON-NLS-0$
+				if (flags.indexOf("g") === -1) { flags += "g"; }
 				if (caseInsensitive) {
-					if (flags.indexOf("i") === -1) { flags += "i"; } //$NON-NLS-1$ //$NON-NLS-0$
+					if (flags.indexOf("i") === -1) { flags += "i"; }
 				}
 				if (wholeWord) {
-					pattern = "\\b" + pattern + "\\b"; //$NON-NLS-1$ //$NON-NLS-0$
+					pattern = "\\b" + pattern + "\\b";
 				}
 				var text = this._text[0], result, lastIndex, offset = 0;
 				if (isRange) {
@@ -10732,13 +10688,13 @@ define("orion/textview/textModel", ['ori
 		 * @param {String} lineDelimiter the line delimiter that is used by the view when inserting new lines.
 		 */
 		setLineDelimiter: function(lineDelimiter) {
-			if (lineDelimiter === "auto") { //$NON-NLS-0$
+			if (lineDelimiter === "auto") {
 				lineDelimiter = undefined;
 				if (this.getLineCount() > 1) {
 					lineDelimiter = this.getText(this.getLineEnd(0), this.getLineEnd(0, true));
 				}
 			}
-			this._lineDelimiter = lineDelimiter ? lineDelimiter : (isWindows ? "\r\n" : "\n"); //$NON-NLS-1$ //$NON-NLS-0$
+			this._lineDelimiter = lineDelimiter ? lineDelimiter : (isWindows ? "\r\n" : "\n"); 
 		},
 		/**
 		 * Replaces the text in the given range with the given text.
@@ -10775,8 +10731,8 @@ define("orion/textview/textModel", ['ori
 			var cr = 0, lf = 0, index = 0;
 			var newLineOffsets = [];
 			while (true) {
-				if (cr !== -1 && cr <= index) { cr = text.indexOf("\r", index); } //$NON-NLS-0$
-				if (lf !== -1 && lf <= index) { lf = text.indexOf("\n", index); } //$NON-NLS-0$
+				if (cr !== -1 && cr <= index) { cr = text.indexOf("\r", index); }
+				if (lf !== -1 && lf <= index) { lf = text.indexOf("\n", index); }
 				if (lf === -1 && cr === -1) { break; }
 				if (cr !== -1 && lf !== -1) {
 					if (cr + 1 === lf) {
@@ -10794,7 +10750,7 @@ define("orion/textview/textModel", ['ori
 			}
 		
 			var modelChangingEvent = {
-				type: "Changing", //$NON-NLS-0$
+				type: "Changing",
 				text: text,
 				start: eventStart,
 				removedCharCount: removedCharCount,
@@ -10858,7 +10814,7 @@ define("orion/textview/textModel", ['ori
 			if (this._text.length === 0) { this._text = [""]; }
 			
 			var modelChangedEvent = {
-				type: "Changed", //$NON-NLS-0$
+				type: "Changed",
 				start: eventStart,
 				removedCharCount: removedCharCount,
 				addedCharCount: addedCharCount,
@@ -10886,8 +10842,8 @@ define("orion/textview/textModel", ['ori
 
 /*global window define */
 
-define("orion/textview/keyBinding", [], function() { //$NON-NLS-0$
-	var isMac = window.navigator.platform.indexOf("Mac") !== -1; //$NON-NLS-0$
+define("orion/textview/keyBinding", [], function() {
+	var isMac = window.navigator.platform.indexOf("Mac") !== -1;
 
 	/**
 	 * Constructs a new key binding with the given key code and modifiers.
@@ -10910,7 +10866,7 @@ define("orion/textview/keyBinding", [], 
 	 * @see orion.textview.TextView#setKeyBinding
 	 */
 	function KeyBinding (keyCode, mod1, mod2, mod3, mod4) {
-		if (typeof(keyCode) === "string") { //$NON-NLS-0$
+		if (typeof(keyCode) === "string") {
 			this.keyCode = keyCode.toUpperCase().charCodeAt(0);
 		} else {
 			this.keyCode = keyCode;
@@ -10971,7 +10927,7 @@ define("orion/textview/keyBinding", [], 
 
 /*global define */
 
-define("orion/textview/projectionTextModel", ['orion/textview/textModel', 'orion/textview/eventTarget'], function(mTextModel, mEventTarget) { //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-0$
+define("orion/textview/projectionTextModel", ['orion/textview/textModel', 'orion/textview/eventTarget'], function(mTextModel, mEventTarget) {
 
 	/**
 	 * @class This object represents a projection range. A projection specifies a
@@ -11035,7 +10991,7 @@ define("orion/textview/projectionTextMod
 			projection._lineCount = model.getLineAtOffset(projection.end) - projection._lineIndex;
 			var text = projection.text;
 			if (!text) { text = ""; }
-			if (typeof text === "string") { //$NON-NLS-0$
+			if (typeof text === "string") {
 				projection._model = new mTextModel.TextModel(text, model.getLineDelimiter());
 			} else {
 				projection._model = text;
@@ -11046,7 +11002,7 @@ define("orion/textview/projectionTextMod
 			var addedCharCount = projection._model.getCharCount();
 			var addedLineCount = projection._model.getLineCount() - 1;
 			var modelChangingEvent = {
-				type: "Changing", //$NON-NLS-0$
+				type: "Changing",
 				text: projection._model.getText(),
 				start: eventStart,
 				removedCharCount: removedCharCount,
@@ -11058,7 +11014,7 @@ define("orion/textview/projectionTextMod
 			var index = this._binarySearch(projections, projection.start);
 			projections.splice(index, 0, projection);
 			var modelChangedEvent = {
-				type: "Changed", //$NON-NLS-0$
+				type: "Changed",
 				start: eventStart,
 				removedCharCount: removedCharCount,
 				addedCharCount: addedCharCount,
@@ -11145,7 +11101,7 @@ define("orion/textview/projectionTextMod
 				var removedCharCount = projection._model.getCharCount();
 				var removedLineCount = projection._model.getLineCount() - 1;
 				var modelChangingEvent = {
-					type: "Changing", //$NON-NLS-0$
+					type: "Changing",
 					text: model.getText(projection.start, projection.end),
 					start: eventStart,
 					removedCharCount: removedCharCount,
@@ -11156,7 +11112,7 @@ define("orion/textview/projectionTextMod
 				this.onChanging(modelChangingEvent);
 				this._projections.splice(i, 1);
 				var modelChangedEvent = {
-					type: "Changed", //$NON-NLS-0$
+					type: "Changed",
 					start: eventStart,
 					removedCharCount: removedCharCount,
 					addedCharCount: addedCharCount,
@@ -11472,8 +11428,8 @@ define("orion/textview/projectionTextMod
 			var addedLineCount = 0;
 			var cr = 0, lf = 0, index = 0;
 			while (true) {
-				if (cr !== -1 && cr <= index) { cr = text.indexOf("\r", index); } //$NON-NLS-0$
-				if (lf !== -1 && lf <= index) { lf = text.indexOf("\n", index); } //$NON-NLS-0$
+				if (cr !== -1 && cr <= index) { cr = text.indexOf("\r", index); }
+				if (lf !== -1 && lf <= index) { lf = text.indexOf("\n", index); }
 				if (lf === -1 && cr === -1) { break; }
 				if (cr !== -1 && lf !== -1) {
 					if (cr + 1 === lf) {
@@ -11490,7 +11446,7 @@ define("orion/textview/projectionTextMod
 			}
 			
 			var modelChangingEvent = {
-				type: "Changing", //$NON-NLS-0$
+				type: "Changing",
 				text: text,
 				start: eventStart,
 				removedCharCount: removedCharCount,
@@ -11526,7 +11482,7 @@ define("orion/textview/projectionTextMod
 			}
 			
 			var modelChangedEvent = {
-				type: "Changed", //$NON-NLS-0$
+				type: "Changed",
 				start: eventStart,
 				removedCharCount: removedCharCount,
 				addedCharCount: addedCharCount,
@@ -11555,7 +11511,7 @@ define("orion/textview/projectionTextMod
  
 /*global define */
 
-define("orion/textview/textDND", [], function() { //$NON-NLS-0$
+define("orion/textview/textDND", [], function() {
 
 	function TextDND(view, undoStack) {
 		this._view = view;
@@ -11584,23 +11540,23 @@ define("orion/textview/textDND", [], fun
 				self._onDestroy(evt);
 			}
 		};
-		view.addEventListener("DragStart", this._listener.onDragStart); //$NON-NLS-0$
-		view.addEventListener("DragEnd", this._listener.onDragEnd); //$NON-NLS-0$
-		view.addEventListener("DragEnter", this._listener.onDragEnter); //$NON-NLS-0$
-		view.addEventListener("DragOver", this._listener.onDragOver); //$NON-NLS-0$
-		view.addEventListener("Drop", this._listener.onDrop); //$NON-NLS-0$
-		view.addEventListener("Destroy", this._listener.onDestroy); //$NON-NLS-0$
+		view.addEventListener("DragStart", this._listener.onDragStart);
+		view.addEventListener("DragEnd", this._listener.onDragEnd);
+		view.addEventListener("DragEnter", this._listener.onDragEnter);
+		view.addEventListener("DragOver", this._listener.onDragOver);
+		view.addEventListener("Drop", this._listener.onDrop);
+		view.addEventListener("Destroy", this._listener.onDestroy);
 	}
 	TextDND.prototype = {
 		destroy: function() {
 			var view = this._view;
 			if (!view) { return; }
-			view.removeEventListener("DragStart", this._listener.onDragStart); //$NON-NLS-0$
-			view.removeEventListener("DragEnd", this._listener.onDragEnd); //$NON-NLS-0$
-			view.removeEventListener("DragEnter", this._listener.onDragEnter); //$NON-NLS-0$
-			view.removeEventListener("DragOver", this._listener.onDragOver); //$NON-NLS-0$
-			view.removeEventListener("Drop", this._listener.onDrop); //$NON-NLS-0$
-			view.removeEventListener("Destroy", this._listener.onDestroy); //$NON-NLS-0$
+			view.removeEventListener("DragStart", this._listener.onDragStart);
+			view.removeEventListener("DragEnd", this._listener.onDragEnd);
+			view.removeEventListener("DragEnter", this._listener.onDragEnter);
+			view.removeEventListener("DragOver", this._listener.onDragOver);
+			view.removeEventListener("Drop", this._listener.onDrop);
+			view.removeEventListener("Destroy", this._listener.onDestroy);
 			this._view = null;
 		},
 		_onDestroy: function(e) {
@@ -11618,15 +11574,15 @@ define("orion/textview/textDND", [], fun
 			var text = model.getText(selection.start, selection.end);
 			if (text) {
 				this._dragSelection = selection;
-				e.event.dataTransfer.effectAllowed = "copyMove"; //$NON-NLS-0$
-				e.event.dataTransfer.setData("Text", text); //$NON-NLS-0$
+				e.event.dataTransfer.effectAllowed = "copyMove";
+				e.event.dataTransfer.setData("Text", text);
 			}
 		},
 		_onDragEnd: function(e) {
 			var view = this._view;
 			if (this._dragSelection) {
 				if (this._undoStack) { this._undoStack.startCompoundChange(); }
-				var move = e.event.dataTransfer.dropEffect === "move"; //$NON-NLS-0$
+				var move = e.event.dataTransfer.dropEffect === "move";
 				if (move) {
 					view.setText("", this._dragSelection.start, this._dragSelection.end);
 				}
@@ -11655,15 +11611,15 @@ define("orion/textview/textDND", [], fun
 		_onDragOver: function(e) {
 			var types = e.event.dataTransfer.types;
 			if (types) {
-				var allowed = types.contains ? types.contains("text/plain") : types.indexOf("text/plain") !== -1; //$NON-NLS-1$ //$NON-NLS-0$
+				var allowed = types.contains ? types.contains("text/plain") : types.indexOf("text/plain") !== -1;
 				if (!allowed) {
-					e.event.dataTransfer.dropEffect = "none"; //$NON-NLS-0$
+					e.event.dataTransfer.dropEffect = "none";
 				}
 			}
 		},
 		_onDrop: function(e) {
 			var view = this._view;
-			var text = e.event.dataTransfer.getData("Text"); //$NON-NLS-0$
+			var text = e.event.dataTransfer.getData("Text");
 			if (text) {
 				var offset = view.getOffsetAtLocation(e.x, e.y);
 				if (this._dragSelection) {
@@ -11691,7 +11647,7 @@ define("orion/textview/textDND", [], fun
 
 /*global define */
 
-define("orion/textview/undoStack", [], function() { //$NON-NLS-0$
+define("orion/textview/undoStack", [], function() {
 
 	/** 
 	 * Constructs a new Change object.
@@ -11728,7 +11684,7 @@ define("orion/textview/undoStack", [], f
 					var iter = annotationModel.getAnnotations(offset, offset + 1);
 					while (iter.hasNext()) {
 						var annotation = iter.next();
-						if (annotation.type === "orion.annotation.folding") { //$NON-NLS-0$
+						if (annotation.type === "orion.annotation.folding") {
 							annotation.expand();
 							mapOffset = model.mapOffset(offset, true);
 							break;
@@ -11827,8 +11783,8 @@ define("orion/textview/undoStack", [], f
 				self._onDestroy(e);
 			}
 		};
-		model.addEventListener("Changing", this._listener.onChanging); //$NON-NLS-0$
-		view.addEventListener("Destroy", this._listener.onDestroy); //$NON-NLS-0$
+		model.addEventListener("Changing", this._listener.onChanging);
+		view.addEventListener("Destroy", this._listener.onDestroy);
 	}
 	UndoStack.prototype = /** @lends orion.textview.UndoStack.prototype */ {
 		/**
@@ -12017,8 +11973,8 @@ define("orion/textview/undoStack", [], f
 			}
 		},
 		_onDestroy: function(evt) {
-			this.model.removeEventListener("Changing", this._listener.onChanging); //$NON-NLS-0$
-			this.view.removeEventListener("Destroy", this._listener.onDestroy); //$NON-NLS-0$
+			this.model.removeEventListener("Changing", this._listener.onChanging);
+			this.view.removeEventListener("Destroy", this._listener.onDestroy);
 		},
 		_onChanging: function(e) {
 			var newText = e.text;
@@ -12062,6 +12018,1145 @@ define("orion/textview/undoStack", [], f
 		UndoStack: UndoStack
 	};
 });
+/*******************************************************************************
+ * @license
+ * Copyright (c) 2011, 2012 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials are made 
+ * available under the terms of the Eclipse Public License v1.0 
+ * (http://www.eclipse.org/legal/epl-v10.html), and the Eclipse Distribution 
+ * License v1.0 (http://www.eclipse.org/org/documents/edl-v10.html). 
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+/*global define */
+/*jslint maxerr:150 browser:true devel:true */
+
+define("orion/editor/contentAssist", ['i18n!orion/editor/nls/messages', 'orion/textview/keyBinding', 'orion/textview/eventTarget'], function(messages, mKeyBinding, mEventTarget) {
+	var Promise = (function() {
+		function Promise() {
+		}
+		Promise.prototype.then = function(callback) {
+			this.callback = callback;
+			if (this.result) {
+				var promise = this;
+				setTimeout(function() { promise.callback(promise.result); }, 0);
+			}
+		};
+		Promise.prototype.done = function(result) {
+			this.result = result;
+			if (this.callback) {
+				this.callback(this.result);
+			}
+		};
+		return Promise;
+	}());
+
+	/**
+	 * @name orion.editor.ContentAssistProvider
+	 * @class Interface defining a provider of content assist proposals.
+	 */
+	/**
+	 * @methodOf orion.editor.ContentAssistProvider.prototype
+	 * @name computeProposals
+	 * @param {String} buffer The buffer being edited.
+	 * @param {Number} offset The position in the buffer at which content assist is being requested.
+	 * @param {orion.editor.ContentAssistProvider.Context} context
+	 * @returns {Object[]} This provider's proposals for the given buffer and offset.
+	 */
+	/**
+	 * @name orion.editor.ContentAssistProvider.Context
+	 * @class
+	 * @property {String} line The text of the line on which content assist is being requested.
+	 * @property {String} prefix Any non-whitespace, non-symbol characters preceding the offset.
+	 * @property {orion.textview.Selection} selection The current selection.
+	 */
+
+	/**
+	 * @name orion.editor.ContentAssist
+	 * @class Provides content assist for a TextView.
+	 * @description Creates a <code>ContentAssist</code> for a TextView. A ContentAssist consults a set of 
+	 * {@link orion.editor.ContentAssistProvider}s to obtain proposals for text that may be inserted into a
+	 * TextView at a given offset.<p>
+	 * A ContentAssist is generally activated by its TextView action, at which point it computes the set of 
+	 * proposals available. It will re-compute the proposals in response to subsequent changes on the TextView 
+	 * (for example, user typing) for as long as the ContentAssist is active. A proposal may be applied by calling 
+	 * {@link #apply}, after which the ContentAssist becomes deactivated. An active ContentAssist may be deactivated
+	 * by calling {@link #deactivate}.<p>
+	 * A ContentAssist dispatches events when it becomes activated or deactivated, and when proposals have been computed.
+	 * @param {orion.textview.TextView} textView The TextView to provide content assist for.
+	 * @borrows orion.textview.EventTarget#addEventListener as #addEventListener
+	 * @borrows orion.textview.EventTarget#removeEventListener as #removeEventListener
+	 * @borrows orion.textview.EventTarget#dispatchEvent as #dispatchEvent
+	 */
+	/**
+	 * Dispatched when a ContentAssist is about to be activated.
+	 * @name orion.editor.ContentAssist#ActivatingEvent
+	 * @event
+	 */
+	/**
+	 * Dispatched when a ContentAssist is about to be deactivated.
+	 * @name orion.editor.ContentAssist#DeactivatingEvent
+	 * @event
+	 */
+	/**
+	 * Dispatched when a ContentAssist has applied a proposal. <p>This event's <code>data</code> field gives information
+	 * about the proposal that was applied.
+	 * @name orion.editor.ContentAssist#ProposalAppliedEvent
+	 * @event
+	 */
+	/**
+	 * Dispatched whenever a ContentAssist has obtained proposals from its providers. <p>This event's
+	 * <code>data</code> field gives information about the proposals.
+	 * @name orion.editor.ContentAssist#ProposalsComputedEvent
+	 * @event
+	 */
+	// INACTIVE --Ctrl+Space--> ACTIVE --ModelChanging--> FILTERING
+	var State = {
+		INACTIVE: 1,
+		ACTIVE: 2,
+		FILTERING: 3
+	};
+	function ContentAssist(textView) {
+		this.textView = textView;
+		this.state = State.INACTIVE;
+		this.providers = [];
+		var self = this;
+		this.contentAssistListener = {
+			onModelChanging: function(event) {
+				if (self.isDeactivatingChange(event)) {
+					self.setState(State.INACTIVE);
+				} else {
+					if (self.state === State.ACTIVE) {
+						self.setState(State.FILTERING);
+					}
+				}
+			},
+			onScroll: function(event) {
+				self.setState(State.INACTIVE);
+			},
+			onSelection: function(event) {
+				var state = self.state;
+				if (state === State.ACTIVE || state === State.FILTERING) {
+					self.computeProposals();
+					self.setState(State.FILTERING);
+				}
+			}
+		};
+		var isMac = navigator.platform.indexOf("Mac") !== -1;
+		textView.setKeyBinding(isMac ? new mKeyBinding.KeyBinding(' ', false, false, false, true) : new mKeyBinding.KeyBinding(' ', true), messages.contentAssist);
+		textView.setAction(messages.contentAssist, function() {
+			self.activate();
+			return true;
+		});
+	}
+	ContentAssist.prototype = /** @lends orion.editor.ContentAssist.prototype */ {
+		/**
+		 * Applies the given proposal to the TextView.
+		 * @param {Object} [proposal]
+		 * @returns {Boolean} <code>true</code> if the proposal was applied; <code>false</code> if no proposal was provided.
+		 */
+		apply: function(proposal) {
+			if (!proposal) {
+				return false;
+			}
+			var offset = this.textView.getCaretOffset();
+			var data = {
+				proposal: proposal,
+				start: offset,
+				end: offset
+			};
+			this.setState(State.INACTIVE);
+			var proposalText = proposal.proposal || proposal;
+			this.textView.setText(proposalText, offset, offset);
+			this.dispatchEvent({type: "ProposalApplied", data: data});
+			return true;
+		},
+		activate: function() {
+			if (this.state === State.INACTIVE) {
+				this.setState(State.ACTIVE);
+			}
+		},
+		deactivate: function() {
+			this.setState(State.INACTIVE);
+		},
+		/** @returns {orion.textview.TextView} */
+		getTextView: function() {
+			return this.textView;
+		},
+		/** @returns {Boolean} */
+		isActive: function() {
+			return this.state === State.ACTIVE || this.state === State.FILTERING;
+		},
+		/** @returns {Boolean} <code>true</code> if the event describes a change that should deactivate content assist. */
+		isDeactivatingChange: function(/**orion.textview.ModelChangingEvent*/ event) {
+			var deletion = event.removedCharCount > 0 && event.addedCharCount === 0,
+			    view = this.textView,
+			    overWhitespace = (event.start+1 <= view.getModel().getCharCount()) && /^\s*$/.test(view.getText(event.start, event.start+1));
+			return event.removedLineCount > 0 || (deletion && overWhitespace);
+		},
+		/** @private */
+		setState: function(state) {
+			var eventType;
+			if (state === State.ACTIVE) {
+				eventType = "Activating";
+			} else if (state === State.INACTIVE) {
+				eventType = "Deactivating";
+			}
+			if (eventType) {
+				this.dispatchEvent({type: eventType});
+			}
+			this.state = state;
+			this.onStateChange(state);
+		},
+		/** @private */
+		onStateChange: function(state) {
+			if (state === State.INACTIVE) {
+				if (this.listenerAdded) {
+					this.textView.removeEventListener("ModelChanging", this.contentAssistListener.onModelChanging);
+					this.textView.removeEventListener("Scroll", this.contentAssistListener.onScroll);
+					this.textView.removeEventListener("Selection", this.contentAssistListener.onSelection);
+					this.listenerAdded = false;
+				}
+			} else if (state === State.ACTIVE) {
+				if (!this.listenerAdded) {
+					this.textView.addEventListener("ModelChanging", this.contentAssistListener.onModelChanging);
+					this.textView.addEventListener("Scroll", this.contentAssistListener.onScroll);
+					this.textView.addEventListener("Selection", this.contentAssistListener.onSelection);
+					this.listenerAdded = true;
+				}
+				this.computeProposals();
+			}
+		},
+		/**
+		 * Computes the proposals at the TextView's current caret offset.
+		 */
+		computeProposals: function() {
+			var self = this;
+			var offset = this.textView.getCaretOffset();
+			this._computeProposals(offset).then(function(proposals) {
+				self.dispatchEvent({type: "ProposalsComputed", data: {proposals: proposals}});
+			});
+		},
+		/** @private */
+		getPrefixStart: function(end) {
+			var index = end;
+			while (index > 0 && /[A-Za-z0-9_]/.test(this.textView.getText(index - 1, index))) {
+				index--;
+			}
+			return index;
+		},
+		/**
+		 * @private
+		 * Retrieves the proposals at the given offset.
+		 * @param {Number} offset The caret offset.
+		 * @returns {Promise} A promise that will provide the proposals.
+		 */
+		_computeProposals: function(offset) {
+			var proposals = [],
+			    numComplete = 0,
+			    promise = new Promise(),
+			    providers = this.providers;
+			function collectProposals(result) {
+				if (result) {
+					proposals = proposals.concat(result);
+				}
+				if (++numComplete === providers.length) {
+					promise.done(proposals);
+				}
+			}
+			function errback() {
+				if (++numComplete === providers.length) {
+					promise.done(proposals);
+				}
+			}
+			var textView = this.textView, textModel = textView.getModel();
+			var buffer = textView.getText();
+			var context = {
+				line: textModel.getLine(textModel.getLineAtOffset(offset)),
+				prefix: textView.getText(this.getPrefixStart(offset), offset),
+				selection: textView.getSelection()
+			};
+			for (var i=0; i < providers.length; i++) {
+				var provider = providers[i];
+				//prefer computeProposals but support getProposals for backwards compatibility
+				var proposalsFunc = provider.getProposals;
+				if (typeof provider.computeProposals === "function") {
+					proposalsFunc = provider.computeProposals;
+				}
+				var proposalsPromise = proposalsFunc.apply(provider, [buffer, offset, context]);
+				if (proposalsPromise && proposalsPromise.then) {
+					proposalsPromise.then(collectProposals, errback);
+				} else {
+					collectProposals(proposalsPromise);
+				}
+			}
+			return promise;
+		},
+		/**
+		 * Sets the content assist providers that this ContentAssist will consult to obtain proposals.
+		 * @param {orion.editor.ContentAssistProvider[]} providers The providers.
+		 */
+		setProviders: function(providers) {
+			this.providers = providers.slice(0);
+		}
+	};
+	mEventTarget.EventTarget.addMixin(ContentAssist.prototype);
+
+	/**
+	 * @name orion.editor.ContentAssistMode
+	 * @class Editor mode for interacting with content assist proposals.
+	 * @description Creates a ContentAssistMode. A ContentAssistMode is a key mode for {@link orion.editor.Editor}
+	 * that provides interaction with content assist proposals retrieved from an {@link orion.editor.ContentAssist}. 
+	 * Interaction is performed via the {@link #lineUp}, {@link #lineDown}, and {@link #enter} actions. An 
+	 * {@link orion.editor.ContentAssistWidget} may optionally be provided to display which proposal is currently selected.
+	 * @param {orion.editor.ContentAssist} contentAssist
+	 * @param {orion.editor.ContentAssistWidget} [ContentAssistWidget]
+	 */
+	function ContentAssistMode(contentAssist, ContentAssistWidget) {
+		this.contentAssist = contentAssist;
+		this.widget = ContentAssistWidget;
+		this.proposals = [];
+		var self = this;
+		this.contentAssist.addEventListener("ProposalsComputed", function(event) {
+			self.proposals = event.data.proposals;
+			self.selectedIndex = self.proposals.length ? 0 : -1;
+		});
+	}
+	ContentAssistMode.prototype = /** @lends orion.editor.ContentAssistMode.prototype */ {
+		cancel: function() {
+			this.getContentAssist().deactivate();
+		},
+		/** @private */
+		getContentAssist: function() {
+			return this.contentAssist;
+		},
+		isActive: function() {
+			return this.getContentAssist().isActive();
+		},
+		lineUp: function() {
+			this.selectedIndex = (this.selectedIndex === 0) ? this.proposals.length - 1 : this.selectedIndex - 1;
+			if (this.widget) {
+				this.widget.setSelectedIndex(this.selectedIndex);
+			}
+			return true;
+		},
+		lineDown: function() {
+			this.selectedIndex = (this.selectedIndex === this.proposals.length - 1) ? 0 : this.selectedIndex + 1;
+			if (this.widget) {
+				this.widget.setSelectedIndex(this.selectedIndex);
+			}
+			return true;
+		},
+		enter: function() {
+			var proposal = this.proposals[this.selectedIndex] || null;
+			return this.contentAssist.apply(proposal);
+		},
+		tab: function() {
+			if (this.widget) {
+				this.widget.createAccessible(this);
+				this.widget.parentNode.focus();
+				return true;
+			} else {
+				return false;
+			}
+		}
+	};
+
+	/**
+	 * @name orion.editor.ContentAssistWidget
+	 * @class Displays proposals from a {@link orion.editor.ContentAssist}.
+	 * @description Creates a ContentAssistWidget that will display proposals from the given {@link orion.editor.ContentAssist}
+	 * in the given <code>parentNode</code>. Clicking a proposal will cause the ContentAssist to apply that proposal.
+	 * @param {orion.editor.ContentAssist} contentAssist
+	 * @param {String|DomNode} parentNode The ID or DOM node to use as the parent for displaying proposals.
+	 */
+	function ContentAssistWidget(contentAssist, parentNode) {
+		this.contentAssist = contentAssist;
+		this.parentNode = typeof parentNode === "string" ? document.getElementById(parentNode) : parentNode;
+		this.textView = this.contentAssist.getTextView();
+		this.textViewListenerAdded = false;
+		var self = this;
+		this.textViewListener = {
+			onMouseDown: function(event) {
+				if (event.event.target.parentElement !== self.parentNode) {
+					self.contentAssist.deactivate();
+				}
+				// ignore the event if this is a click inside of the parentNode
+				// the click is handled by the onClick() function
+			}
+		};
+		this.contentAssist.addEventListener("ProposalsComputed", function(event) {
+			self.setProposals(event.data.proposals);
+			self.show();
+			if (!self.textViewListenerAdded) {
+				self.textView.addEventListener("MouseDown", self.textViewListener.onMouseDown);
+				self.textViewListenerAdded = true;
+			}
+		});
+		this.contentAssist.addEventListener("Deactivating", function(event) {
+			self.setProposals([]);
+			self.hide();
+			if (self.textViewListenerAdded) {
+				self.textView.removeEventListener("MouseDown", self.textViewListener.onMouseDown);
+				self.textViewListenerAdded = false;
+			}
+			self.textViewListenerAdded = false;
+		});
+	}
+	ContentAssistWidget.prototype = /** @lends orion.editor.ContentAssistWidget.prototype */ {
+		/** @private */
+		onClick: function(e) {
+			this.contentAssist.apply(this.getProposal(e.target));
+			this.textView.focus();
+		},
+		/** @private */
+		createDiv: function(proposal, isSelected, parent, itemIndex) {
+			var div = document.createElement("div");
+			div.id = "contentoption" + itemIndex;
+			div.setAttribute("role", "option");
+			if (isSelected) {
+				div.className = "selected";
+				this.parentNode.setAttribute("aria-activedescendant", div.id);
+			}
+			var textNode = document.createTextNode(proposal);
+			div.appendChild(textNode, div);
+			parent.appendChild(div);
+		},
+		/** @private */
+		createAccessible: function(mode) {
+			if(!this._isAccessible) {
+				this.parentNode.addEventListener("keydown", function(evt) {
+					evt.preventDefault();
+					if(evt.keyCode === 27) {return mode.cancel(); }
+					else if(evt.keyCode === 38) { return mode.lineUp(); }
+					else if(evt.keyCode === 40) { return mode.lineDown(); }
+					else if(evt.keyCode === 13) { return mode.enter(); }
+					return false;
+				});
+			}
+			this._isAccessible = true;
+		},
+		/** @private */
+		getDisplayString: function(proposal) {
+			//for simple string content assist, the display string is just the proposal
+			if (typeof proposal === "string") {
+				return proposal;
+			}
+			//return the description if applicable
+			if (proposal.description && typeof proposal.description === "string") {
+				return proposal.description;
+			}
+			//by default return the straight proposal text
+			return proposal.proposal;
+		},
+		/**
+		 * @private
+		 * @returns {Object} The proposal represented by the given node.
+		 */
+		getProposal: function(/**DOMNode*/ node) {
+			var nodeIndex = 0;
+			for (var child = this.parentNode.firstChild; child !== null; child = child.nextSibling) {
+				if (child === node) {
+					return this.proposals[nodeIndex] || null;
+				}
+				nodeIndex++;
+			}
+			return null;
+		},
+		/** Sets the index of the currently selected proposal. */
+		setSelectedIndex: function(/**Number*/ index) {
+			this.selectedIndex = index;
+			this.selectNode(this.parentNode.childNodes[this.selectedIndex]);
+		},
+		/** @private */
+		selectNode: function(/**DOMNode*/ node) {
+			var nodes = this.parentNode.childNodes;
+			for (var i=0; i < nodes.length; i++) {
+				var child = nodes[i];
+				if (child.className === "selected") {
+					child.className = "";
+				}
+				if (child === node) {
+					child.className = "selected";
+					this.parentNode.setAttribute("aria-activedescendant", child.id);
+					child.focus();
+					if (child.offsetTop < this.parentNode.scrollTop) {
+						child.scrollIntoView(true);
+					} else if ((child.offsetTop + child.offsetHeight) > (this.parentNode.scrollTop + this.parentNode.clientHeight)) {
+						child.scrollIntoView(false);
+					}
+				}
+			}
+		},
+		setProposals: function(/**Object[]*/ proposals) {
+			this.proposals = proposals;
+		},
+		show: function() {
+			if (this.proposals.length === 0) {
+				this.hide();
+				return;
+			}
+			var caretLocation = this.textView.getLocationAtOffset(this.textView.getCaretOffset());
+			caretLocation.y += this.textView.getLineHeight();
+			this.parentNode.innerHTML = "";
+			for (var i = 0; i < this.proposals.length; i++) {
+				this.createDiv(this.getDisplayString(this.proposals[i]), i===0, this.parentNode, i);
+			}
+			this.textView.convert(caretLocation, "document", "page");
+			this.parentNode.style.position = "absolute";
+			this.parentNode.style.left = caretLocation.x + "px";
+			this.parentNode.style.top = caretLocation.y + "px";
+			this.parentNode.style.display = "block";
+			this.parentNode.scrollTop = 0;
+
+			// Make sure that the panel is never outside the viewport
+			var viewportWidth = document.documentElement.clientWidth,
+			    viewportHeight =  document.documentElement.clientHeight;
+			if (caretLocation.y + this.parentNode.offsetHeight > viewportHeight) {
+				this.parentNode.style.top = (caretLocation.y - this.parentNode.offsetHeight - this.textView.getLineHeight()) + "px";
+			}
+			if (caretLocation.x + this.parentNode.offsetWidth > viewportWidth) {
+				this.parentNode.style.left = (viewportWidth - this.parentNode.offsetWidth) + "px";
+			}
+			this.parentNode.onclick = this.onClick.bind(this);
+		},
+		hide: function() {
+			if(document.activeElement === this.parentNode) {
+				this.textView.focus();
+			}
+			this.parentNode.style.display = "none";
+			this.parentNode.onclick = null;
+		}
+	};
+	return {
+		ContentAssist: ContentAssist,
+		ContentAssistMode: ContentAssistMode,
+		ContentAssistWidget: ContentAssistWidget
+	};
+});
+/*******************************************************************************
+ * @license
+ * Copyright (c) 2011 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials are made 
+ * available under the terms of the Eclipse Public License v1.0 
+ * (http://www.eclipse.org/legal/epl-v10.html), and the Eclipse Distribution 
+ * License v1.0 (http://www.eclipse.org/org/documents/edl-v10.html). 
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+/*global define */
+
+define("orion/editor/jsContentAssist", [], function() {
+
+	/**
+	 * Properties common to all objects - ECMA 262, section 15.2.4.
+	 * @see addPropertyProposals
+	 */
+	var objectProps = [
+		{name: "toString"}, 
+		{name: "toLocaleString"}, 
+		{name: "valueOf"}, 
+		{name: "hasOwnProperty", args: ["property"]},
+		{name: "isPrototypeOf", args: ["object"]},
+		{name: "propertyIsEnumerable", args: ["property"]}
+	];
+
+	/**
+	 * Properties common to all Strings - ECMA 262, section 15.5.4
+	 * @see addPropertyProposals
+	 */
+	var stringProps = [
+		{name: "charAt", args: ["index"]},
+		{name: "charCodeAt", args: ["index"]},
+		{name: "concat", args: ["array"]},
+		{name: "indexOf", args: ["searchString", "[position]"]},
+		{name: "lastIndexOf", args: ["searchString", "[position]"]},
+		{name: "length", field: true},
+		{name: "localeCompare", args: ["object"]},
+		{name: "match", args: ["regexp"]},
+		{name: "replace", args: ["searchValue", "replaceValue"]},
+		{name: "search", args: ["regexp"]},
+		{name: "slice", args: ["start", "end"]},
+		{name: "split", args: ["separator", "[limit]"]},
+		{name: "substring", args: ["start", "[end]"]},
+		{name: "toLowerCase"},
+		{name: "toLocaleLowerCase"},
+		{name: "toUpperCase"},
+		{name: "toLocaleUpperCase"},
+		{name: "trim"}
+	];
+
+	/**
+	 * Returns a string of all the whitespace at the start of the current line.
+	 * @param {String} buffer The document
+	 * @param {Integer} offset The current selection offset
+	 */
+	function leadingWhitespace(buffer, offset) {
+		var whitespace = "";
+		offset = offset-1;
+		while (offset > 0) {
+			var c = buffer.charAt(offset--);
+			if (c === '\n' || c === '\r') {
+				//we hit the start of the line so we are done
+				break;
+			}
+			if (/\s/.test(c)) {
+				//we found whitespace to add it to our result
+				whitespace = c.concat(whitespace);
+			} else {
+				//we found non-whitespace, so reset our result
+				whitespace = "";
+			}
+
+		}
+		return whitespace;
+	}
+	
+	/**
+	 * Returns the current line up to, but not including, the prefix
+	 */
+	function prefixLine(prefix, buffer, startOffset) {
+		var offset = startOffset-1;
+		while (offset > 0) {
+			var c = buffer.charAt(offset);
+			if (c === '\n' || c === '\r') {
+				//we hit the start of the line so we are done
+				break;
+			}
+			offset--;
+		}
+		return buffer.substring(offset+1, (startOffset-prefix.length));
+	}
+	
+	/**
+	 * Attempts to infer the type of the receiver of a function.
+	 */
+	function inferType(prefix, buffer, offset) {
+		var line = prefixLine(prefix, buffer, offset);
+		//Note: we already know at this point the line ends with a dot
+		//if the last character is a quote and there is an odd number of quotes on the line, then we have a string literal
+		if (line.length > 1 && (line.charAt(line.length-2) === "\"" || line.charAt(line.length-2) === "'")) {
+			return "String";
+		}
+		//we failed to infer the type
+		return null;
+	}
+
+	/** 
+	 * Removes prefix from string.
+	 * @param {String} prefix
+	 * @param {String} string
+	 */
+	function chop(prefix, string) {
+		return string.substring(prefix.length);
+	}
+	
+	/**
+	 * Adds proposals for the given property descriptions (methods and fields) to the proposal list.
+	 * @param properties {Array} Array of property description objects. Each object
+	 * has a 'name' property indicating the function name, and an 'args' property
+	 * which is an array of strings indicating the function arguments. Example: {name: "charAt", args: ["index"]}.
+	 * A property can also have a 'field' boolean property indicating it is a field. If the 'field'
+	 * property is not specified it is assumed to be a function.
+	 * @param objectName {String} The name of the object associated with these functions
+	 * @param prefix {String} The content assist prefix
+	 * @param offset {Number} The buffer offset for which content assist was invoked.
+	 * @param proposals {Array} The current array of proposal objects.
+	 */
+	function addPropertyProposals(properties, objectName, prefix, offset, proposals) {
+		var text, description, positions, endOffset;
+		for (var i = 0; i < properties.length; i++) {
+			var name = properties[i].name;
+			//don't bother computing proposals that don't match
+			if (name.indexOf(prefix) !== 0) {
+				continue;
+			}
+			var args = properties[i].args;
+			if (!args || args.length === 0) {
+				//don't use linked mode for functions with no arguments
+				text = name + (properties[i].field ? "" : "()");
+				description = text + " - " + objectName;
+				proposals.push({proposal: chop(prefix, text), description: description});
+				continue;
+			}
+			text = name + "(";
+			//add linked mode position for each function argument
+			positions = [];
+			endOffset = offset + name.length+1 - prefix.length;
+			for (var argIndex = 0; argIndex < args.length; argIndex++) {
+				positions.push({offset: endOffset, length: args[argIndex].length});
+				endOffset += args[argIndex].length+2;//add extra for comma and space
+				//add argument to completion string
+				text += args[argIndex];
+				if (argIndex < args.length - 1) {
+					text += ", ";
+				}
+			}
+			text += ")";
+			description = text + " - " + objectName;
+			endOffset--;//no comma after last argument
+			proposals.push({proposal: chop(prefix, text), description: description, positions: positions, escapePosition: endOffset});
+		}
+	}
+
+	/**
+	 * Returns proposals for completion on members of an object
+	 */
+	function getMemberProposals(prefix, buffer, offset) {
+		var proposals = [];
+
+		var type = inferType(prefix, buffer, offset);
+		if (type === "String") {
+			addPropertyProposals(stringProps, "String", prefix, offset, proposals);
+		}
+		
+		//properties common to all objects
+		addPropertyProposals(objectProps, "Object", prefix, offset, proposals);
+
+		return proposals;
+	}
+
+	/**
+	 * Returns proposals for javascript templates
+	 */
+	function getTemplateProposals(prefix, buffer, offset) {
+		//any returned positions need to be offset based on current cursor position and length of prefix
+		var startOffset = offset-prefix.length;
+		var proposals = [];
+		var whitespace = leadingWhitespace(buffer, offset);
+		//common vars for each proposal
+		var text, description, positions, endOffset;
+		if ("if".indexOf(prefix) === 0) {
+			//if statement
+			text = "if (condition) {\n" + whitespace + "\t\n" + whitespace + '}';
+			description = "if - if statement";
+			positions = [{offset: startOffset+4, length: 9}];
+			endOffset = startOffset+whitespace.length+18;//after indentation inside if body
+			proposals.push({proposal: chop(prefix, text), description: description, positions: positions, escapePosition: endOffset});
+			//if/else statement
+			text = "if (condition) {\n" + whitespace + "\t\n" + whitespace + "} else {\n" + whitespace + "\t\n" + whitespace + "}";
+			description = "if - if else statement";
+			positions = [{offset: startOffset+4, length: 9}];
+			endOffset = startOffset+whitespace.length+18;//after indentation inside if body
+			proposals.push({proposal: chop(prefix, text), description: description, positions: positions, escapePosition: endOffset});
+		}
+		if ("for".indexOf(prefix) === 0) {
+			//for loop
+			text = "for (var i = 0; i < array.length; i++) {\n" + whitespace + "\t\n" + whitespace + '}';
+			description = "for - iterate over array";
+			positions = [{offset: startOffset+9, length: 1}, {offset: startOffset+20, length: 5}];
+			endOffset = startOffset+whitespace.length+42;//after indentation inside for loop body
+			proposals.push({proposal: chop(prefix, text), description: description, positions: positions, escapePosition: endOffset});
+			//for ... in statement
+			text = "for (var property in object) {\n" + whitespace + "\tif (object.hasOwnProperty(property)) {\n" + 
+				whitespace + "\t\t\n" + whitespace + "\t}\n" + whitespace + '}';
+			description = "for..in - iterate over properties of an object";
+			positions = [{offset: startOffset+9, length: 8}, {offset: startOffset+21, length: 6}];
+			endOffset = startOffset+(2*whitespace.length)+73;//after indentation inside if statement body
+			proposals.push({proposal: chop(prefix, text), description: description, positions: positions, escapePosition: endOffset});
+		}
+		//while loop
+		if ("while".indexOf(prefix) === 0) {
+			text = "while (condition) {\n" + whitespace + "\t\n" + whitespace + '}';
+			description = "while - while loop with condition";
+			positions = [{offset: startOffset+7, length: 9}];
+			endOffset = startOffset+whitespace.length+21;//after indentation inside while loop body
+			proposals.push({proposal: chop(prefix, text), description: description, positions: positions, escapePosition: endOffset});
+		}
+		//do/while loop
+		if ("do".indexOf(prefix) === 0) {
+			text = "do {\n" + whitespace + "\t\n" + whitespace + "} while (condition);";
+			description = "do - do while loop with condition";
+			positions = [{offset: startOffset+16, length: 9}];
+			endOffset = startOffset+whitespace.length+6;//after indentation inside do/while loop body
+			proposals.push({proposal: chop(prefix, text), description: description, positions: positions, escapePosition: endOffset});
+		}
+		//switch statement
+		if ("switch".indexOf(prefix) === 0) {
+			text = "switch (expression) {\n" + whitespace + "\tcase value1:\n" + whitespace + "\t\t\n" +
+			whitespace + "\t\tbreak;\n" + whitespace + "\tdefault:\n" + whitespace + "}";
+			description = "switch - switch case statement";
+			positions = [{offset: startOffset+8, length: 10}, {offset: startOffset + 28, length: 6}];
+			endOffset = startOffset+(2*whitespace.length)+38;//after indentation inside first case statement
+			proposals.push({proposal: chop(prefix, text), description: description, positions: positions, escapePosition: endOffset});
+		}
+		if ("try".indexOf(prefix) === 0) {
+			//try..catch statement
+			text = "try {\n" + whitespace + "\t\n" + whitespace + "} catch (err) {\n" + whitespace + "}";
+			description = "try - try..catch statement";
+			endOffset = startOffset+whitespace.length+7;//after indentation inside try statement
+			proposals.push({proposal: chop(prefix, text), description: description, escapePosition: endOffset});
+			//try..catch..finally statement
+			text = "try {\n" + whitespace + "\t\n" + whitespace + "} catch (err) {\n" + whitespace +
+				"} finally {\n" + whitespace + "}";
+			description = "try - try..catch statement with finally block";
+			endOffset = startOffset+whitespace.length+7;//after indentation inside try statement
+			proposals.push({proposal: chop(prefix, text), description: description, escapePosition: endOffset});
+		}
+		return proposals;
+	}
+
+	/**
+	 * Returns proposals for javascript keywords.
+	 */
+	function getKeyWordProposals(prefix, buffer, offset) {
+		var keywords = ["break", "case", "catch", "continue", "debugger", "default", "delete", "do", "else", "finally", 
+			"for", "function", "if", "in", "instanceof", "new", "return", "switch", "this", "throw", "try", "typeof", 
+			"var", "void", "while", "with"];
+		var proposals = [];
+		for (var i = 0; i < keywords.length; i++) {
+			if (keywords[i].indexOf(prefix) === 0) {
+				proposals.push({proposal: chop(prefix, keywords[i]), description: keywords[i] });
+			}
+		}
+		return proposals;
+	}
+
+	/**
+	 * Given a block of javascript and a current index, skip any string literal or
+	 * comment starting at that position. Returns the index of the character after the
+	 * end of the comment or string. If the current character does not start a comment
+	 * or string, the unchanged index is returned.
+	 */
+	function skipCommentsAndStrings(buffer, index) {
+		var c = buffer.charAt(index);
+		switch (c) {
+			case "/" :
+				if (buffer.charAt(index+1) === "/") {
+					//we hit a line comment.. skip to end of line
+					index = buffer.indexOf("\n", index) + 2;
+					if (index === 1) {
+						return buffer.length;
+					}
+				} else if (buffer.charAt(index+1) === "*") {
+					//we hit a block comment, so jump to end of comment
+					index = buffer.indexOf("*/", index+2) + 2;
+					if (index === 1) {
+						return buffer.length;
+					}
+				} else {
+					//we hit a regular expression, so jump to end of expression or end of line
+					var lineEnd = buffer.indexOf("\n", index);
+					if (lineEnd < 0) {
+						lineEnd = buffer.length;
+					}
+					var regexEnd = buffer.indexOf("/", index+1);
+					//skip escaped frontslash inside regex
+					while (regexEnd > 0 && regexEnd < lineEnd && buffer.charAt(regexEnd-1) === "\\") {
+						regexEnd = buffer.indexOf("/", regexEnd+1);
+					}
+					index = (regexEnd > 0 && lineEnd > regexEnd) ? regexEnd : lineEnd;
+					//skip the regex or line terminator character
+					index++;
+				}
+				break;
+			case "\"":
+			case "\'":
+				//we hit a string so jump to end of string or line, whichever comes first
+				var lineEnd = buffer.indexOf("\n", index);
+				if (lineEnd < 0) {
+					lineEnd = buffer.length;
+				}
+				var stringEnd = buffer.indexOf(c, index+1);
+				//skip escaped quotes
+				while (stringEnd > 0 && stringEnd < lineEnd && buffer.charAt(stringEnd-1) === "\\") {
+					stringEnd = buffer.indexOf(c, stringEnd+1);
+				}
+				index = (stringEnd > 0 && lineEnd > stringEnd) ? stringEnd : lineEnd;
+				//skip the string or line terminator character
+				index++;
+				break;
+		}
+		return index;
+	}
+
+	/**
+	 * Given a block of javascript and the index of an opening brace, return the location
+	 * of the matching closing brace, or the end of the block if no matching brace is found.
+	 */
+	function findClosingBrace(buffer, start) {
+		var index = start, braceDepth = 0;
+		while (index < buffer.length) {
+			index = skipCommentsAndStrings(buffer, index);
+			var c = buffer.charAt(index);
+			switch (c) {
+				case "{":
+					braceDepth++;
+					break;
+				case "}":
+					if (--braceDepth === 0) {
+						//we found the end!
+						return index;
+					}
+					break;
+			}
+			index++;
+		}
+		return index;
+	}
+	
+	/**
+	 * Returns an array of all variables declared in the given block. Nested closures
+	 * are skipped.
+	 * @param block {String} A block of JavaScript code
+	 * @return {Array(String)} All variable names declared in the block
+	 */
+	function collectVariables(block) {
+		var variables = [];
+		var index = 0;
+		while ((index = skipCommentsAndStrings(block, index)) < block.length) {
+			var subBlock = block.substring(index);
+			if (subBlock.match(/^var\s/)) {
+				//block starts a variable declaration statement
+				//TODO variable assigned to a function has no semi-colon
+				var endDeclaration = block.indexOf(";", index);
+				if (endDeclaration < 0) {
+					endDeclaration = block.length;
+				}
+				//TODO handle multiple declarations in a single statement
+				var names = block.substring(index+3, endDeclaration).match(/[\w]+/);
+				if (names) {
+					variables.push(names[0]);
+					index += names[0].length;
+				}
+				
+				//skip to end of variable declaration
+				index = endDeclaration+1;
+			} else if (subBlock.match(/^function[\s(]/)) {
+				//block starts a function declaration, so skip the function
+				index = findClosingBrace(block, index);
+			} else {
+				//skip any words and trailing whitespace that start at current cursor position
+				var words = block.substring(index).match(/^\w[\w\s\()]+/);
+				if (words) {
+					index += words[0].length;
+				} else {
+					//nothing interesting here, go to next char and repeat
+					index++;
+				}
+			}
+		}
+		return variables;
+	}
+	
+	/**
+	 * Given a block of javascript, and a current cursor position, return the string of
+	 * the enclosing function. Returns null if no function is founed. The returned
+	 * function might not be well-formed but this function will make a best effort.
+	 */
+	function findEnclosingFunction(buffer, offset) {
+		var block = buffer.substring(0, offset);
+		var lastFunction = block.lastIndexOf("function");
+		if (lastFunction >= 0) {
+			var funcStart = block.indexOf("{", lastFunction);
+			var funcEnd = findClosingBrace(buffer, funcStart);
+			if (funcEnd < offset) {
+				//this is a peer function - look for its parent closure
+				return findEnclosingFunction(buffer, lastFunction);
+			}
+			//we found the enclosing function
+			return buffer.substring(lastFunction, funcEnd);
+		}
+		//nothing found
+		return null;
+	}
+
+	/**
+	 * Returns proposals for variables and arguments within the current function scope.
+	 */
+	function recursiveGetFunctionProposals(prefix, buffer, startOffset) {
+		var proposals = [];
+		var start, i;
+		
+		//search only the function containing the current cursor position
+		var block = findEnclosingFunction(buffer, startOffset);
+		var funcStart = 0;
+		if (block) {
+			funcStart = buffer.indexOf(block);
+			//collect function arguments
+			start = block.indexOf("(");
+			var end = block.indexOf(")");
+			if (start >= 0 && end >= 0) {
+				var argList = block.substring(start+1, end);
+				var args = argList.split(",");
+				for (i = 0; i < args.length; i++) {
+					var arg = args[i].trim();
+					if (arg.indexOf(prefix) === 0) {
+						proposals.push({proposal: chop(prefix, arg), description: arg});
+					}
+				}
+			}
+			//skip to opening brace to start function
+			start = block.indexOf("{");
+			if (start > 0) {
+				block = block.substring(start+1);
+			}
+		} else {
+			//no function found, assume the whole script is one closure
+			block = buffer;
+		}
+		//add proposals for all variables in the function
+		var variables = collectVariables(block);
+		for (i = 0; i < variables.length; i++) {
+			if (variables[i].indexOf(prefix) === 0) {
+				proposals.push({proposal: chop(prefix, variables[i]), description: variables[i]});
+			}
+		}
+		//recurse on parent closure
+		if (funcStart > 0) {
+			proposals = proposals.concat(recursiveGetFunctionProposals(prefix, buffer, funcStart));
+		}
+		return proposals;
+	}
+	
+	/**
+	 * Given a block of javascript, remove all comments and literals (strings, regex).
+	 * @param block {String} The javascript text
+	 */
+	function removeCommentsAndLiterals(block) {
+		var cleanBlock = "";
+		var index = 0;
+		while (index < block.length) {
+			index = skipCommentsAndStrings(block, index);
+			cleanBlock += block.charAt(index++);
+		}
+		return cleanBlock;
+	}
+	
+	/**
+	 * Returns proposals for variables and arguments within the current function scope.
+	 */
+	function getFunctionProposals(prefix, buffer, startOffset) {
+		var bufferPrefix = buffer.substring(0,startOffset);
+		var cleanBuffer = removeCommentsAndLiterals(bufferPrefix);
+		var removedChars = bufferPrefix.length-cleanBuffer.length;
+		return recursiveGetFunctionProposals(prefix, cleanBuffer, startOffset-removedChars);
+	}
+
+	/**
+	 * @name orion.editor.JavaScriptContentAssistProvider
+	 * @class Provides content assist for JavaScript keywords.
+	 */
+
+	function JavaScriptContentAssistProvider() {}
+
+	JavaScriptContentAssistProvider.prototype = /** @lends orion.editor.JavaScriptContentAssistProvider.prototype */
+	{
+		computeProposals: function(buffer, offset, context) {
+			var prefix = context.prefix;
+			var proposals = [];
+			if (offset > 0) {
+				//if the character preceding the prefix is a '.' character, then we are completing an object member
+				var precedingChar = buffer.charAt(offset - prefix.length - 1);
+				if (precedingChar === '.') {
+					return getMemberProposals(prefix, buffer, offset);
+				}
+			}
+			//we are not completing on an object member, so suggest templates and keywords
+			proposals = proposals.concat(getFunctionProposals(prefix, buffer, offset-prefix.length));
+			proposals = proposals.concat(getTemplateProposals(prefix, buffer, offset));
+			proposals = proposals.concat(getKeyWordProposals(prefix, buffer, offset));
+			return proposals;
+		}
+	};
+
+	return {
+		JavaScriptContentAssistProvider: JavaScriptContentAssistProvider
+	};
+});/*******************************************************************************
+ * @license
+ * Copyright (c) 2011 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials are made 
+ * available under the terms of the Eclipse Public License v1.0 
+ * (http://www.eclipse.org/legal/epl-v10.html), and the Eclipse Distribution 
+ * License v1.0 (http://www.eclipse.org/org/documents/edl-v10.html). 
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+/*global define */
+
+define("orion/editor/cssContentAssist", [], function() {
+	var keywords = ["alignment-adjust", "alignment-baseline", "animation", "animation-delay", "animation-direction", "animation-duration",
+			"animation-iteration-count", "animation-name", "animation-play-state", "animation-timing-function", "appearance",
+			"azimuth", "backface-visibility", "background", "background-attachment", "background-clip", "background-color",
+			"background-image", "background-origin", "background-position", "background-repeat", "background-size", "baseline-shift",
+			"binding", "bleed", "bookmark-label", "bookmark-level", "bookmark-state", "bookmark-target", "border", "border-bottom",
+			"border-bottom-color", "border-bottom-left-radius", "border-bottom-right-radius", "border-bottom-style", "border-bottom-width",
+			"border-collapse", "border-color", "border-image", "border-image-outset", "border-image-repeat", "border-image-slice",
+			"border-image-source", "border-image-width", "border-left", "border-left-color", "border-left-style", "border-left-width",
+			"border-radius", "border-right", "border-right-color", "border-right-style", "border-right-width", "border-spacing", "border-style",
+			"border-top", "border-top-color", "border-top-left-radius", "border-top-right-radius", "border-top-style", "border-top-width",
+			"border-width", "bottom", "box-align", "box-decoration-break", "box-direction", "box-flex", "box-flex-group", "box-lines",
+			"box-ordinal-group", "box-orient", "box-pack", "box-shadow", "box-sizing", "break-after", "break-before", "break-inside",
+			"caption-side", "clear", "clip", "color", "color-profile", "column-count", "column-fill", "column-gap", "column-rule",
+			"column-rule-color", "column-rule-style", "column-rule-width", "column-span", "column-width", "columns", "content", "counter-increment",
+			"counter-reset", "crop", "cue", "cue-after", "cue-before", "cursor", "direction", "display", "dominant-baseline",
+			"drop-initial-after-adjust", "drop-initial-after-align", "drop-initial-before-adjust", "drop-initial-before-align", "drop-initial-size",
+			"drop-initial-value", "elevation", "empty-cells", "fit", "fit-position", "flex-align", "flex-flow", "flex-inline-pack", "flex-order",
+			"flex-pack", "float", "float-offset", "font", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style",
+			"font-variant", "font-weight", "grid-columns", "grid-rows", "hanging-punctuation", "height", "hyphenate-after",
+			"hyphenate-before", "hyphenate-character", "hyphenate-lines", "hyphenate-resource", "hyphens", "icon", "image-orientation",
+			"image-rendering", "image-resolution", "inline-box-align", "left", "letter-spacing", "line-height", "line-stacking",
+			"line-stacking-ruby", "line-stacking-shift", "line-stacking-strategy", "list-style", "list-style-image", "list-style-position",
+			"list-style-type", "margin", "margin-bottom", "margin-left", "margin-right", "margin-top", "mark", "mark-after", "mark-before",
+			"marker-offset", "marks", "marquee-direction", "marquee-loop", "marquee-play-count", "marquee-speed", "marquee-style", "max-height",
+			"max-width", "min-height", "min-width", "move-to", "nav-down", "nav-index", "nav-left", "nav-right", "nav-up", "opacity", "orphans",
+			"outline", "outline-color", "outline-offset", "outline-style", "outline-width", "overflow", "overflow-style", "overflow-x",
+			"overflow-y", "padding", "padding-bottom", "padding-left", "padding-right", "padding-top", "page", "page-break-after", "page-break-before",
+			"page-break-inside", "page-policy", "pause", "pause-after", "pause-before", "perspective", "perspective-origin", "phonemes", "pitch",
+			"pitch-range", "play-during", "position", "presentation-level", "punctuation-trim", "quotes", "rendering-intent", "resize",
+			"rest", "rest-after", "rest-before", "richness", "right", "rotation", "rotation-point", "ruby-align", "ruby-overhang", "ruby-position",
+			"ruby-span", "size", "speak", "speak-header", "speak-numeral", "speak-punctuation", "speech-rate", "stress", "string-set", "table-layout",
+			"target", "target-name", "target-new", "target-position", "text-align", "text-align-last", "text-decoration", "text-emphasis",
+			"text-height", "text-indent", "text-justify", "text-outline", "text-shadow", "text-transform", "text-wrap", "top", "transform",
+			"transform-origin", "transform-style", "transition", "transition-delay", "transition-duration", "transition-property",
+			"transition-timing-function", "unicode-bidi", "vertical-align", "visibility", "voice-balance", "voice-duration", "voice-family",
+			"voice-pitch", "voice-pitch-range", "voice-rate", "voice-stress", "voice-volume", "volume", "white-space", "white-space-collapse",
+			"widows", "width", "word-break", "word-spacing", "word-wrap", "z-index"];
+
+	function getCSSPrefix(buffer, offset) {
+		var index = offset;
+		while (index && /[A-Za-z\-]/.test(buffer.charAt(index - 1))) {
+			index--;
+		}
+		return index ? buffer.substring(index, offset) : "";
+	}
+
+	/**
+	 * @name orion.contentAssist.CssContentAssistProvider
+	 * @class Provides content assist for CSS keywords.
+	 */
+	function CssContentAssistProvider() {
+	}
+	CssContentAssistProvider.prototype = /** @lends orion.editor.CssContentAssistProvider.prototype */ {
+		/**
+		 * @param {String} buffer The entire buffer being edited.
+		 * @param {Number} offset The offset at which proposals will be inserted.
+		 * @param {Object} context Extra information about the editor state.
+		 */
+		computeProposals: function(buffer, offset, context) {
+			var cssPrefix = getCSSPrefix(buffer, offset);
+			var proposals = [];
+			for (var i=0; i < keywords.length; i++) {
+					var keyword = keywords[i];
+					if (keyword.indexOf(cssPrefix) === 0) {
+						proposals.push({
+							proposal: keyword.substring(cssPrefix.length),
+							description: keyword
+						});
+					}
+			}
+			return proposals;
+		}
+	};
+
+	return {
+		CssContentAssistProvider: CssContentAssistProvider
+	};
+});
 
 }
-window.knownOrionModules = ['examples/textview/textStyler', 'orion/textview/annotations', 'orion/textview/eventTarget', 'orion/editor/htmlGrammar', 'orion/editor/textMateStyler', 'orion/editor/regex', 'orion/textview/rulers', 'orion/textview/tooltip', 'orion/textview/textView', 'orion/textview/textModel', 'orion/textview/keyBinding', 'orion/textview/projectionTextModel', 'orion/textview/textDND', 'orion/textview/undoStack'];
+window.knownOrionModules = ['examples/textview/textStyler', 'orion/textview/annotations', 'orion/textview/eventTarget', 'orion/editor/htmlGrammar', 'orion/editor/textMateStyler', 'orion/editor/regex', 'orion/textview/rulers', 'orion/textview/tooltip', 'orion/textview/textView', 'orion/textview/textModel', 'orion/textview/keyBinding', 'orion/textview/projectionTextModel', 'orion/textview/textDND', 'orion/textview/undoStack', 'orion/editor/contentAssist', 'orion/editor/jsContentAssist', 'orion/editor/cssContentAssist'];
diff --git a/browser/devtools/sourceeditor/source-editor-orion.jsm b/browser/devtools/sourceeditor/source-editor-orion.jsm
--- a/browser/devtools/sourceeditor/source-editor-orion.jsm
+++ b/browser/devtools/sourceeditor/source-editor-orion.jsm
@@ -25,13 +25,36 @@ XPCOMUtils.defineLazyGetter(this, "orion
 });
 
 const ORION_SCRIPT = "chrome://browser/content/orion.js";
-const ORION_IFRAME = "data:text/html;charset=utf8,<!DOCTYPE html>" +
+const ORION_IFRAME = "data:text/html,<!DOCTYPE html>" +
   "<html style='height:100%' dir='ltr'>" +
-  "<head><meta charset='utf8'></head>" +
+  //"<title></title>" +
+  "<meta charset='utf-8'>" +
+  //"<style>" +
+  //".contentassist {" +
+  //"  display: none;" +
+  //"  background-color: #ffffff;" +
+  //"  padding: 2px;" +
+  //"  position: fixed;" +
+  //"  top: 100px;" +
+  //"  left: 100px;" +
+  //"  border: 1px solid #cccccc;" +
+  //"  z-index:10;" +
+  //"  cursor: default;" +
+  //"  overflow: auto;" +
+  //"  height: 150px;" +
+  //"  width: 200px;" +
+  //"}" +
+  //".contentassist .selected {" +
+  //"  background-color: #dddddd;" +
+  //"}" +
+  //"</style>" +
   "<body style='height:100%;margin:0;overflow:hidden'>" +
   "<div id='editor' style='height:100%'></div>" +
+  //"<div id='contentassist' class='contentassist'></div>" +
   "</body></html>";
 
+dump(ORION_IFRAME + '\n');
+
 const XUL_NS = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
 
 /**
@@ -136,6 +159,11 @@ const DEFAULT_KEYBINDINGS = [
     code: Ci.nsIDOMKeyEvent.DOM_VK_CLOSE_BRACKET,
     accel: true,
   },
+  {
+    action: "Autocompletion",
+    code: Ci.nsIDOMKeyEvent.DOM_VK_SPACE,
+    ctrl: true,
+  },
 ];
 
 if (Services.appinfo.OS == "WINNT" ||
@@ -184,6 +212,9 @@ SourceEditor.prototype = {
   _view: null,
   _iframe: null,
   _model: null,
+  _autocompletion: null,
+  _autocompleteWidget: null,
+  _autocompleteMode: null,
   _undoStack: null,
   _linesRuler: null,
   _annotationRuler: null,
@@ -420,6 +451,7 @@ SourceEditor.prototype = {
       "Comment/Uncomment": [this._doCommentUncomment, this],
       "Move to Bracket Opening": [this._moveToBracketOpening, this],
       "Move to Bracket Closing": [this._moveToBracketClosing, this],
+      "Autocompletion": [this._autocomplete, this],
     };
 
     for (let name in actions) {
@@ -1327,6 +1359,17 @@ SourceEditor.prototype = {
   },
 
   /**
+   * Autocompletes whatever is being edited from the current position of the
+   * cursor.
+   *
+   * @private
+   */
+  _autocomplete: function SE__autocomplete() {
+    // TODO
+    this._autocompletion.computeProposals();
+  },
+
+  /**
    * Add an event listener to the editor. You can use one of the known events.
    *
    * @see SourceEditor.EVENTS
@@ -1806,6 +1849,33 @@ SourceEditor.prototype = {
 
         this._styler = new TextStyler(this._view, aMode, this._annotationModel);
         this._styler.setFoldingEnabled(false);
+
+        // Both JS and CSS modes benefit from autocompletion.
+        let contentAssist = window.require("orion/editor/contentAssist");
+        let ContentAssist = contentAssist.ContentAssist;
+        let ContentAssistWidget = contentAssist.ContentAssistWidget;
+        let ContentAssistMode = contentAssist.ContentAssistMode;
+        this._autocompletion = new ContentAssist(this._view);
+
+        // We need a widget to interact with the proposals.
+        this._autocompleteWidget = new ContentAssistWidget(this._autocompletion,
+            // The following is the ID used in ORION_IFRAME.
+            'contentassist');
+        this._autocompleteMode = new ContentAssistMode(this._autocompletion,
+            this._autocompleteWidget);
+
+      case SourceEditor.MODES.JAVASCRIPT:
+        let jsAutocomplete = window.require("orion/editor/jsContentAssist");
+        this._autocompletion.setProviders([
+          new jsAutocomplete.JavaScriptContentAssistProvider(),
+        ]);
+        break;
+
+      case SourceEditor.MODES.CSS:
+        let cssAutocomplete = window.require("orion/editor/cssContentAssist");
+        this._autocompletion.setProviders([
+          new cssAutocomplete.CssContentAssistProvider(),
+        ]);
         break;
 
       case SourceEditor.MODES.HTML:
@@ -2103,4 +2173,6 @@ function orion_i18nUtil()
 
 define("i18n!orion/textview/nls/messages", [], orion_strings_proxy);
 define("orion/textview/i18nUtil", [], orion_i18nUtil);
+// The following is used by the "orion/editor/contentAssist" module.
+define("i18n!orion/editor/nls/messages", [], orion_strings_proxy);
 
diff --git a/browser/locales/en-US/chrome/browser/devtools/orion.properties b/browser/locales/en-US/chrome/browser/devtools/orion.properties
--- a/browser/locales/en-US/chrome/browser/devtools/orion.properties
+++ b/browser/locales/en-US/chrome/browser/devtools/orion.properties
@@ -13,4 +13,5 @@ matchingSearch=Matching Search
 currentSearch=Current Search
 currentLine=Current Line
 matchingBracket=Matching Bracket
-currentBracket=Current Bracket
\ No newline at end of file
+currentBracket=Current Bracket
+contentAssist=Autocompletion
